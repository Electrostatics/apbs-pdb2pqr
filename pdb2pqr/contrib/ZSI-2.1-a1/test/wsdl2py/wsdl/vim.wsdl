<?xml version="1.0" encoding="UTF-8" ?>
<definitions name="VIM" targetNamespace="urn:vim2"
   xmlns="http://schemas.xmlsoap.org/wsdl/"
   xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
   xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
   xmlns:vim2="urn:vim2"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
>
   <types>
      <schema
         targetNamespace="urn:vim2"
         xmlns="http://www.w3.org/2001/XMLSchema"
         xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
         xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
         xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
         xmlns:vim2="urn:vim2"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         elementFormDefault="qualified"
      >
         <complexType name="DynamicArray">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="val" type="xsd:anyType" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DynamicData">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="dynamicProperty" type="vim2:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DynamicProperty">
            <sequence>
               <element name="name" type="xsd:string" />
               <element name="val" type="xsd:anyType" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfDynamicProperty">
            <sequence>
               <element name="DynamicProperty" type="vim2:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostCommunication">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostCommunicationFault" type="vim2:HostCommunication"/>
         <complexType name="HostNotConnected">
            <complexContent>
               <extension base="vim2:HostCommunication">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostNotConnectedFault" type="vim2:HostNotConnected"/>
         <complexType name="HostNotReachable">
            <complexContent>
               <extension base="vim2:HostCommunication">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostNotReachableFault" type="vim2:HostNotReachable"/>
         <complexType name="InvalidArgument">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                     <element name="invalidProperty" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidArgumentFault" type="vim2:InvalidArgument"/>
         <complexType name="InvalidRequest">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidRequestFault" type="vim2:InvalidRequest"/>
         <complexType name="InvalidType">
            <complexContent>
               <extension base="vim2:InvalidRequest">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidTypeFault" type="vim2:InvalidType"/>
         <complexType name="ManagedObjectNotFound">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                     <element name="obj" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ManagedObjectNotFoundFault" type="vim2:ManagedObjectNotFound"/>
         <complexType name="MethodNotFound">
            <complexContent>
               <extension base="vim2:InvalidRequest">
                  <sequence>
                     <element name="receiver" type="vim2:ManagedObjectReference" />
                     <element name="method" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MethodNotFoundFault" type="vim2:MethodNotFound"/>
         <complexType name="NotEnoughLicenses">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughLicensesFault" type="vim2:NotEnoughLicenses"/>
         <complexType name="NotImplemented">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotImplementedFault" type="vim2:NotImplemented"/>
         <complexType name="NotSupported">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotSupportedFault" type="vim2:NotSupported"/>
         <complexType name="RequestCanceled">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RequestCanceledFault" type="vim2:RequestCanceled"/>
         <complexType name="SecurityError">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecurityErrorFault" type="vim2:SecurityError"/>
         <complexType name="SystemError">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SystemErrorFault" type="vim2:SystemError"/>
         <complexType name="InvalidCollectorVersion">
            <complexContent>
               <extension base="vim2:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidCollectorVersionFault" type="vim2:InvalidCollectorVersion"/>
         <complexType name="InvalidProperty">
            <complexContent>
               <extension base="vim2:MethodFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPropertyFault" type="vim2:InvalidProperty"/>
         <complexType name="PropertyFilterSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="propSet" type="vim2:PropertySpec" maxOccurs="unbounded" />
                     <element name="objectSet" type="vim2:ObjectSpec" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyFilterSpec">
            <sequence>
               <element name="PropertyFilterSpec" type="vim2:PropertyFilterSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PropertySpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="all" type="xsd:boolean" minOccurs="0" />
                     <element name="pathSet" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertySpec">
            <sequence>
               <element name="PropertySpec" type="vim2:PropertySpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ObjectSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="obj" type="vim2:ManagedObjectReference" />
                     <element name="skip" type="xsd:boolean" minOccurs="0" />
                     <element name="selectSet" type="vim2:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectSpec">
            <sequence>
               <element name="ObjectSpec" type="vim2:ObjectSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="SelectionSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfSelectionSpec">
            <sequence>
               <element name="SelectionSpec" type="vim2:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="TraversalSpec">
            <complexContent>
               <extension base="vim2:SelectionSpec">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="path" type="xsd:string" />
                     <element name="skip" type="xsd:boolean" minOccurs="0" />
                     <element name="selectSet" type="vim2:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DestroyPropertyFilter">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyPropertyFilterResponse">
            <complexType />
         </element>
         <complexType name="ObjectContent">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="obj" type="vim2:ManagedObjectReference" />
                     <element name="propSet" type="vim2:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim2:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectContent">
            <sequence>
               <element name="ObjectContent" type="vim2:ObjectContent" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UpdateSet">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="filterSet" type="vim2:PropertyFilterUpdate" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PropertyFilterUpdate">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="filter" type="vim2:ManagedObjectReference" />
                     <element name="objectSet" type="vim2:ObjectUpdate" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim2:MissingObject" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyFilterUpdate">
            <sequence>
               <element name="PropertyFilterUpdate" type="vim2:PropertyFilterUpdate" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ObjectUpdateKind">
            <restriction base="xsd:string">
               <enumeration value="modify" />
               <enumeration value="enter" />
               <enumeration value="leave" />
            </restriction>
         </simpleType>
         <complexType name="ObjectUpdate">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="kind" type="vim2:ObjectUpdateKind" />
                     <element name="obj" type="vim2:ManagedObjectReference" />
                     <element name="changeSet" type="vim2:PropertyChange" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim2:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectUpdate">
            <sequence>
               <element name="ObjectUpdate" type="vim2:ObjectUpdate" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="PropertyChangeOp">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="assign" />
               <enumeration value="indirectRemove" />
            </restriction>
         </simpleType>
         <complexType name="PropertyChange">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="op" type="vim2:PropertyChangeOp" />
                     <element name="val" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyChange">
            <sequence>
               <element name="PropertyChange" type="vim2:PropertyChange" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MissingProperty">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" />
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMissingProperty">
            <sequence>
               <element name="MissingProperty" type="vim2:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MissingObject">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="obj" type="vim2:ManagedObjectReference" />
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMissingObject">
            <sequence>
               <element name="MissingObject" type="vim2:MissingObject" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CreateFilter">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:PropertyFilterSpec" />
                  <element name="partialUpdates" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateFilterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveProperties">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="specSet" type="vim2:PropertyFilterSpec" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrievePropertiesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ObjectContent" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckForUpdates">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="version" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckForUpdatesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:UpdateSet" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="WaitForUpdates">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="version" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="WaitForUpdatesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:UpdateSet" />
               </sequence>
            </complexType>
         </element>
         <element name="CancelWaitForUpdates">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CancelWaitForUpdatesResponse">
            <complexType />
         </element>
         <complexType name="LocalizedMethodFault">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="fault" type="vim2:MethodFault" />
                     <element name="localizedMessage" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MethodFault">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="dynamicProperty" type="vim2:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="MethodFaultFault" type="vim2:MethodFault"/>
         <complexType name="RuntimeFault">
            <complexContent>
               <extension base="vim2:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RuntimeFaultFault" type="vim2:RuntimeFault"/>
         <complexType name="AboutInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="vendor" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="build" type="xsd:string" />
                     <element name="localeVersion" type="xsd:string" minOccurs="0" />
                     <element name="localeBuild" type="xsd:string" minOccurs="0" />
                     <element name="osType" type="xsd:string" />
                     <element name="productLineId" type="xsd:string" />
                     <element name="apiType" type="xsd:string" />
                     <element name="apiVersion" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AuthorizationDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="privilege" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="privilegeGroup" type="vim2:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Permission">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="principal" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                     <element name="roleId" type="xsd:int" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPermission">
            <sequence>
               <element name="Permission" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AuthorizationRole">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="roleId" type="xsd:int" />
                     <element name="system" type="xsd:boolean" />
                     <element name="name" type="xsd:string" />
                     <element name="info" type="vim2:Description" />
                     <element name="privilege" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAuthorizationRole">
            <sequence>
               <element name="AuthorizationRole" type="vim2:AuthorizationRole" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AuthorizationPrivilege">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="privId" type="xsd:string" />
                     <element name="onParent" type="xsd:boolean" />
                     <element name="name" type="xsd:string" />
                     <element name="privGroupName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAuthorizationPrivilege">
            <sequence>
               <element name="AuthorizationPrivilege" type="vim2:AuthorizationPrivilege" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddAuthorizationRole">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="privIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="AddAuthorizationRoleResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveAuthorizationRole">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="roleId" type="xsd:int" />
                  <element name="failIfUsed" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveAuthorizationRoleResponse">
            <complexType />
         </element>
         <element name="UpdateAuthorizationRole">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="roleId" type="xsd:int" />
                  <element name="newName" type="xsd:string" />
                  <element name="privIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateAuthorizationRoleResponse">
            <complexType />
         </element>
         <element name="MergePermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="srcRoleId" type="xsd:int" />
                  <element name="dstRoleId" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="MergePermissionsResponse">
            <complexType />
         </element>
         <element name="RetrieveRolePermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="roleId" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveRolePermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveEntityPermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="inherited" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveEntityPermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveAllPermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveAllPermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="SetEntityPermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="permission" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="SetEntityPermissionsResponse">
            <complexType />
         </element>
         <element name="ResetEntityPermissions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="permission" type="vim2:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="ResetEntityPermissionsResponse">
            <complexType />
         </element>
         <element name="RemoveEntityPermission">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="user" type="xsd:string" />
                  <element name="isGroup" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveEntityPermissionResponse">
            <complexType />
         </element>
         <complexType name="Capability">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="provisioningSupported" type="xsd:boolean" />
                     <element name="multiHostSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterComputeResourceSummary">
            <complexContent>
               <extension base="vim2:ComputeResourceSummary">
                  <sequence>
                     <element name="currentFailoverLevel" type="xsd:int" />
                     <element name="numVmotions" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReconfigureCluster_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:ClusterConfigSpec" />
                  <element name="modify" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureCluster_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ApplyRecommendation">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="key" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="ApplyRecommendationResponse">
            <complexType />
         </element>
         <element name="RecommendHostsForVm">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vm" type="vim2:ManagedObjectReference" />
                  <element name="pool" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RecommendHostsForVmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ClusterHostRecommendation" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="AddHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:HostConnectSpec" />
                  <element name="asConnected" type="xsd:boolean" />
                  <element name="resourcePool" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="AddHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveInto_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveInto_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveHostInto_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" />
                  <element name="resourcePool" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveHostInto_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ComputeResourceSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="totalCpu" type="xsd:int" />
                     <element name="totalMemory" type="xsd:long" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="effectiveCpu" type="xsd:int" />
                     <element name="effectiveMemory" type="xsd:long" />
                     <element name="numHosts" type="xsd:int" />
                     <element name="numEffectiveHosts" type="xsd:int" />
                     <element name="overallStatus" type="vim2:ManagedEntityStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDef">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomFieldDef">
            <sequence>
               <element name="CustomFieldDef" type="vim2:CustomFieldDef" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomFieldValue">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomFieldValue">
            <sequence>
               <element name="CustomFieldValue" type="vim2:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomFieldStringValue">
            <complexContent>
               <extension base="vim2:CustomFieldValue">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AddCustomFieldDef">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="AddCustomFieldDefResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:CustomFieldDef" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveCustomFieldDef">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="key" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveCustomFieldDefResponse">
            <complexType />
         </element>
         <element name="RenameCustomFieldDef">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="key" type="xsd:int" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RenameCustomFieldDefResponse">
            <complexType />
         </element>
         <element name="SetField">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="key" type="xsd:int" />
                  <element name="value" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="SetFieldResponse">
            <complexType />
         </element>
         <element name="DoesCustomizationSpecExist">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DoesCustomizationSpecExistResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="GetCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="GetCustomizationSpecResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="item" type="vim2:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="OverwriteCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="item" type="vim2:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <element name="OverwriteCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="DeleteCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DeleteCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="DuplicateCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="newName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DuplicateCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="RenameCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="newName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RenameCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="CustomizationSpecItemToXml">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="item" type="vim2:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <element name="CustomizationSpecItemToXmlResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="XmlToCustomizationSpecItem">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="specItemXml" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="XmlToCustomizationSpecItemResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckCustomizationResources">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="guestOs" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckCustomizationResourcesResponse">
            <complexType />
         </element>
         <complexType name="CustomizationSpecInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="lastUpdateTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomizationSpecInfo">
            <sequence>
               <element name="CustomizationSpecInfo" type="vim2:CustomizationSpecInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomizationSpecItem">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="info" type="vim2:CustomizationSpecInfo" />
                     <element name="spec" type="vim2:CustomizationSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="QueryConnectionInfo">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="hostname" type="xsd:string" />
                  <element name="port" type="xsd:int" />
                  <element name="username" type="xsd:string" />
                  <element name="password" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConnectionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostConnectInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DatastoreSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                     <element name="capacity" type="xsd:long" />
                     <element name="freeSpace" type="xsd:long" />
                     <element name="accessible" type="xsd:boolean" />
                     <element name="multipleHostAccess" type="xsd:boolean" minOccurs="0" />
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                     <element name="freeSpace" type="xsd:long" />
                     <element name="maxFileSize" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreCapability">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="directoryHierarchySupported" type="xsd:boolean" />
                     <element name="rawDiskMappingsSupported" type="xsd:boolean" />
                     <element name="perFileThinProvisioningSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreHostMount">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="vim2:ManagedObjectReference" />
                     <element name="mountInfo" type="vim2:HostMountInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDatastoreHostMount">
            <sequence>
               <element name="DatastoreHostMount" type="vim2:DatastoreHostMount" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RenameDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="newName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RenameDatastoreResponse">
            <complexType />
         </element>
         <element name="RefreshDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RefreshDatastoreResponse">
            <complexType />
         </element>
         <element name="DestroyDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyDatastoreResponse">
            <complexType />
         </element>
         <complexType name="Description">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="label" type="xsd:string" />
                     <element name="summary" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DiagnosticManagerLogCreator">
            <restriction base="xsd:string">
               <enumeration value="vpxd" />
               <enumeration value="vpxa" />
               <enumeration value="hostd" />
               <enumeration value="serverd" />
               <enumeration value="install" />
               <enumeration value="vpxClient" />
            </restriction>
         </simpleType>
         <simpleType name="DiagnosticManagerLogFormat">
            <restriction base="xsd:string">
               <enumeration value="plain" />
            </restriction>
         </simpleType>
         <complexType name="DiagnosticManagerLogDescriptor">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="fileName" type="xsd:string" />
                     <element name="creator" type="xsd:string" />
                     <element name="format" type="xsd:string" />
                     <element name="mimeType" type="xsd:string" />
                     <element name="info" type="vim2:Description" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDiagnosticManagerLogDescriptor">
            <sequence>
               <element name="DiagnosticManagerLogDescriptor" type="vim2:DiagnosticManagerLogDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DiagnosticManagerLogHeader">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="lineStart" type="xsd:int" />
                     <element name="lineEnd" type="xsd:int" />
                     <element name="lineText" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DiagnosticManagerBundleInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="system" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDiagnosticManagerBundleInfo">
            <sequence>
               <element name="DiagnosticManagerBundleInfo" type="vim2:DiagnosticManagerBundleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryDescriptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryDescriptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:DiagnosticManagerLogDescriptor" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="BrowseDiagnosticLog">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="key" type="xsd:string" />
                  <element name="start" type="xsd:int" minOccurs="0" />
                  <element name="lines" type="xsd:int" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="BrowseDiagnosticLogResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:DiagnosticManagerLogHeader" />
               </sequence>
            </complexType>
         </element>
         <element name="GenerateLogBundles_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="includeDefault" type="xsd:boolean" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="GenerateLogBundles_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ElementDescription">
            <complexContent>
               <extension base="vim2:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfElementDescription">
            <sequence>
               <element name="ElementDescription" type="vim2:ElementDescription" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryConfigOptionDescriptor">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConfigOptionDescriptorResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:VirtualMachineConfigOptionDescriptor" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConfigOption">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="key" type="xsd:string" minOccurs="0" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConfigOptionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:VirtualMachineConfigOption" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConfigTarget">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryConfigTargetResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ConfigTarget" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateFolder">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateFolderResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveIntoFolder_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="list" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveIntoFolder_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:VirtualMachineConfigSpec" />
                  <element name="pool" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RegisterVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="path" type="xsd:string" />
                  <element name="name" type="xsd:string" minOccurs="0" />
                  <element name="asTemplate" type="xsd:boolean" />
                  <element name="pool" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RegisterVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCluster">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="spec" type="vim2:ClusterConfigSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateClusterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="AddStandaloneHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:HostConnectSpec" />
                  <element name="addConnected" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="AddStandaloneHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateDatacenter">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateDatacenterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UnregisterAndDestroy_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UnregisterAndDestroy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="SetCollectorPageSize">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="maxCount" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="SetCollectorPageSizeResponse">
            <complexType />
         </element>
         <element name="RewindCollector">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RewindCollectorResponse">
            <complexType />
         </element>
         <element name="ResetCollector">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ResetCollectorResponse">
            <complexType />
         </element>
         <element name="DestroyCollector">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyCollectorResponse">
            <complexType />
         </element>
         <complexType name="HostServiceTicket">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="service" type="xsd:string" />
                     <element name="serviceVersion" type="xsd:string" />
                     <element name="sessionId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostSystemConnectionState">
            <restriction base="xsd:string">
               <enumeration value="connected" />
               <enumeration value="notResponding" />
               <enumeration value="disconnected" />
            </restriction>
         </simpleType>
         <element name="QueryHostConnectionInfo">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryHostConnectionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostConnectInfo" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateSystemResources">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="resourceInfo" type="vim2:HostSystemResourceInfo" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateSystemResourcesResponse">
            <complexType />
         </element>
         <element name="ReconnectHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="cnxSpec" type="vim2:HostConnectSpec" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconnectHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DisconnectHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DisconnectHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="EnterMaintenanceMode_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="timeout" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="EnterMaintenanceMode_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ExitMaintenanceMode_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="timeout" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="ExitMaintenanceMode_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RebootHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="force" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RebootHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ShutdownHost_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="force" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="ShutdownHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryMemoryOverhead">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="memorySize" type="xsd:long" />
                  <element name="videoRamSize" type="xsd:int" minOccurs="0" />
                  <element name="numVcpus" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryMemoryOverheadResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:long" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureHostForDAS_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureHostForDAS_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="LicenseManagerLicenseKey">
            <restriction base="xsd:string">
               <enumeration value="esxFull" />
               <enumeration value="esxVmtn" />
               <enumeration value="esxExpress" />
               <enumeration value="san" />
               <enumeration value="iscsi" />
               <enumeration value="nas" />
               <enumeration value="vsmp" />
               <enumeration value="backup" />
               <enumeration value="vc" />
               <enumeration value="esxHost" />
               <enumeration value="gsxHost" />
               <enumeration value="vmotion" />
               <enumeration value="drs" />
               <enumeration value="das" />
            </restriction>
         </simpleType>
         <complexType name="LicenseSource">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerSource">
            <complexContent>
               <extension base="vim2:LicenseSource">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalLicenseSource">
            <complexContent>
               <extension base="vim2:LicenseSource">
                  <sequence>
                     <element name="licenseKeys" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="LicenseFeatureInfoUnit">
            <restriction base="xsd:string">
               <enumeration value="host" />
               <enumeration value="cpuCore" />
               <enumeration value="cpuPackage" />
               <enumeration value="server" />
               <enumeration value="vm" />
            </restriction>
         </simpleType>
         <simpleType name="LicenseFeatureInfoState">
            <restriction base="xsd:string">
               <enumeration value="enabled" />
               <enumeration value="disabled" />
               <enumeration value="optional" />
            </restriction>
         </simpleType>
         <complexType name="LicenseFeatureInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="featureName" type="xsd:string" />
                     <element name="state" type="vim2:LicenseFeatureInfoState" minOccurs="0" />
                     <element name="costUnit" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseFeatureInfo">
            <sequence>
               <element name="LicenseFeatureInfo" type="vim2:LicenseFeatureInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="LicenseReservationInfoState">
            <restriction base="xsd:string">
               <enumeration value="notUsed" />
               <enumeration value="noLicense" />
               <enumeration value="unlicensedUse" />
               <enumeration value="licensed" />
            </restriction>
         </simpleType>
         <complexType name="LicenseReservationInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="state" type="vim2:LicenseReservationInfoState" />
                     <element name="required" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseReservationInfo">
            <sequence>
               <element name="LicenseReservationInfo" type="vim2:LicenseReservationInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LicenseAvailabilityInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="feature" type="vim2:LicenseFeatureInfo" />
                     <element name="total" type="xsd:int" />
                     <element name="available" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseAvailabilityInfo">
            <sequence>
               <element name="LicenseAvailabilityInfo" type="vim2:LicenseAvailabilityInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LicenseUsageInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="source" type="vim2:LicenseSource" />
                     <element name="sourceAvailable" type="xsd:boolean" />
                     <element name="reservationInfo" type="vim2:LicenseReservationInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="featureInfo" type="vim2:LicenseFeatureInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="QueryLicenseSourceAvailability">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryLicenseSourceAvailabilityResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:LicenseAvailabilityInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryLicenseUsage">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryLicenseUsageResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:LicenseUsageInfo" />
               </sequence>
            </complexType>
         </element>
         <element name="SetLicenseEdition">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="featureKey" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="SetLicenseEditionResponse">
            <complexType />
         </element>
         <element name="CheckLicenseFeature">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="featureKey" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckLicenseFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="EnableFeature">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="featureKey" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="EnableFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="DisableFeature">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="featureKey" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DisableFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="ConfigureLicenseSource">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="licenseSource" type="vim2:LicenseSource" />
               </sequence>
            </complexType>
         </element>
         <element name="ConfigureLicenseSourceResponse">
            <complexType />
         </element>
         <simpleType name="ManagedEntityStatus">
            <restriction base="xsd:string">
               <enumeration value="gray" />
               <enumeration value="green" />
               <enumeration value="yellow" />
               <enumeration value="red" />
            </restriction>
         </simpleType>
         <element name="Reload">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ReloadResponse">
            <complexType />
         </element>
         <element name="Rename_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="newName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="Rename_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="Destroy_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="Destroy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MethodDescription">
            <complexContent>
               <extension base="vim2:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NetworkSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="network" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="accessible" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DestroyNetwork">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyNetworkResponse">
            <complexType />
         </element>
         <complexType name="PerformanceDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="counterType" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="statsType" type="vim2:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="PerfFormat">
            <restriction base="xsd:string">
               <enumeration value="normal" />
               <enumeration value="csv" />
            </restriction>
         </simpleType>
         <complexType name="PerfProviderSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="currentSupported" type="xsd:boolean" />
                     <element name="summarySupported" type="xsd:boolean" />
                     <element name="refreshRate" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="PerfSummaryType">
            <restriction base="xsd:string">
               <enumeration value="average" />
               <enumeration value="maximum" />
               <enumeration value="minimum" />
               <enumeration value="latest" />
               <enumeration value="summation" />
               <enumeration value="none" />
            </restriction>
         </simpleType>
         <simpleType name="PerfStatsType">
            <restriction base="xsd:string">
               <enumeration value="absolute" />
               <enumeration value="delta" />
               <enumeration value="rate" />
            </restriction>
         </simpleType>
         <simpleType name="PerformanceManagerUnit">
            <restriction base="xsd:string">
               <enumeration value="percent" />
               <enumeration value="kiloBytes" />
               <enumeration value="megaBytes" />
               <enumeration value="megaHertz" />
               <enumeration value="number" />
               <enumeration value="millisecond" />
               <enumeration value="second" />
               <enumeration value="kiloBytesPerSecond" />
               <enumeration value="megaBytesPerSecond" />
            </restriction>
         </simpleType>
         <complexType name="PerfCounterInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="nameInfo" type="vim2:ElementDescription" />
                     <element name="groupInfo" type="vim2:ElementDescription" />
                     <element name="unitInfo" type="vim2:ElementDescription" />
                     <element name="rollupType" type="vim2:PerfSummaryType" />
                     <element name="statsType" type="vim2:PerfStatsType" />
                     <element name="associatedCounterId" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfCounterInfo">
            <sequence>
               <element name="PerfCounterInfo" type="vim2:PerfCounterInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricId">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="counterId" type="xsd:int" />
                     <element name="instance" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricId">
            <sequence>
               <element name="PerfMetricId" type="vim2:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfQuerySpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="startTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="maxSample" type="xsd:int" minOccurs="0" />
                     <element name="metricId" type="vim2:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
                     <element name="intervalId" type="xsd:int" minOccurs="0" />
                     <element name="format" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfQuerySpec">
            <sequence>
               <element name="PerfQuerySpec" type="vim2:PerfQuerySpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfSampleInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="timestamp" type="xsd:dateTime" />
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfSampleInfo">
            <sequence>
               <element name="PerfSampleInfo" type="vim2:PerfSampleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricSeries">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="vim2:PerfMetricId" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricSeries">
            <sequence>
               <element name="PerfMetricSeries" type="vim2:PerfMetricSeries" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricIntSeries">
            <complexContent>
               <extension base="vim2:PerfMetricSeries">
                  <sequence>
                     <element name="value" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerfMetricSeriesCSV">
            <complexContent>
               <extension base="vim2:PerfMetricSeries">
                  <sequence>
                     <element name="value" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricSeriesCSV">
            <sequence>
               <element name="PerfMetricSeriesCSV" type="vim2:PerfMetricSeriesCSV" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfEntityMetricBase">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfEntityMetricBase">
            <sequence>
               <element name="PerfEntityMetricBase" type="vim2:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfEntityMetric">
            <complexContent>
               <extension base="vim2:PerfEntityMetricBase">
                  <sequence>
                     <element name="sampleInfo" type="vim2:PerfSampleInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="value" type="vim2:PerfMetricSeries" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerfEntityMetricCSV">
            <complexContent>
               <extension base="vim2:PerfEntityMetricBase">
                  <sequence>
                     <element name="sampleInfoCSV" type="xsd:string" />
                     <element name="value" type="vim2:PerfMetricSeriesCSV" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfEntityMetricCSV">
            <sequence>
               <element name="PerfEntityMetricCSV" type="vim2:PerfEntityMetricCSV" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfCompositeMetric">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:PerfEntityMetricBase" minOccurs="0" />
                     <element name="childEntity" type="vim2:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="QueryPerfProviderSummary">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfProviderSummaryResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PerfProviderSummary" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryAvailablePerfMetric">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
                  <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                  <element name="intervalId" type="xsd:int" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryAvailablePerfMetricResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfCounter">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="counterId" type="xsd:int" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfCounterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PerfCounterInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerf">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="querySpec" type="vim2:PerfQuerySpec" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfComposite">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="querySpec" type="vim2:PerfQuerySpec" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPerfCompositeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PerfCompositeMetric" />
               </sequence>
            </complexType>
         </element>
         <element name="CreatePerfInterval">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="intervalId" type="vim2:PerfInterval" />
               </sequence>
            </complexType>
         </element>
         <element name="CreatePerfIntervalResponse">
            <complexType />
         </element>
         <element name="RemovePerfInterval">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="samplePeriod" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="RemovePerfIntervalResponse">
            <complexType />
         </element>
         <element name="UpdatePerfInterval">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="interval" type="vim2:PerfInterval" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdatePerfIntervalResponse">
            <complexType />
         </element>
         <complexType name="PerfInterval">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="samplingPeriod" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="length" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfInterval">
            <sequence>
               <element name="PerfInterval" type="vim2:PerfInterval" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ResourceAllocationInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="reservation" type="xsd:long" minOccurs="0" />
                     <element name="expandableReservation" type="xsd:boolean" minOccurs="0" />
                     <element name="limit" type="xsd:long" minOccurs="0" />
                     <element name="shares" type="vim2:SharesInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourceConfigSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="lastModified" type="xsd:dateTime" minOccurs="0" />
                     <element name="cpuAllocation" type="vim2:ResourceAllocationInfo" />
                     <element name="memoryAllocation" type="vim2:ResourceAllocationInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfResourceConfigSpec">
            <sequence>
               <element name="ResourceConfigSpec" type="vim2:ResourceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ResourcePoolResourceUsage">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="reservationUsed" type="xsd:long" />
                     <element name="reservationUsedForVm" type="xsd:long" />
                     <element name="unreservedForPool" type="xsd:long" />
                     <element name="unreservedForVm" type="xsd:long" />
                     <element name="overallUsage" type="xsd:long" />
                     <element name="maxUsage" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolRuntimeInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="memory" type="vim2:ResourcePoolResourceUsage" />
                     <element name="cpu" type="vim2:ResourcePoolResourceUsage" />
                     <element name="overallStatus" type="vim2:ManagedEntityStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="config" type="vim2:ResourceConfigSpec" />
                     <element name="runtime" type="vim2:ResourcePoolRuntimeInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" minOccurs="0" />
                  <element name="config" type="vim2:ResourceConfigSpec" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateConfigResponse">
            <complexType />
         </element>
         <element name="MoveIntoResourcePool">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="list" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="MoveIntoResourcePoolResponse">
            <complexType />
         </element>
         <element name="UpdateChildResourceConfiguration">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:ResourceConfigSpec" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateChildResourceConfigurationResponse">
            <complexType />
         </element>
         <element name="CreateResourcePool">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="spec" type="vim2:ResourceConfigSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateResourcePoolResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyChildren">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DestroyChildrenResponse">
            <complexType />
         </element>
         <element name="FindByUuid">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datacenter" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="uuid" type="xsd:string" />
                  <element name="vmSearch" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByUuidResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByDatastorePath">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datacenter" type="vim2:ManagedObjectReference" />
                  <element name="path" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByDatastorePathResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByDnsName">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datacenter" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="dnsName" type="xsd:string" />
                  <element name="vmSearch" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByDnsNameResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByIp">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datacenter" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="ip" type="xsd:string" />
                  <element name="vmSearch" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByIpResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByInventoryPath">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="inventoryPath" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="FindByInventoryPathResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="FindChild">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="FindChildResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="ValidateMigrationTestType">
            <restriction base="xsd:string">
               <enumeration value="sourceTests" />
               <enumeration value="compatibilityTests" />
               <enumeration value="diskAccessibilityTests" />
               <enumeration value="resourceTests" />
            </restriction>
         </simpleType>
         <simpleType name="VMotionCompatibilityType">
            <restriction base="xsd:string">
               <enumeration value="cpu" />
               <enumeration value="software" />
            </restriction>
         </simpleType>
         <complexType name="HostVMotionCompatibility">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" />
                     <element name="compatibility" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVMotionCompatibility">
            <sequence>
               <element name="HostVMotionCompatibility" type="vim2:HostVMotionCompatibility" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CurrentTime">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CurrentTimeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:dateTime" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveServiceContent">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveServiceContentResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ServiceContent" />
               </sequence>
            </complexType>
         </element>
         <element name="ValidateMigration">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vm" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
                  <element name="state" type="vim2:VirtualMachinePowerState" minOccurs="0" />
                  <element name="testType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  <element name="pool" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="ValidateMigrationResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVMotionCompatibility">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vm" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
                  <element name="compatibility" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVMotionCompatibilityResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostVMotionCompatibility" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ServiceContent">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="rootFolder" type="vim2:ManagedObjectReference" />
                     <element name="propertyCollector" type="vim2:ManagedObjectReference" />
                     <element name="about" type="vim2:AboutInfo" />
                     <element name="setting" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="userDirectory" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="sessionManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="authorizationManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="perfManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTaskManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="alarmManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="eventManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="taskManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="customizationSpecManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="customFieldsManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="accountManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="diagnosticManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="licenseManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="searchIndex" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionManagerLocalTicket">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="userName" type="xsd:string" />
                     <element name="passwordFilePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateServiceMessage">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="message" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateServiceMessageResponse">
            <complexType />
         </element>
         <element name="Login">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="userName" type="xsd:string" />
                  <element name="password" type="xsd:string" />
                  <element name="locale" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="LoginResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:UserSession" />
               </sequence>
            </complexType>
         </element>
         <element name="Logout">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="LogoutResponse">
            <complexType />
         </element>
         <element name="AcquireLocalTicket">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="userName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="AcquireLocalTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:SessionManagerLocalTicket" />
               </sequence>
            </complexType>
         </element>
         <element name="TerminateSession">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="sessionId" type="xsd:string" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="TerminateSessionResponse">
            <complexType />
         </element>
         <element name="SetLocale">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="locale" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="SetLocaleResponse">
            <complexType />
         </element>
         <complexType name="UserSession">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="userName" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="loginTime" type="xsd:dateTime" />
                     <element name="lastActiveTime" type="xsd:dateTime" />
                     <element name="locale" type="xsd:string" />
                     <element name="messageLocale" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserSession">
            <sequence>
               <element name="UserSession" type="vim2:UserSession" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="SharesLevel">
            <restriction base="xsd:string">
               <enumeration value="low" />
               <enumeration value="normal" />
               <enumeration value="high" />
               <enumeration value="custom" />
            </restriction>
         </simpleType>
         <complexType name="SharesInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="shares" type="xsd:int" />
                     <element name="level" type="vim2:SharesLevel" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CancelTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CancelTaskResponse">
            <complexType />
         </element>
         <complexType name="TaskDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="methodInfo" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="state" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="reason" type="vim2:TypeDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="TaskFilterSpecRecursionOption">
            <restriction base="xsd:string">
               <enumeration value="self" />
               <enumeration value="children" />
               <enumeration value="all" />
            </restriction>
         </simpleType>
         <simpleType name="TaskFilterSpecTimeOption">
            <restriction base="xsd:string">
               <enumeration value="queuedTime" />
               <enumeration value="startedTime" />
               <enumeration value="completedTime" />
            </restriction>
         </simpleType>
         <complexType name="TaskFilterSpecByEntity">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="recursion" type="vim2:TaskFilterSpecRecursionOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpecByTime">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="timeType" type="vim2:TaskFilterSpecTimeOption" />
                     <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpecByUsername">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="systemUser" type="xsd:boolean" />
                     <element name="userList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:TaskFilterSpecByEntity" minOccurs="0" />
                     <element name="time" type="vim2:TaskFilterSpecByTime" minOccurs="0" />
                     <element name="userName" type="vim2:TaskFilterSpecByUsername" minOccurs="0" />
                     <element name="state" type="vim2:TaskInfoState" minOccurs="0" maxOccurs="unbounded" />
                     <element name="alarm" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTask" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReadNextTasks">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="maxCount" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadNextTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadPreviousTasks">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="maxCount" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadPreviousTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="TaskInfoState">
            <restriction base="xsd:string">
               <enumeration value="queued" />
               <enumeration value="running" />
               <enumeration value="success" />
               <enumeration value="error" />
            </restriction>
         </simpleType>
         <complexType name="ArrayOfTaskInfoState">
            <sequence>
               <element name="TaskInfoState" type="vim2:TaskInfoState" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="TaskInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="task" type="vim2:ManagedObjectReference" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="descriptionId" type="xsd:string" />
                     <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="entityName" type="xsd:string" minOccurs="0" />
                     <element name="locked" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="state" type="vim2:TaskInfoState" />
                     <element name="cancelled" type="xsd:boolean" />
                     <element name="cancelable" type="xsd:boolean" />
                     <element name="error" type="vim2:LocalizedMethodFault" minOccurs="0" />
                     <element name="result" type="xsd:anyType" minOccurs="0" />
                     <element name="progress" type="xsd:int" minOccurs="0" />
                     <element name="reason" type="vim2:TaskReason" />
                     <element name="queueTime" type="xsd:dateTime" />
                     <element name="startTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="completeTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="eventChainId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfTaskInfo">
            <sequence>
               <element name="TaskInfo" type="vim2:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CreateCollectorForTasks">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="filter" type="vim2:TaskFilterSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCollectorForTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TaskReason">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonSystem">
            <complexContent>
               <extension base="vim2:TaskReason">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonUser">
            <complexContent>
               <extension base="vim2:TaskReason">
                  <sequence>
                     <element name="userName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonAlarm">
            <complexContent>
               <extension base="vim2:TaskReason">
                  <sequence>
                     <element name="alarmName" type="xsd:string" />
                     <element name="alarm" type="vim2:ManagedObjectReference" />
                     <element name="entityName" type="xsd:string" />
                     <element name="entity" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonSchedule">
            <complexContent>
               <extension base="vim2:TaskReason">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="scheduledTask" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TypeDescription">
            <complexContent>
               <extension base="vim2:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfTypeDescription">
            <sequence>
               <element name="TypeDescription" type="vim2:TypeDescription" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RetrieveUserGroups">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="domain" type="xsd:string" minOccurs="0" />
                  <element name="searchStr" type="xsd:string" />
                  <element name="belongsToGroup" type="xsd:string" minOccurs="0" />
                  <element name="belongsToUser" type="xsd:string" minOccurs="0" />
                  <element name="exactMatch" type="xsd:boolean" />
                  <element name="findUsers" type="xsd:boolean" />
                  <element name="findGroups" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveUserGroupsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:UserSearchResult" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UserSearchResult">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="principal" type="xsd:string" />
                     <element name="fullName" type="xsd:string" minOccurs="0" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserSearchResult">
            <sequence>
               <element name="UserSearchResult" type="vim2:UserSearchResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PosixUserSearchResult">
            <complexContent>
               <extension base="vim2:UserSearchResult">
                  <sequence>
                     <element name="id" type="xsd:int" />
                     <element name="shellAccess" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachinePowerState">
            <restriction base="xsd:string">
               <enumeration value="poweredOff" />
               <enumeration value="poweredOn" />
               <enumeration value="suspended" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineConnectionState">
            <restriction base="xsd:string">
               <enumeration value="connected" />
               <enumeration value="disconnected" />
               <enumeration value="orphaned" />
               <enumeration value="inaccessible" />
               <enumeration value="invalid" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineMovePriority">
            <restriction base="xsd:string">
               <enumeration value="lowPriority" />
               <enumeration value="highPriority" />
               <enumeration value="defaultPriority" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineMksTicket">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="ticket" type="xsd:string" />
                     <element name="cfgFile" type="xsd:string" />
                     <element name="host" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CreateSnapshot_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="description" type="xsd:string" minOccurs="0" />
                  <element name="memory" type="xsd:boolean" />
                  <element name="quiesce" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RevertToCurrentSnapshot_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RevertToCurrentSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveAllSnapshots_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveAllSnapshots_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:VirtualMachineConfigSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UpgradeVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="version" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="UpgradeVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="PowerOnVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="PowerOnVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="PowerOffVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="PowerOffVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="SuspendVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="SuspendVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ResetVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ResetVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ShutdownGuest">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ShutdownGuestResponse">
            <complexType />
         </element>
         <element name="RebootGuest">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RebootGuestResponse">
            <complexType />
         </element>
         <element name="StandbyGuest">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="StandbyGuestResponse">
            <complexType />
         </element>
         <element name="AnswerVM">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="questionId" type="xsd:string" />
                  <element name="answerChoice" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="AnswerVMResponse">
            <complexType />
         </element>
         <element name="CustomizeVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:CustomizationSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CustomizeVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckCustomizationSpec">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:CustomizationSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckCustomizationSpecResponse">
            <complexType />
         </element>
         <element name="MigrateVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pool" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                  <element name="priority" type="vim2:VirtualMachineMovePriority" />
                  <element name="state" type="vim2:VirtualMachinePowerState" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="MigrateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RelocateVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:VirtualMachineRelocateSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="RelocateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CloneVM_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="folder" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="spec" type="vim2:VirtualMachineCloneSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CloneVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MarkAsTemplate">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MarkAsTemplateResponse">
            <complexType />
         </element>
         <element name="MarkAsVirtualMachine">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pool" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="MarkAsVirtualMachineResponse">
            <complexType />
         </element>
         <element name="UnregisterVM">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UnregisterVMResponse">
            <complexType />
         </element>
         <element name="ResetGuestInformation">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ResetGuestInformationResponse">
            <complexType />
         </element>
         <element name="MountToolsInstaller">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="MountToolsInstallerResponse">
            <complexType />
         </element>
         <element name="UnmountToolsInstaller">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UnmountToolsInstallerResponse">
            <complexType />
         </element>
         <element name="UpgradeTools_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="installerOptions" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="UpgradeTools_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="AcquireMksTicket">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="AcquireMksTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:VirtualMachineMksTicket" />
               </sequence>
            </complexType>
         </element>
         <element name="SetScreenResolution">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="width" type="xsd:int" />
                  <element name="height" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="SetScreenResolutionResponse">
            <complexType />
         </element>
         <simpleType name="ActionParameter">
            <restriction base="xsd:string">
               <enumeration value="targetName" />
               <enumeration value="alarmName" />
               <enumeration value="oldStatus" />
               <enumeration value="newStatus" />
               <enumeration value="triggeringSummary" />
               <enumeration value="declaringSummary" />
               <enumeration value="eventDescription" />
               <enumeration value="target" />
               <enumeration value="alarm" />
            </restriction>
         </simpleType>
         <complexType name="Action">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MethodActionArgument">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="value" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMethodActionArgument">
            <sequence>
               <element name="MethodActionArgument" type="vim2:MethodActionArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MethodAction">
            <complexContent>
               <extension base="vim2:Action">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="argument" type="vim2:MethodActionArgument" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SendEmailAction">
            <complexContent>
               <extension base="vim2:Action">
                  <sequence>
                     <element name="toList" type="xsd:string" />
                     <element name="ccList" type="xsd:string" />
                     <element name="subject" type="xsd:string" />
                     <element name="body" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SendSNMPAction">
            <complexContent>
               <extension base="vim2:Action">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RunScriptAction">
            <complexContent>
               <extension base="vim2:Action">
                  <sequence>
                     <element name="script" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoveAlarm">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveAlarmResponse">
            <complexType />
         </element>
         <element name="ReconfigureAlarm">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:AlarmSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureAlarmResponse">
            <complexType />
         </element>
         <complexType name="AlarmAction">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmAction">
            <sequence>
               <element name="AlarmAction" type="vim2:AlarmAction" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AlarmTriggeringAction">
            <complexContent>
               <extension base="vim2:AlarmAction">
                  <sequence>
                     <element name="action" type="vim2:Action" />
                     <element name="green2yellow" type="xsd:boolean" />
                     <element name="yellow2red" type="xsd:boolean" />
                     <element name="red2yellow" type="xsd:boolean" />
                     <element name="yellow2green" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GroupAlarmAction">
            <complexContent>
               <extension base="vim2:AlarmAction">
                  <sequence>
                     <element name="action" type="vim2:AlarmAction" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="expr" type="vim2:TypeDescription" maxOccurs="unbounded" />
                     <element name="stateOperator" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="metricOperator" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="hostSystemConnectionState" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="virtualMachinePowerState" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="entityStatus" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="action" type="vim2:TypeDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmExpression">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmExpression">
            <sequence>
               <element name="AlarmExpression" type="vim2:AlarmExpression" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AndAlarmExpression">
            <complexContent>
               <extension base="vim2:AlarmExpression">
                  <sequence>
                     <element name="expression" type="vim2:AlarmExpression" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OrAlarmExpression">
            <complexContent>
               <extension base="vim2:AlarmExpression">
                  <sequence>
                     <element name="expression" type="vim2:AlarmExpression" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="StateAlarmOperator">
            <restriction base="xsd:string">
               <enumeration value="isEqual" />
               <enumeration value="isUnequal" />
            </restriction>
         </simpleType>
         <complexType name="StateAlarmExpression">
            <complexContent>
               <extension base="vim2:AlarmExpression">
                  <sequence>
                     <element name="operator" type="vim2:StateAlarmOperator" />
                     <element name="type" type="xsd:string" />
                     <element name="statePath" type="xsd:string" />
                     <element name="yellow" type="xsd:string" minOccurs="0" />
                     <element name="red" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="MetricAlarmOperator">
            <restriction base="xsd:string">
               <enumeration value="isAbove" />
               <enumeration value="isBelow" />
            </restriction>
         </simpleType>
         <complexType name="MetricAlarmExpression">
            <complexContent>
               <extension base="vim2:AlarmExpression">
                  <sequence>
                     <element name="operator" type="vim2:MetricAlarmOperator" />
                     <element name="type" type="xsd:string" />
                     <element name="metric" type="vim2:PerfMetricId" />
                     <element name="yellow" type="xsd:int" minOccurs="0" />
                     <element name="red" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmInfo">
            <complexContent>
               <extension base="vim2:AlarmSpec">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="alarm" type="vim2:ManagedObjectReference" />
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="lastModifiedTime" type="xsd:dateTime" />
                     <element name="lastModifiedUser" type="xsd:string" />
                     <element name="creationEventId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CreateAlarm">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:AlarmSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateAlarmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="GetAlarm">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="GetAlarmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="GetAlarmState">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="GetAlarmStateResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:AlarmState" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AlarmSetting">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="toleranceRange" type="xsd:int" />
                     <element name="reportingFrequency" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="enabled" type="xsd:boolean" />
                     <element name="expression" type="vim2:AlarmExpression" />
                     <element name="action" type="vim2:AlarmAction" minOccurs="0" />
                     <element name="setting" type="vim2:AlarmSetting" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmState">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="alarm" type="vim2:ManagedObjectReference" />
                     <element name="overallStatus" type="vim2:ManagedEntityStatus" />
                     <element name="time" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmState">
            <sequence>
               <element name="AlarmState" type="vim2:AlarmState" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dasConfig" type="vim2:ClusterDasConfigInfo" />
                     <element name="dasVmConfig" type="vim2:ClusterDasVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim2:ClusterDrsConfigInfo" />
                     <element name="drsVmConfig" type="vim2:ClusterDrsVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rule" type="vim2:ClusterRuleInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DrsBehavior">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="partiallyAutomated" />
               <enumeration value="fullyAutomated" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDrsConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultVmBehavior" type="vim2:DrsBehavior" minOccurs="0" />
                     <element name="vmotionRate" type="xsd:int" minOccurs="0" />
                     <element name="option" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDrsVmConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="vim2:ManagedObjectReference" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="behavior" type="vim2:DrsBehavior" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsVmConfigInfo">
            <sequence>
               <element name="ClusterDrsVmConfigInfo" type="vim2:ClusterDrsVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dasConfig" type="vim2:ClusterDasConfigInfo" minOccurs="0" />
                     <element name="dasVmConfigSpec" type="vim2:ClusterDasVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim2:ClusterDrsConfigInfo" minOccurs="0" />
                     <element name="drsVmConfigSpec" type="vim2:ClusterDrsVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rulesSpec" type="vim2:ClusterRuleSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasVmConfigSpec">
            <complexContent>
               <extension base="vim2:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim2:ClusterDasVmConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasVmConfigSpec">
            <sequence>
               <element name="ClusterDasVmConfigSpec" type="vim2:ClusterDasVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDrsVmConfigSpec">
            <complexContent>
               <extension base="vim2:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim2:ClusterDrsVmConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsVmConfigSpec">
            <sequence>
               <element name="ClusterDrsVmConfigSpec" type="vim2:ClusterDrsVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterRuleSpec">
            <complexContent>
               <extension base="vim2:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim2:ClusterRuleInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterRuleSpec">
            <sequence>
               <element name="ClusterRuleSpec" type="vim2:ClusterRuleSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDasConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="failoverLevel" type="xsd:int" minOccurs="0" />
                     <element name="admissionControlEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="option" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DasVmPriority">
            <restriction base="xsd:string">
               <enumeration value="disabled" />
               <enumeration value="low" />
               <enumeration value="medium" />
               <enumeration value="high" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDasVmConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="vim2:ManagedObjectReference" />
                     <element name="restartPriority" type="vim2:DasVmPriority" minOccurs="0" />
                     <element name="powerOffOnIsolation" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasVmConfigInfo">
            <sequence>
               <element name="ClusterDasVmConfigInfo" type="vim2:ClusterDasVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDrsMigration">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="time" type="xsd:dateTime" />
                     <element name="vm" type="vim2:ManagedObjectReference" />
                     <element name="cpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="memoryLoad" type="xsd:long" minOccurs="0" />
                     <element name="source" type="vim2:ManagedObjectReference" />
                     <element name="sourceCpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="sourceMemoryLoad" type="xsd:long" minOccurs="0" />
                     <element name="destination" type="vim2:ManagedObjectReference" />
                     <element name="destinationCpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="destinationMemoryLoad" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsMigration">
            <sequence>
               <element name="ClusterDrsMigration" type="vim2:ClusterDrsMigration" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="DrsRecommendationReasonCode">
            <restriction base="xsd:string">
               <enumeration value="fairnessCpuAvg" />
               <enumeration value="fairnessMemAvg" />
               <enumeration value="jointAffin" />
               <enumeration value="antiAffin" />
               <enumeration value="hostMaint" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDrsRecommendation">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="rating" type="xsd:int" />
                     <element name="reason" type="xsd:string" />
                     <element name="reasonText" type="xsd:string" />
                     <element name="migrationList" type="vim2:ClusterDrsMigration" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsRecommendation">
            <sequence>
               <element name="ClusterDrsRecommendation" type="vim2:ClusterDrsRecommendation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterHostRecommendation">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" />
                     <element name="rating" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterHostRecommendation">
            <sequence>
               <element name="ClusterHostRecommendation" type="vim2:ClusterHostRecommendation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterRuleInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" minOccurs="0" />
                     <element name="status" type="vim2:ManagedEntityStatus" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterRuleInfo">
            <sequence>
               <element name="ClusterRuleInfo" type="vim2:ClusterRuleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterAffinityRuleSpec">
            <complexContent>
               <extension base="vim2:ClusterRuleInfo">
                  <sequence>
                     <element name="vm" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterAntiAffinityRuleSpec">
            <complexContent>
               <extension base="vim2:ClusterRuleInfo">
                  <sequence>
                     <element name="vm" type="vim2:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Event">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="chainId" type="xsd:int" />
                     <element name="createdTime" type="xsd:dateTime" />
                     <element name="userName" type="xsd:string" />
                     <element name="datacenter" type="vim2:DatacenterEventArgument" minOccurs="0" />
                     <element name="computeResource" type="vim2:ComputeResourceEventArgument" minOccurs="0" />
                     <element name="host" type="vim2:HostEventArgument" minOccurs="0" />
                     <element name="vm" type="vim2:VmEventArgument" minOccurs="0" />
                     <element name="fullFormattedMessage" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEvent">
            <sequence>
               <element name="Event" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="GeneralEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostInfoEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostWarningEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostErrorEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmInfoEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmWarningEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmErrorEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralUserEvent">
            <complexContent>
               <extension base="vim2:GeneralEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ServerStartedSessionEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserLoginSessionEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                     <element name="locale" type="xsd:string" />
                     <element name="sessionId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserLogoutSessionEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="BadUsernameSessionEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlreadyAuthenticatedSessionEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoAccessUserEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionTerminatedEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                     <element name="sessionId" type="xsd:string" />
                     <element name="terminatedUsername" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GlobalMessageChangedEvent">
            <complexContent>
               <extension base="vim2:SessionEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpgradeEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InfoUpgradeEvent">
            <complexContent>
               <extension base="vim2:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="WarningUpgradeEvent">
            <complexContent>
               <extension base="vim2:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ErrorUpgradeEvent">
            <complexContent>
               <extension base="vim2:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserUpgradeEvent">
            <complexContent>
               <extension base="vim2:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDisconnectedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectionLostEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostReconnectionFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoConnectionEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadUsernameEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadVersionEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedAlreadyManagedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="serverName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoLicenseEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNetworkErrorEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostRemovedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedCcagentUpgradeEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadCcagentEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedAccountFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoAccessEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostShutdownEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNotFoundEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedTimeoutEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostUpgradeFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteringMaintenanceModeEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteredMaintenanceModeEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExitMaintenanceModeEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CanceledHostOperationEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TimedOutHostOperationEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasEnabledEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasDisabledEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasEnablingEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasDisablingEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasErrorEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasOkEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUpgradedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUpgradeFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAddedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAddFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="hostname" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountCreatedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="spec" type="vim2:HostAccountSpec" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountRemovedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="account" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserPasswordChanged">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountUpdatedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="spec" type="vim2:HostAccountSpec" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserAssignedToGroup">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                     <element name="group" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserUnassignedFromGroup">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                     <element name="group" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastorePrincipalConfigured">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastorePrincipal" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMFSDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NASDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRemovedOnHostEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRenamedOnHostEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDiscoveredEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsResourceConfigureFailedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsResourceConfigureSyncedEvent">
            <complexContent>
               <extension base="vim2:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="template" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPoweredOffEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPoweredOnEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSuspendedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStartingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStoppingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSuspendingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResumingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDisconnectedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiscoveredEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmOrphanedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingCreatedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="configSpec" type="vim2:VirtualMachineConfigSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCreatedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRegisteredEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmAutoRenameEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingHotMigratedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResettingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStaticMacConflictEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim2:VmEventArgument" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacConflictEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim2:VmEventArgument" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingDeployedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="srcTemplate" type="vim2:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDeployFailedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="destDatastore" type="vim2:EntityEventArgument" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDeployedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="srcTemplate" type="vim2:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacChangedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="adapter" type="xsd:string" />
                     <element name="oldMac" type="xsd:string" />
                     <element name="newMac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacAssignedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="adapter" type="xsd:string" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidConflictEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim2:VmEventArgument" />
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingMigratedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedMigrateEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMigratedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="sourceHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUnsupportedStartingEvent">
            <complexContent>
               <extension base="vim2:VmStartingEvent">
                  <sequence>
                     <element name="guestId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsVmMigratedEvent">
            <complexContent>
               <extension base="vim2:VmMigratedEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocateSpecEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingRelocatedEvent">
            <complexContent>
               <extension base="vim2:VmRelocateSpecEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocatedEvent">
            <complexContent>
               <extension base="vim2:VmRelocateSpecEvent">
                  <sequence>
                     <element name="sourceHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocateFailedEvent">
            <complexContent>
               <extension base="vim2:VmRelocateSpecEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEmigratingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCloneEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingClonedEvent">
            <complexContent>
               <extension base="vim2:VmCloneEvent">
                  <sequence>
                     <element name="destFolder" type="vim2:FolderEventArgument" />
                     <element name="destName" type="xsd:string" />
                     <element name="destHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCloneFailedEvent">
            <complexContent>
               <extension base="vim2:VmCloneEvent">
                  <sequence>
                     <element name="destFolder" type="vim2:FolderEventArgument" />
                     <element name="destName" type="xsd:string" />
                     <element name="destHost" type="vim2:HostEventArgument" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmClonedEvent">
            <complexContent>
               <extension base="vim2:VmCloneEvent">
                  <sequence>
                     <element name="sourceVm" type="vim2:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResourceReallocatedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRenamedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDateRolledBackEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNoNetworkAccessEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFailedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="disk" type="xsd:string" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToPowerOnEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToPowerOffEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToSuspendEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToResetEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToShutdownGuestEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToRebootGuestEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToStandbyGuestEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRemovedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestShutdownEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestRebootEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestStandbyEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="version" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradeCompleteEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="version" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradeFailedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRestartedOnAlternateHostEvent">
            <complexContent>
               <extension base="vim2:VmPoweredOnEvent">
                  <sequence>
                     <element name="sourceHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmReconfiguredEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="configSpec" type="vim2:VirtualMachineConfigSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMessageEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigMissingEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPowerOffOnIsolationEvent">
            <complexContent>
               <extension base="vim2:VmPoweredOffEvent">
                  <sequence>
                     <element name="isolatedHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailoverFailed">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NotEnoughResourcesToStartVmEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidAssignedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidChangedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="oldUuid" type="xsd:string" />
                     <element name="newUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedRelayoutOnVmfs2DatastoreEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedRelayoutEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelayoutSuccessfulEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelayoutUpToDateEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConnectedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasUpdateErrorEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoMaintenanceModeDrsRecommendationForVM">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasUpdateOkEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="scheduledTask" type="vim2:ScheduledTaskEventArgument" />
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskCreatedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskStartedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskRemovedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskReconfiguredEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskCompletedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskFailedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEmailCompletedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEmailFailedEvent">
            <complexContent>
               <extension base="vim2:ScheduledTaskEvent">
                  <sequence>
                     <element name="to" type="xsd:string" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="alarm" type="vim2:AlarmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmCreatedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmStatusChangedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="source" type="vim2:ManagedEntityEventArgument" />
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="from" type="xsd:string" />
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmActionTriggeredEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="source" type="vim2:ManagedEntityEventArgument" />
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEmailCompletedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEmailFailedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="to" type="xsd:string" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSnmpCompletedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSnmpFailedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmScriptCompleteEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="script" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmScriptFailedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="script" type="xsd:string" />
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmRemovedEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmReconfiguredEvent">
            <complexContent>
               <extension base="vim2:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefEvent">
            <complexContent>
               <extension base="vim2:CustomFieldEvent">
                  <sequence>
                     <element name="fieldKey" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefAddedEvent">
            <complexContent>
               <extension base="vim2:CustomFieldDefEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefRemovedEvent">
            <complexContent>
               <extension base="vim2:CustomFieldDefEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefRenamedEvent">
            <complexContent>
               <extension base="vim2:CustomFieldDefEvent">
                  <sequence>
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldValueChangedEvent">
            <complexContent>
               <extension base="vim2:CustomFieldEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="fieldKey" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AuthorizationEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionEvent">
            <complexContent>
               <extension base="vim2:AuthorizationEvent">
                  <sequence>
                     <element name="entity" type="vim2:ManagedEntityEventArgument" />
                     <element name="principal" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionAddedEvent">
            <complexContent>
               <extension base="vim2:PermissionEvent">
                  <sequence>
                     <element name="role" type="vim2:RoleEventArgument" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionUpdatedEvent">
            <complexContent>
               <extension base="vim2:PermissionEvent">
                  <sequence>
                     <element name="role" type="vim2:RoleEventArgument" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionRemovedEvent">
            <complexContent>
               <extension base="vim2:PermissionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleEvent">
            <complexContent>
               <extension base="vim2:AuthorizationEvent">
                  <sequence>
                     <element name="role" type="vim2:RoleEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleAddedEvent">
            <complexContent>
               <extension base="vim2:RoleEvent">
                  <sequence>
                     <element name="privilegeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleUpdatedEvent">
            <complexContent>
               <extension base="vim2:RoleEvent">
                  <sequence>
                     <element name="privilegeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleRemovedEvent">
            <complexContent>
               <extension base="vim2:RoleEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreEventArgument" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDestroyedEvent">
            <complexContent>
               <extension base="vim2:DatastoreEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRenamedEvent">
            <complexContent>
               <extension base="vim2:DatastoreEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDuplicatedEvent">
            <complexContent>
               <extension base="vim2:DatastoreEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="info" type="vim2:TaskInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ServerLicenseExpiredEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                     <element name="product" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLicenseExpiredEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMotionLicenseExpiredEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoLicenseEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                     <element name="feature" type="vim2:LicenseFeatureInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerUnavailableEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerAvailableEvent">
            <complexContent>
               <extension base="vim2:LicenseEvent">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseExpiredEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="feature" type="vim2:LicenseFeatureInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationWarningEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationErrorEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationHostWarningEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                     <element name="dstHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationHostErrorEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                     <element name="dstHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationResourceWarningEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                     <element name="dstPool" type="vim2:ResourcePoolEventArgument" />
                     <element name="dstHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationResourceErrorEvent">
            <complexContent>
               <extension base="vim2:MigrationEvent">
                  <sequence>
                     <element name="dstPool" type="vim2:ResourcePoolEventArgument" />
                     <element name="dstHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasEnabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasDisabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAdmissionControlDisabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAdmissionControlEnabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasHostFailedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                     <element name="failedHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasHostIsolatedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                     <element name="isolatedHost" type="vim2:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAgentUnavailableEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAgentFoundEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InsufficientFailoverResourcesEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FailoverLevelRestored">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterOvercommittedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterStatusChangedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                     <element name="oldStatus" type="xsd:string" />
                     <element name="newStatus" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterCreatedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                     <element name="parent" type="vim2:FolderEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDestroyedEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsEnabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                     <element name="behavior" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsDisabledEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterReconfiguredEvent">
            <complexContent>
               <extension base="vim2:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="resourcePool" type="vim2:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolCreatedEvent">
            <complexContent>
               <extension base="vim2:ResourcePoolEvent">
                  <sequence>
                     <element name="parent" type="vim2:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolDestroyedEvent">
            <complexContent>
               <extension base="vim2:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolMovedEvent">
            <complexContent>
               <extension base="vim2:ResourcePoolEvent">
                  <sequence>
                     <element name="oldParent" type="vim2:ResourcePoolEventArgument" />
                     <element name="newParent" type="vim2:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolReconfiguredEvent">
            <complexContent>
               <extension base="vim2:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourceViolatedEvent">
            <complexContent>
               <extension base="vim2:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResourcePoolMovedEvent">
            <complexContent>
               <extension base="vim2:VmEvent">
                  <sequence>
                     <element name="oldParent" type="vim2:ResourcePoolEventArgument" />
                     <element name="newParent" type="vim2:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradeEvent">
            <complexContent>
               <extension base="vim2:Event">
                  <sequence>
                     <element name="legacyTemplate" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateBeingUpgradedEvent">
            <complexContent>
               <extension base="vim2:TemplateUpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradeFailedEvent">
            <complexContent>
               <extension base="vim2:TemplateUpgradeEvent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradedEvent">
            <complexContent>
               <extension base="vim2:TemplateUpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventArgument">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleEventArgument">
            <complexContent>
               <extension base="vim2:EventArgument">
                  <sequence>
                     <element name="roleId" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EntityEventArgument">
            <complexContent>
               <extension base="vim2:EventArgument">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ManagedEntityEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="folder" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatacenterEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="datacenter" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ComputeResourceEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="computeResource" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="resourcePool" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="vm" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="alarm" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEventArgument">
            <complexContent>
               <extension base="vim2:EntityEventArgument">
                  <sequence>
                     <element name="scheduledTask" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="EventCategory">
            <restriction base="xsd:string">
               <enumeration value="info" />
               <enumeration value="warning" />
               <enumeration value="error" />
               <enumeration value="user" />
            </restriction>
         </simpleType>
         <complexType name="EventDescriptionEventDetail">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="category" type="xsd:string" />
                     <element name="formatOnDatacenter" type="xsd:string" />
                     <element name="formatOnComputeResource" type="xsd:string" />
                     <element name="formatOnHost" type="xsd:string" />
                     <element name="formatOnVm" type="xsd:string" />
                     <element name="fullFormat" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEventDescriptionEventDetail">
            <sequence>
               <element name="EventDescriptionEventDetail" type="vim2:EventDescriptionEventDetail" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EventDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="category" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="eventInfo" type="vim2:EventDescriptionEventDetail" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="EventFilterSpecRecursionOption">
            <restriction base="xsd:string">
               <enumeration value="self" />
               <enumeration value="children" />
               <enumeration value="all" />
            </restriction>
         </simpleType>
         <complexType name="EventFilterSpecByEntity">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="recursion" type="vim2:EventFilterSpecRecursionOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpecByTime">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpecByUsername">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="systemUser" type="xsd:boolean" />
                     <element name="userList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:EventFilterSpecByEntity" minOccurs="0" />
                     <element name="time" type="vim2:EventFilterSpecByTime" minOccurs="0" />
                     <element name="userName" type="vim2:EventFilterSpecByUsername" minOccurs="0" />
                     <element name="eventChainId" type="xsd:int" minOccurs="0" />
                     <element name="alarm" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTask" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="disableFullMessage" type="xsd:boolean" minOccurs="0" />
                     <element name="category" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="type" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReadNextEvents">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="maxCount" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadNextEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadPreviousEvents">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="maxCount" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <element name="ReadPreviousEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCollectorForEvents">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="filter" type="vim2:EventFilterSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateCollectorForEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="LogUserEvent">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="msg" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="LogUserEventResponse">
            <complexType />
         </element>
         <element name="QueryEvents">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="filter" type="vim2:EventFilterSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="AffinityType">
            <restriction base="xsd:string">
               <enumeration value="memory" />
               <enumeration value="cpu" />
            </restriction>
         </simpleType>
         <complexType name="AffinityConfigured">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="configuredAffinity" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AffinityConfiguredFault" type="vim2:AffinityConfigured"/>
         <complexType name="AgentInstallFailed">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AgentInstallFailedFault" type="vim2:AgentInstallFailed"/>
         <complexType name="AlreadyBeingManaged">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyBeingManagedFault" type="vim2:AlreadyBeingManaged"/>
         <complexType name="AlreadyConnected">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyConnectedFault" type="vim2:AlreadyConnected"/>
         <complexType name="AlreadyExists">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyExistsFault" type="vim2:AlreadyExists"/>
         <complexType name="AlreadyUpgraded">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyUpgradedFault" type="vim2:AlreadyUpgraded"/>
         <complexType name="ApplicationQuiesceFault">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ApplicationQuiesceFaultFault" type="vim2:ApplicationQuiesceFault"/>
         <complexType name="AuthMinimumAdminPermission">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AuthMinimumAdminPermissionFault" type="vim2:AuthMinimumAdminPermission"/>
         <complexType name="CannotAccessFile">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessFileFault" type="vim2:CannotAccessFile"/>
         <complexType name="CannotAccessLocalSource">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessLocalSourceFault" type="vim2:CannotAccessLocalSource"/>
         <complexType name="CannotAccessNetwork">
            <complexContent>
               <extension base="vim2:CannotAccessVmDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessNetworkFault" type="vim2:CannotAccessNetwork"/>
         <complexType name="CannotAccessVmComponent">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmComponentFault" type="vim2:CannotAccessVmComponent"/>
         <complexType name="CannotAccessVmConfig">
            <complexContent>
               <extension base="vim2:CannotAccessVmComponent">
                  <sequence>
                     <element name="reason" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmConfigFault" type="vim2:CannotAccessVmConfig"/>
         <complexType name="CannotAccessVmDevice">
            <complexContent>
               <extension base="vim2:CannotAccessVmComponent">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="backing" type="xsd:string" />
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmDeviceFault" type="vim2:CannotAccessVmDevice"/>
         <complexType name="CannotAccessVmDisk">
            <complexContent>
               <extension base="vim2:CannotAccessVmDevice">
                  <sequence>
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmDiskFault" type="vim2:CannotAccessVmDisk"/>
         <complexType name="CannotDecryptPasswords">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDecryptPasswordsFault" type="vim2:CannotDecryptPasswords"/>
         <complexType name="CannotDeleteFile">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDeleteFileFault" type="vim2:CannotDeleteFile"/>
         <complexType name="CannotModifyConfigCpuRequirements">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotModifyConfigCpuRequirementsFault" type="vim2:CannotModifyConfigCpuRequirements"/>
         <complexType name="ConcurrentAccess">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ConcurrentAccessFault" type="vim2:ConcurrentAccess"/>
         <complexType name="CpuCompatibilityUnknown">
            <complexContent>
               <extension base="vim2:CpuIncompatible">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuCompatibilityUnknownFault" type="vim2:CpuCompatibilityUnknown"/>
         <complexType name="CpuIncompatible">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="level" type="xsd:int" />
                     <element name="registerName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuIncompatibleFault" type="vim2:CpuIncompatible"/>
         <complexType name="CustomizationFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CustomizationFaultFault" type="vim2:CustomizationFault"/>
         <complexType name="DasConfigFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DasConfigFaultFault" type="vim2:DasConfigFault"/>
         <complexType name="DatabaseError">
            <complexContent>
               <extension base="vim2:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatabaseErrorFault" type="vim2:DatabaseError"/>
         <complexType name="DatacenterMismatchArgument">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="inputDatacenter" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDatacenterMismatchArgument">
            <sequence>
               <element name="DatacenterMismatchArgument" type="vim2:DatacenterMismatchArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatacenterMismatch">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="invalidArgument" type="vim2:DatacenterMismatchArgument" maxOccurs="unbounded" />
                     <element name="expectedDatacenter" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatacenterMismatchFault" type="vim2:DatacenterMismatch"/>
         <complexType name="DatastoreNotWritableOnHost">
            <complexContent>
               <extension base="vim2:InvalidDatastore">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatastoreNotWritableOnHostFault" type="vim2:DatastoreNotWritableOnHost"/>
         <complexType name="DestinationSwitchFull">
            <complexContent>
               <extension base="vim2:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DestinationSwitchFullFault" type="vim2:DestinationSwitchFull"/>
         <complexType name="DeviceNotFound">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceNotFoundFault" type="vim2:DeviceNotFound"/>
         <complexType name="DeviceNotSupported">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceNotSupportedFault" type="vim2:DeviceNotSupported"/>
         <complexType name="DisallowedDiskModeChange">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisallowedDiskModeChangeFault" type="vim2:DisallowedDiskModeChange"/>
         <complexType name="DisallowedMigrationDeviceAttached">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisallowedMigrationDeviceAttachedFault" type="vim2:DisallowedMigrationDeviceAttached"/>
         <complexType name="DiskNotSupported">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="disk" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DiskNotSupportedFault" type="vim2:DiskNotSupported"/>
         <complexType name="DuplicateName">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="object" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DuplicateNameFault" type="vim2:DuplicateName"/>
         <complexType name="FileAlreadyExists">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileAlreadyExistsFault" type="vim2:FileAlreadyExists"/>
         <complexType name="FileFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="file" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileFaultFault" type="vim2:FileFault"/>
         <complexType name="FileLocked">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileLockedFault" type="vim2:FileLocked"/>
         <complexType name="FileNotFound">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileNotFoundFault" type="vim2:FileNotFound"/>
         <complexType name="FileNotWritable">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileNotWritableFault" type="vim2:FileNotWritable"/>
         <complexType name="FilesystemQuiesceFault">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FilesystemQuiesceFaultFault" type="vim2:FilesystemQuiesceFault"/>
         <complexType name="GenericVmConfigFault">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="GenericVmConfigFaultFault" type="vim2:GenericVmConfigFault"/>
         <complexType name="HostConfigFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostConfigFaultFault" type="vim2:HostConfigFault"/>
         <complexType name="HostConnectFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostConnectFaultFault" type="vim2:HostConnectFault"/>
         <complexType name="IDEDiskNotSupported">
            <complexContent>
               <extension base="vim2:DiskNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IDEDiskNotSupportedFault" type="vim2:IDEDiskNotSupported"/>
         <complexType name="InaccessibleDatastore">
            <complexContent>
               <extension base="vim2:InvalidDatastore">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InaccessibleDatastoreFault" type="vim2:InaccessibleDatastore"/>
         <complexType name="IncompatibleSetting">
            <complexContent>
               <extension base="vim2:InvalidArgument">
                  <sequence>
                     <element name="conflictingProperty" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncompatibleSettingFault" type="vim2:IncompatibleSetting"/>
         <complexType name="IncorrectFileType">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncorrectFileTypeFault" type="vim2:IncorrectFileType"/>
         <complexType name="InsufficientCpuResourcesFault">
            <complexContent>
               <extension base="vim2:InsufficientResourcesFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientCpuResourcesFaultFault" type="vim2:InsufficientCpuResourcesFault"/>
         <complexType name="InsufficientFailoverResourcesFault">
            <complexContent>
               <extension base="vim2:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientFailoverResourcesFaultFault" type="vim2:InsufficientFailoverResourcesFault"/>
         <complexType name="InsufficientHostCapacityFault">
            <complexContent>
               <extension base="vim2:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientHostCapacityFaultFault" type="vim2:InsufficientHostCapacityFault"/>
         <complexType name="InsufficientMemoryResourcesFault">
            <complexContent>
               <extension base="vim2:InsufficientResourcesFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientMemoryResourcesFaultFault" type="vim2:InsufficientMemoryResourcesFault"/>
         <complexType name="InsufficientResourcesFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientResourcesFaultFault" type="vim2:InsufficientResourcesFault"/>
         <complexType name="InvalidController">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                     <element name="controllerKey" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidControllerFault" type="vim2:InvalidController"/>
         <complexType name="InvalidDatastore">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDatastoreFault" type="vim2:InvalidDatastore"/>
         <complexType name="InvalidDatastorePath">
            <complexContent>
               <extension base="vim2:InvalidDatastore">
                  <sequence>
                     <element name="datastorePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDatastorePathFault" type="vim2:InvalidDatastorePath"/>
         <complexType name="InvalidDeviceBacking">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceBackingFault" type="vim2:InvalidDeviceBacking"/>
         <complexType name="InvalidDeviceOperation">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                     <element name="badOp" type="vim2:VirtualDeviceConfigSpecOperation" minOccurs="0" />
                     <element name="badFileOp" type="vim2:VirtualDeviceConfigSpecFileOperation" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceOperationFault" type="vim2:InvalidDeviceOperation"/>
         <complexType name="InvalidDeviceSpec">
            <complexContent>
               <extension base="vim2:InvalidVmConfig">
                  <sequence>
                     <element name="deviceIndex" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceSpecFault" type="vim2:InvalidDeviceSpec"/>
         <complexType name="InvalidDiskFormat">
            <complexContent>
               <extension base="vim2:InvalidFormat">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDiskFormatFault" type="vim2:InvalidDiskFormat"/>
         <complexType name="InvalidFolder">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="target" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidFolderFault" type="vim2:InvalidFolder"/>
         <complexType name="InvalidFormat">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidFormatFault" type="vim2:InvalidFormat"/>
         <complexType name="InvalidLicense">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="licenseContent" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLicenseFault" type="vim2:InvalidLicense"/>
         <complexType name="InvalidLocale">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLocaleFault" type="vim2:InvalidLocale"/>
         <complexType name="InvalidLogin">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLoginFault" type="vim2:InvalidLogin"/>
         <complexType name="InvalidName">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidNameFault" type="vim2:InvalidName"/>
         <complexType name="InvalidPowerState">
            <complexContent>
               <extension base="vim2:InvalidState">
                  <sequence>
                     <element name="requestedState" type="vim2:VirtualMachinePowerState" minOccurs="0" />
                     <element name="existingState" type="vim2:VirtualMachinePowerState" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPowerStateFault" type="vim2:InvalidPowerState"/>
         <complexType name="InvalidResourcePoolStructureFault">
            <complexContent>
               <extension base="vim2:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidResourcePoolStructureFaultFault" type="vim2:InvalidResourcePoolStructureFault"/>
         <complexType name="InvalidSnapshotFormat">
            <complexContent>
               <extension base="vim2:InvalidFormat">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidSnapshotFormatFault" type="vim2:InvalidSnapshotFormat"/>
         <complexType name="InvalidState">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidStateFault" type="vim2:InvalidState"/>
         <complexType name="InvalidVmConfig">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                     <element name="property" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidVmConfigFault" type="vim2:InvalidVmConfig"/>
         <complexType name="IpHostnameGeneratorError">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IpHostnameGeneratorErrorFault" type="vim2:IpHostnameGeneratorError"/>
         <complexType name="LegacyNetworkInterfaceInUse">
            <complexContent>
               <extension base="vim2:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LegacyNetworkInterfaceInUseFault" type="vim2:LegacyNetworkInterfaceInUse"/>
         <complexType name="LicenseServerUnavailable">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseServerUnavailableFault" type="vim2:LicenseServerUnavailable"/>
         <complexType name="LinuxVolumeNotClean">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LinuxVolumeNotCleanFault" type="vim2:LinuxVolumeNotClean"/>
         <complexType name="LogBundlingFailed">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LogBundlingFailedFault" type="vim2:LogBundlingFailed"/>
         <complexType name="MemorySnapshotOnIndependentDisk">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MemorySnapshotOnIndependentDiskFault" type="vim2:MemorySnapshotOnIndependentDisk"/>
         <complexType name="MigrationFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MigrationFaultFault" type="vim2:MigrationFault"/>
         <complexType name="MismatchedNetworkPolicies">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="backing" type="xsd:string" />
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MismatchedNetworkPoliciesFault" type="vim2:MismatchedNetworkPolicies"/>
         <complexType name="MismatchedVMotionNetworkNames">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="sourceNetwork" type="xsd:string" />
                     <element name="destNetwork" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MismatchedVMotionNetworkNamesFault" type="vim2:MismatchedVMotionNetworkNames"/>
         <complexType name="MissingController">
            <complexContent>
               <extension base="vim2:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingControllerFault" type="vim2:MissingController"/>
         <complexType name="MissingLinuxCustResources">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingLinuxCustResourcesFault" type="vim2:MissingLinuxCustResources"/>
         <complexType name="MissingWindowsCustResources">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingWindowsCustResourcesFault" type="vim2:MissingWindowsCustResources"/>
         <complexType name="MountError">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                     <element name="vm" type="vim2:ManagedObjectReference" />
                     <element name="diskIndex" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MountErrorFault" type="vim2:MountError"/>
         <complexType name="MultipleSnapshotsNotSupported">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MultipleSnapshotsNotSupportedFault" type="vim2:MultipleSnapshotsNotSupported"/>
         <complexType name="NetworkCopyFault">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NetworkCopyFaultFault" type="vim2:NetworkCopyFault"/>
         <complexType name="NoActiveHostInCluster">
            <complexContent>
               <extension base="vim2:InvalidState">
                  <sequence>
                     <element name="computeResource" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoActiveHostInClusterFault" type="vim2:NoActiveHostInCluster"/>
         <complexType name="NoDiskFound">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDiskFoundFault" type="vim2:NoDiskFound"/>
         <complexType name="NoDiskSpace">
            <complexContent>
               <extension base="vim2:FileFault">
                  <sequence>
                     <element name="datastore" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDiskSpaceFault" type="vim2:NoDiskSpace"/>
         <complexType name="NoDisksToCustomize">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDisksToCustomizeFault" type="vim2:NoDisksToCustomize"/>
         <complexType name="NoGateway">
            <complexContent>
               <extension base="vim2:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoGatewayFault" type="vim2:NoGateway"/>
         <complexType name="NoGuestHeartbeat">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoGuestHeartbeatFault" type="vim2:NoGuestHeartbeat"/>
         <complexType name="NoHost">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoHostFault" type="vim2:NoHost"/>
         <complexType name="NoPermission">
            <complexContent>
               <extension base="vim2:SecurityError">
                  <sequence>
                     <element name="object" type="vim2:ManagedObjectReference" />
                     <element name="privilegeId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPermissionFault" type="vim2:NoPermission"/>
         <complexType name="NoPermissionOnHost">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPermissionOnHostFault" type="vim2:NoPermissionOnHost"/>
         <complexType name="NoVirtualNic">
            <complexContent>
               <extension base="vim2:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoVirtualNicFault" type="vim2:NoVirtualNic"/>
         <complexType name="NotEnoughCpus">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="numCpuDest" type="xsd:int" />
                     <element name="numCpuVm" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughCpusFault" type="vim2:NotEnoughCpus"/>
         <complexType name="NotEnoughLogicalCpus">
            <complexContent>
               <extension base="vim2:NotEnoughCpus">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughLogicalCpusFault" type="vim2:NotEnoughLogicalCpus"/>
         <complexType name="NotFound">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotFoundFault" type="vim2:NotFound"/>
         <complexType name="NotSupportedHost">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                     <element name="productName" type="xsd:string" minOccurs="0" />
                     <element name="productVersion" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotSupportedHostFault" type="vim2:NotSupportedHost"/>
         <complexType name="NumVirtualCpusNotSupported">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="maxSupportedVcpusDest" type="xsd:int" />
                     <element name="numCpuVm" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NumVirtualCpusNotSupportedFault" type="vim2:NumVirtualCpusNotSupported"/>
         <complexType name="OutOfBounds">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="argumentName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OutOfBoundsFault" type="vim2:OutOfBounds"/>
         <complexType name="PhysCompatRDMNotSupported">
            <complexContent>
               <extension base="vim2:RDMNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PhysCompatRDMNotSupportedFault" type="vim2:PhysCompatRDMNotSupported"/>
         <complexType name="PlatformConfigFault">
            <complexContent>
               <extension base="vim2:HostConfigFault">
                  <sequence>
                     <element name="text" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PlatformConfigFaultFault" type="vim2:PlatformConfigFault"/>
         <complexType name="RDMNotPreserved">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMNotPreservedFault" type="vim2:RDMNotPreserved"/>
         <complexType name="RDMNotSupported">
            <complexContent>
               <extension base="vim2:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMNotSupportedFault" type="vim2:RDMNotSupported"/>
         <complexType name="RDMPointsToInaccessibleDisk">
            <complexContent>
               <extension base="vim2:CannotAccessVmDisk">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMPointsToInaccessibleDiskFault" type="vim2:RDMPointsToInaccessibleDisk"/>
         <complexType name="RawDiskNotSupported">
            <complexContent>
               <extension base="vim2:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RawDiskNotSupportedFault" type="vim2:RawDiskNotSupported"/>
         <complexType name="ReadOnlyDisksWithLegacyDestination">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="roDiskCount" type="xsd:int" />
                     <element name="timeoutDanger" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReadOnlyDisksWithLegacyDestinationFault" type="vim2:ReadOnlyDisksWithLegacyDestination"/>
         <complexType name="RemoteDeviceNotSupported">
            <complexContent>
               <extension base="vim2:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoteDeviceNotSupportedFault" type="vim2:RemoteDeviceNotSupported"/>
         <complexType name="RemoveFailed">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoveFailedFault" type="vim2:RemoveFailed"/>
         <complexType name="ResourceInUse">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ResourceInUseFault" type="vim2:ResourceInUse"/>
         <complexType name="RuleViolation">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RuleViolationFault" type="vim2:RuleViolation"/>
         <complexType name="SharedBusControllerNotSupported">
            <complexContent>
               <extension base="vim2:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SharedBusControllerNotSupportedFault" type="vim2:SharedBusControllerNotSupported"/>
         <complexType name="SnapshotCopyNotSupported">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotCopyNotSupportedFault" type="vim2:SnapshotCopyNotSupported"/>
         <complexType name="SnapshotFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotFaultFault" type="vim2:SnapshotFault"/>
         <complexType name="SnapshotIncompatibleDeviceInVm">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                     <element name="fault" type="vim2:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotIncompatibleDeviceInVmFault" type="vim2:SnapshotIncompatibleDeviceInVm"/>
         <complexType name="SnapshotRevertIssue">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="snapshotName" type="xsd:string" minOccurs="0" />
                     <element name="event" type="vim2:Event" minOccurs="0" maxOccurs="unbounded" />
                     <element name="errors" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotRevertIssueFault" type="vim2:SnapshotRevertIssue"/>
         <complexType name="SuspendedRelocateNotSupported">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SuspendedRelocateNotSupportedFault" type="vim2:SuspendedRelocateNotSupported"/>
         <complexType name="TaskInProgress">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="task" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TaskInProgressFault" type="vim2:TaskInProgress"/>
         <complexType name="Timedout">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TimedoutFault" type="vim2:Timedout"/>
         <complexType name="TooManyDevices">
            <complexContent>
               <extension base="vim2:InvalidVmConfig">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyDevicesFault" type="vim2:TooManyDevices"/>
         <complexType name="TooManyHosts">
            <complexContent>
               <extension base="vim2:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyHostsFault" type="vim2:TooManyHosts"/>
         <complexType name="TooManySnapshotLevels">
            <complexContent>
               <extension base="vim2:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManySnapshotLevelsFault" type="vim2:TooManySnapshotLevels"/>
         <complexType name="ToolsUnavailable">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsUnavailableFault" type="vim2:ToolsUnavailable"/>
         <complexType name="UncommittedUndoableDisk">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UncommittedUndoableDiskFault" type="vim2:UncommittedUndoableDisk"/>
         <complexType name="UncustomizableGuest">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                     <element name="uncustomizableGuestOS" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UncustomizableGuestFault" type="vim2:UncustomizableGuest"/>
         <complexType name="UnexpectedCustomizationFault">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnexpectedCustomizationFaultFault" type="vim2:UnexpectedCustomizationFault"/>
         <complexType name="UnsupportedDatastore">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedDatastoreFault" type="vim2:UnsupportedDatastore"/>
         <complexType name="UnsupportedGuest">
            <complexContent>
               <extension base="vim2:InvalidVmConfig">
                  <sequence>
                     <element name="unsupportedGuestOS" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedGuestFault" type="vim2:UnsupportedGuest"/>
         <complexType name="UnsupportedVmxLocation">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedVmxLocationFault" type="vim2:UnsupportedVmxLocation"/>
         <complexType name="UserNotFound">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                     <element name="principal" type="xsd:string" />
                     <element name="unresolved" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UserNotFoundFault" type="vim2:UserNotFound"/>
         <complexType name="VMOnVirtualIntranet">
            <complexContent>
               <extension base="vim2:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMOnVirtualIntranetFault" type="vim2:VMOnVirtualIntranet"/>
         <complexType name="VMotionInterfaceIssue">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                     <element name="atSourceHost" type="xsd:boolean" />
                     <element name="failedHost" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionInterfaceIssueFault" type="vim2:VMotionInterfaceIssue"/>
         <complexType name="VMotionLinkCapacityLow">
            <complexContent>
               <extension base="vim2:VMotionInterfaceIssue">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionLinkCapacityLowFault" type="vim2:VMotionLinkCapacityLow"/>
         <complexType name="VMotionLinkDown">
            <complexContent>
               <extension base="vim2:VMotionInterfaceIssue">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionLinkDownFault" type="vim2:VMotionLinkDown"/>
         <complexType name="VMotionNotConfigured">
            <complexContent>
               <extension base="vim2:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotConfiguredFault" type="vim2:VMotionNotConfigured"/>
         <complexType name="VMotionNotLicensed">
            <complexContent>
               <extension base="vim2:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotLicensedFault" type="vim2:VMotionNotLicensed"/>
         <complexType name="VMotionNotSupported">
            <complexContent>
               <extension base="vim2:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotSupportedFault" type="vim2:VMotionNotSupported"/>
         <complexType name="VMotionProtocolIncompatible">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionProtocolIncompatibleFault" type="vim2:VMotionProtocolIncompatible"/>
         <complexType name="VimFault">
            <complexContent>
               <extension base="vim2:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VimFaultFault" type="vim2:VimFault"/>
         <complexType name="VirtualHardwareCompatibilityIssue">
            <complexContent>
               <extension base="vim2:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualHardwareCompatibilityIssueFault" type="vim2:VirtualHardwareCompatibilityIssue"/>
         <complexType name="VirtualHardwareVersionNotSupported">
            <complexContent>
               <extension base="vim2:VirtualHardwareCompatibilityIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualHardwareVersionNotSupportedFault" type="vim2:VirtualHardwareVersionNotSupported"/>
         <complexType name="VmConfigFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmConfigFaultFault" type="vim2:VmConfigFault"/>
         <complexType name="VmLimitLicense">
            <complexContent>
               <extension base="vim2:NotEnoughLicenses">
                  <sequence>
                     <element name="limit" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmLimitLicenseFault" type="vim2:VmLimitLicense"/>
         <complexType name="VmToolsUpgradeFault">
            <complexContent>
               <extension base="vim2:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmToolsUpgradeFaultFault" type="vim2:VmToolsUpgradeFault"/>
         <complexType name="VolumeEditorError">
            <complexContent>
               <extension base="vim2:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VolumeEditorErrorFault" type="vim2:VolumeEditorError"/>
         <complexType name="WillModifyConfigCpuRequirements">
            <complexContent>
               <extension base="vim2:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="WillModifyConfigCpuRequirementsFault" type="vim2:WillModifyConfigCpuRequirements"/>
         <simpleType name="AutoStartAction">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="systemDefault" />
               <enumeration value="powerOn" />
               <enumeration value="powerOff" />
               <enumeration value="guestShutdown" />
               <enumeration value="suspend" />
            </restriction>
         </simpleType>
         <complexType name="AutoStartDefaults">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="startDelay" type="xsd:int" minOccurs="0" />
                     <element name="stopDelay" type="xsd:int" minOccurs="0" />
                     <element name="waitForHeartbeat" type="xsd:boolean" minOccurs="0" />
                     <element name="stopAction" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="AutoStartWaitHeartbeatSetting">
            <restriction base="xsd:string">
               <enumeration value="yes" />
               <enumeration value="no" />
               <enumeration value="systemDefault" />
            </restriction>
         </simpleType>
         <complexType name="AutoStartPowerInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="vim2:ManagedObjectReference" />
                     <element name="startOrder" type="xsd:int" />
                     <element name="startDelay" type="xsd:int" />
                     <element name="waitForHeartbeat" type="vim2:AutoStartWaitHeartbeatSetting" />
                     <element name="startAction" type="xsd:string" />
                     <element name="stopDelay" type="xsd:int" />
                     <element name="stopAction" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAutoStartPowerInfo">
            <sequence>
               <element name="AutoStartPowerInfo" type="vim2:AutoStartPowerInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostAutoStartManagerConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="defaults" type="vim2:AutoStartDefaults" minOccurs="0" />
                     <element name="powerInfo" type="vim2:AutoStartPowerInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReconfigureAutostart">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:HostAutoStartManagerConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureAutostartResponse">
            <complexType />
         </element>
         <element name="AutoStartPowerOn">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="AutoStartPowerOnResponse">
            <complexType />
         </element>
         <element name="AutoStartPowerOff">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="AutoStartPowerOffResponse">
            <complexType />
         </element>
         <complexType name="HostCapability">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="recursiveResourcePoolsSupported" type="xsd:boolean" />
                     <element name="rebootSupported" type="xsd:boolean" />
                     <element name="shutdownSupported" type="xsd:boolean" />
                     <element name="vmotionSupported" type="xsd:boolean" />
                     <element name="maxSupportedVMs" type="xsd:int" minOccurs="0" />
                     <element name="maxRunningVMs" type="xsd:int" minOccurs="0" />
                     <element name="maxSupportedVcpus" type="xsd:int" minOccurs="0" />
                     <element name="datastorePrincipalSupported" type="xsd:boolean" />
                     <element name="sanSupported" type="xsd:boolean" />
                     <element name="nfsSupported" type="xsd:boolean" />
                     <element name="iscsiSupported" type="xsd:boolean" />
                     <element name="vlanTaggingSupported" type="xsd:boolean" />
                     <element name="nicTeamingSupported" type="xsd:boolean" />
                     <element name="highGuestMemSupported" type="xsd:boolean" />
                     <element name="maintenanceModeSupported" type="xsd:boolean" />
                     <element name="suspendedRelocateSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostConfigChangeMode">
            <restriction base="xsd:string">
               <enumeration value="modify" />
               <enumeration value="replace" />
            </restriction>
         </simpleType>
         <simpleType name="HostConfigChangeOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <complexType name="HostConfigChange">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" />
                     <element name="product" type="vim2:AboutInfo" />
                     <element name="hyperThread" type="vim2:HostHyperThreadScheduleInfo" minOccurs="0" />
                     <element name="consoleReservation" type="vim2:ServiceConsoleReservationInfo" minOccurs="0" />
                     <element name="storageDevice" type="vim2:HostStorageDeviceInfo" minOccurs="0" />
                     <element name="fileSystemVolume" type="vim2:HostFileSystemVolumeInfo" minOccurs="0" />
                     <element name="network" type="vim2:HostNetworkInfo" minOccurs="0" />
                     <element name="vmotion" type="vim2:HostVMotionInfo" minOccurs="0" />
                     <element name="capabilities" type="vim2:HostNetCapabilities" minOccurs="0" />
                     <element name="offloadCapabilities" type="vim2:HostNetOffloadCapabilities" minOccurs="0" />
                     <element name="service" type="vim2:HostServiceInfo" minOccurs="0" />
                     <element name="firewall" type="vim2:HostFirewallInfo" minOccurs="0" />
                     <element name="autoStart" type="vim2:HostAutoStartManagerConfig" minOccurs="0" />
                     <element name="activeDiagnosticPartition" type="vim2:HostDiagnosticPartition" minOccurs="0" />
                     <element name="option" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="optionDef" type="vim2:OptionDef" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastorePrincipal" type="xsd:string" minOccurs="0" />
                     <element name="systemResources" type="vim2:HostSystemResourceInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigManager">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="cpuScheduler" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="datastoreSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="memoryManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="storageSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="networkSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="vmotionSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="serviceSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="firewallSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="advancedOption" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="diagnosticSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="autoStartManager" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="snmpSystem" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectInfoNetworkInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="summary" type="vim2:NetworkSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostConnectInfoNetworkInfo">
            <sequence>
               <element name="HostConnectInfoNetworkInfo" type="vim2:HostConnectInfoNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNewNetworkConnectInfo">
            <complexContent>
               <extension base="vim2:HostConnectInfoNetworkInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreConnectInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="summary" type="vim2:DatastoreSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDatastoreConnectInfo">
            <sequence>
               <element name="HostDatastoreConnectInfo" type="vim2:HostDatastoreConnectInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDatastoreExistsConnectInfo">
            <complexContent>
               <extension base="vim2:HostDatastoreConnectInfo">
                  <sequence>
                     <element name="newDatastoreName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreNameConflictConnectInfo">
            <complexContent>
               <extension base="vim2:HostDatastoreConnectInfo">
                  <sequence>
                     <element name="newDatastoreName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="serverIp" type="xsd:string" minOccurs="0" />
                     <element name="host" type="vim2:HostListSummary" />
                     <element name="vm" type="vim2:VirtualMachineSummary" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vimAccountNameRequired" type="xsd:boolean" minOccurs="0" />
                     <element name="clusterSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="network" type="vim2:HostConnectInfoNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastore" type="vim2:HostDatastoreConnectInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="userName" type="xsd:string" minOccurs="0" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                     <element name="vmFolder" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="force" type="xsd:boolean" />
                     <element name="vimAccountName" type="xsd:string" minOccurs="0" />
                     <element name="vimAccountPassword" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCpuIdInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="level" type="xsd:int" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="eax" type="xsd:string" minOccurs="0" />
                     <element name="ebx" type="xsd:string" minOccurs="0" />
                     <element name="ecx" type="xsd:string" minOccurs="0" />
                     <element name="edx" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostCpuIdInfo">
            <sequence>
               <element name="HostCpuIdInfo" type="vim2:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostHyperThreadScheduleInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="available" type="xsd:boolean" />
                     <element name="active" type="xsd:boolean" />
                     <element name="config" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EnableHyperThreading">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="EnableHyperThreadingResponse">
            <complexType />
         </element>
         <element name="DisableHyperThreading">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DisableHyperThreadingResponse">
            <complexType />
         </element>
         <complexType name="FileQueryFlags">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="fileType" type="xsd:boolean" />
                     <element name="fileSize" type="xsd:boolean" />
                     <element name="modification" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FileInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" />
                     <element name="fileSize" type="xsd:long" minOccurs="0" />
                     <element name="modification" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfFileInfo">
            <sequence>
               <element name="FileInfo" type="vim2:FileInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="FileQuery">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfFileQuery">
            <sequence>
               <element name="FileQuery" type="vim2:FileQuery" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VmConfigFileQueryFilter">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="matchConfigVersion" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileQueryFlags">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="configVersion" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                     <element name="filter" type="vim2:VmConfigFileQueryFilter" minOccurs="0" />
                     <element name="details" type="vim2:VmConfigFileQueryFlags" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateConfigFileQuery">
            <complexContent>
               <extension base="vim2:VmConfigFileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQueryFilter">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="matchHardwareVersion" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQueryFlags">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskType" type="xsd:boolean" />
                     <element name="capacityKb" type="xsd:boolean" />
                     <element name="hardwareVersion" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                     <element name="filter" type="vim2:VmDiskFileQueryFilter" minOccurs="0" />
                     <element name="details" type="vim2:VmDiskFileQueryFlags" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSnapshotFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IsoImageFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloppyImageFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNvramFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmLogFileQuery">
            <complexContent>
               <extension base="vim2:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                     <element name="configVersion" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateConfigFileInfo">
            <complexContent>
               <extension base="vim2:VmConfigFileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                     <element name="diskType" type="xsd:string" minOccurs="0" />
                     <element name="capacityKb" type="xsd:long" minOccurs="0" />
                     <element name="hardwareVersion" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSnapshotFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IsoImageFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloppyImageFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNvramFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmLogFileInfo">
            <complexContent>
               <extension base="vim2:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreBrowserSearchSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="query" type="vim2:FileQuery" minOccurs="0" maxOccurs="unbounded" />
                     <element name="details" type="vim2:FileQueryFlags" minOccurs="0" />
                     <element name="searchCaseInsensitive" type="xsd:boolean" minOccurs="0" />
                     <element name="matchPattern" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="sortFoldersFirst" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreBrowserSearchResults">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="folderPath" type="xsd:string" minOccurs="0" />
                     <element name="file" type="vim2:FileInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDatastoreBrowserSearchResults">
            <sequence>
               <element name="HostDatastoreBrowserSearchResults" type="vim2:HostDatastoreBrowserSearchResults" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="SearchDatastore_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastorePath" type="xsd:string" />
                  <element name="searchSpec" type="vim2:HostDatastoreBrowserSearchSpec" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="SearchDatastore_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="SearchDatastoreSubFolders_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastorePath" type="xsd:string" />
                  <element name="searchSpec" type="vim2:HostDatastoreBrowserSearchSpec" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="SearchDatastoreSubFolders_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DeleteFile">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastorePath" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DeleteFileResponse">
            <complexType />
         </element>
         <element name="QueryAvailableDisksForVmfs">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryAvailableDisksForVmfsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostScsiDisk" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVmfsDatastoreCreateOptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="devicePath" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVmfsDatastoreCreateOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateVmfsDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:VmfsDatastoreCreateSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateVmfsDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVmfsDatastoreExtendOptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastore" type="vim2:ManagedObjectReference" />
                  <element name="devicePath" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryVmfsDatastoreExtendOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="ExtendVmfsDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastore" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:VmfsDatastoreExtendSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="ExtendVmfsDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateNasDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:HostNasVolumeSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateNasDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateLocalDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" />
                  <element name="path" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateLocalDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveDatastore">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="datastore" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveDatastoreResponse">
            <complexType />
         </element>
         <element name="ConfigureDatastorePrincipal">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="userName" type="xsd:string" />
                  <element name="password" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="ConfigureDatastorePrincipalResponse">
            <complexType />
         </element>
         <complexType name="VmfsDatastoreInfo">
            <complexContent>
               <extension base="vim2:DatastoreInfo">
                  <sequence>
                     <element name="vmfs" type="vim2:HostVmfsVolume" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NasDatastoreInfo">
            <complexContent>
               <extension base="vim2:DatastoreInfo">
                  <sequence>
                     <element name="nas" type="vim2:HostNasVolume" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalDatastoreInfo">
            <complexContent>
               <extension base="vim2:DatastoreInfo">
                  <sequence>
                     <element name="path" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreCreateSpec">
            <complexContent>
               <extension base="vim2:VmfsDatastoreSpec">
                  <sequence>
                     <element name="partition" type="vim2:HostDiskPartitionSpec" />
                     <element name="vmfs" type="vim2:HostVmfsSpec" />
                     <element name="extent" type="vim2:HostScsiDiskPartition" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreExtendSpec">
            <complexContent>
               <extension base="vim2:VmfsDatastoreSpec">
                  <sequence>
                     <element name="partition" type="vim2:HostDiskPartitionSpec" />
                     <element name="extent" type="vim2:HostScsiDiskPartition" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreBaseOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="layout" type="vim2:HostDiskPartitionLayout" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreSingleExtentOption">
            <complexContent>
               <extension base="vim2:VmfsDatastoreBaseOption">
                  <sequence>
                     <element name="vmfsExtent" type="vim2:HostDiskPartitionBlockRange" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreAllExtentOption">
            <complexContent>
               <extension base="vim2:VmfsDatastoreSingleExtentOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreMultipleExtentOption">
            <complexContent>
               <extension base="vim2:VmfsDatastoreBaseOption">
                  <sequence>
                     <element name="vmfsExtent" type="vim2:HostDiskPartitionBlockRange" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="info" type="vim2:VmfsDatastoreBaseOption" />
                     <element name="spec" type="vim2:VmfsDatastoreSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVmfsDatastoreOption">
            <sequence>
               <element name="VmfsDatastoreOption" type="vim2:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDevice">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="deviceType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="QueryAvailablePartition">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryAvailablePartitionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostDiagnosticPartition" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="SelectActivePartition">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="partition" type="vim2:HostScsiDiskPartition" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="SelectActivePartitionResponse">
            <complexType />
         </element>
         <element name="QueryPartitionCreateOptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="storageType" type="xsd:string" />
                  <element name="diagnosticType" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPartitionCreateOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostDiagnosticPartitionCreateOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPartitionCreateDesc">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="diskUuid" type="xsd:string" />
                  <element name="diagnosticType" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryPartitionCreateDescResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostDiagnosticPartitionCreateDescription" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateDiagnosticPartition">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:HostDiagnosticPartitionCreateSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateDiagnosticPartitionResponse">
            <complexType />
         </element>
         <simpleType name="DiagnosticPartitionStorageType">
            <restriction base="xsd:string">
               <enumeration value="directAttached" />
               <enumeration value="networkAttached" />
            </restriction>
         </simpleType>
         <simpleType name="DiagnosticPartitionType">
            <restriction base="xsd:string">
               <enumeration value="singleHost" />
               <enumeration value="multiHost" />
            </restriction>
         </simpleType>
         <complexType name="HostDiagnosticPartitionCreateOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="disk" type="vim2:HostScsiDisk" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiagnosticPartitionCreateOption">
            <sequence>
               <element name="HostDiagnosticPartitionCreateOption" type="vim2:HostDiagnosticPartitionCreateOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiagnosticPartitionCreateSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="id" type="vim2:HostScsiDiskPartition" />
                     <element name="partition" type="vim2:HostDiskPartitionSpec" />
                     <element name="active" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiagnosticPartitionCreateDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="layout" type="vim2:HostDiskPartitionLayout" />
                     <element name="diskUuid" type="xsd:string" />
                     <element name="spec" type="vim2:HostDiagnosticPartitionCreateSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiagnosticPartition">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="slots" type="xsd:int" />
                     <element name="id" type="vim2:HostScsiDiskPartition" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiagnosticPartition">
            <sequence>
               <element name="HostDiagnosticPartition" type="vim2:HostDiagnosticPartition" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskBlockInfoExtent">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="logicalStart" type="xsd:long" />
                     <element name="physicalStart" type="xsd:long" />
                     <element name="length" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskBlockInfoExtent">
            <sequence>
               <element name="HostDiskBlockInfoExtent" type="vim2:HostDiskBlockInfoExtent" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskBlockInfoMapping">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="element" type="xsd:string" />
                     <element name="extent" type="vim2:HostDiskBlockInfoExtent" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskBlockInfoMapping">
            <sequence>
               <element name="HostDiskBlockInfoMapping" type="vim2:HostDiskBlockInfoMapping" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskBlockInfoScsiMapping">
            <complexContent>
               <extension base="vim2:HostDiskBlockInfoMapping">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskBlockInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="size" type="xsd:long" />
                     <element name="granularity" type="xsd:long" />
                     <element name="minBlockSize" type="xsd:int" />
                     <element name="map" type="vim2:HostDiskBlockInfoMapping" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskDimensionsChs">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="cylinder" type="xsd:long" />
                     <element name="head" type="xsd:int" />
                     <element name="sector" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskDimensionsLba">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="blockSize" type="xsd:int" />
                     <element name="block" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskDimensions">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RenewLease">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RenewLeaseResponse">
            <complexType />
         </element>
         <element name="ReleaseLease">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="ReleaseLeaseResponse">
            <complexType />
         </element>
         <complexType name="HostDiskManagerLeaseInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="lease" type="vim2:ManagedObjectReference" />
                     <element name="ddbOption" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="blockInfo" type="vim2:HostDiskBlockInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostDiskPartitionInfoType">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="vmfs" />
               <enumeration value="linuxNative" />
               <enumeration value="linuxSwap" />
               <enumeration value="extended" />
               <enumeration value="ntfs" />
               <enumeration value="vmkDiagnostic" />
            </restriction>
         </simpleType>
         <complexType name="HostDiskPartitionAttributes">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="partition" type="xsd:int" />
                     <element name="startSector" type="xsd:long" />
                     <element name="endSector" type="xsd:long" />
                     <element name="type" type="xsd:string" />
                     <element name="logical" type="xsd:boolean" />
                     <element name="attributes" type="xsd:byte" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionAttributes">
            <sequence>
               <element name="HostDiskPartitionAttributes" type="vim2:HostDiskPartitionAttributes" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskPartitionBlockRange">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="partition" type="xsd:int" minOccurs="0" />
                     <element name="type" type="xsd:string" />
                     <element name="start" type="vim2:HostDiskDimensionsLba" />
                     <element name="end" type="vim2:HostDiskDimensionsLba" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionBlockRange">
            <sequence>
               <element name="HostDiskPartitionBlockRange" type="vim2:HostDiskPartitionBlockRange" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskPartitionSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="chs" type="vim2:HostDiskDimensionsChs" minOccurs="0" />
                     <element name="totalSectors" type="xsd:long" minOccurs="0" />
                     <element name="partition" type="vim2:HostDiskPartitionAttributes" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskPartitionLayout">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="total" type="vim2:HostDiskDimensionsLba" minOccurs="0" />
                     <element name="partition" type="vim2:HostDiskPartitionBlockRange" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskPartitionInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="spec" type="vim2:HostDiskPartitionSpec" />
                     <element name="layout" type="vim2:HostDiskPartitionLayout" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionInfo">
            <sequence>
               <element name="HostDiskPartitionInfo" type="vim2:HostDiskPartitionInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDnsConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dhcp" type="xsd:boolean" />
                     <element name="virtualNicDevice" type="xsd:string" minOccurs="0" />
                     <element name="hostName" type="xsd:string" />
                     <element name="domainName" type="xsd:string" />
                     <element name="address" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="searchDomain" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ModeInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="browse" type="xsd:string" minOccurs="0" />
                     <element name="read" type="xsd:string" />
                     <element name="modify" type="xsd:string" />
                     <element name="use" type="xsd:string" />
                     <element name="admin" type="xsd:string" minOccurs="0" />
                     <element name="full" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileAccess">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="who" type="xsd:string" />
                     <element name="what" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileSystemVolumeInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="volumeTypeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="mountInfo" type="vim2:HostFileSystemMountInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileSystemMountInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="mountInfo" type="vim2:HostMountInfo" />
                     <element name="volume" type="vim2:HostFileSystemVolume" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFileSystemMountInfo">
            <sequence>
               <element name="HostFileSystemMountInfo" type="vim2:HostFileSystemMountInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostFileSystemVolume">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="capacity" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNasVolumeSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                     <element name="localPath" type="xsd:string" />
                     <element name="accessMode" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNasVolume">
            <complexContent>
               <extension base="vim2:HostFileSystemVolume">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLocalFileSystemVolumeSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="localPath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLocalFileSystemVolume">
            <complexContent>
               <extension base="vim2:HostFileSystemVolume">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFirewallDefaultPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="incomingBlocked" type="xsd:boolean" minOccurs="0" />
                     <element name="outgoingBlocked" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFirewallInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="defaultPolicy" type="vim2:HostFirewallDefaultPolicy" />
                     <element name="ruleset" type="vim2:HostFirewallRuleset" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateDefaultPolicy">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="defaultPolicy" type="vim2:HostFirewallDefaultPolicy" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateDefaultPolicyResponse">
            <complexType />
         </element>
         <element name="EnableRuleset">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="EnableRulesetResponse">
            <complexType />
         </element>
         <element name="DisableRuleset">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DisableRulesetResponse">
            <complexType />
         </element>
         <element name="RefreshFirewall">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RefreshFirewallResponse">
            <complexType />
         </element>
         <complexType name="HostHardwareInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="systemInfo" type="vim2:HostSystemInfo" />
                     <element name="cpuInfo" type="vim2:HostCpuInfo" />
                     <element name="cpuPkg" type="vim2:HostCpuPackage" maxOccurs="unbounded" />
                     <element name="memorySize" type="xsd:long" />
                     <element name="numaInfo" type="vim2:HostNumaInfo" minOccurs="0" />
                     <element name="pciDevice" type="vim2:HostPciDevice" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuFeature" type="vim2:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSystemInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vendor" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCpuInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="numCpuPackages" type="xsd:short" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="hz" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostCpuPackageVendor">
            <restriction base="xsd:string">
               <enumeration value="unknown" />
               <enumeration value="intel" />
               <enumeration value="amd" />
            </restriction>
         </simpleType>
         <complexType name="HostCpuPackage">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="index" type="xsd:short" />
                     <element name="vendor" type="xsd:string" />
                     <element name="hz" type="xsd:long" />
                     <element name="busHz" type="xsd:long" />
                     <element name="description" type="xsd:string" />
                     <element name="threadId" type="xsd:short" maxOccurs="unbounded" />
                     <element name="cpuFeature" type="vim2:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostCpuPackage">
            <sequence>
               <element name="HostCpuPackage" type="vim2:HostCpuPackage" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNumaInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="numNodes" type="xsd:int" />
                     <element name="numaNode" type="vim2:HostNumaNode" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNumaNode">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="typeId" type="xsd:byte" />
                     <element name="cpuID" type="xsd:short" maxOccurs="unbounded" />
                     <element name="memoryRangeBegin" type="xsd:long" />
                     <element name="memoryRangeLength" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNumaNode">
            <sequence>
               <element name="HostNumaNode" type="vim2:HostNumaNode" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostHostBusAdapter">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" />
                     <element name="bus" type="xsd:int" />
                     <element name="status" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="driver" type="xsd:string" minOccurs="0" />
                     <element name="pci" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostHostBusAdapter">
            <sequence>
               <element name="HostHostBusAdapter" type="vim2:HostHostBusAdapter" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostParallelScsiHba">
            <complexContent>
               <extension base="vim2:HostHostBusAdapter">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostBlockHba">
            <complexContent>
               <extension base="vim2:HostHostBusAdapter">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="FibreChannelPortType">
            <restriction base="xsd:string">
               <enumeration value="fabric" />
               <enumeration value="loop" />
               <enumeration value="pointToPoint" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostFibreChannelHba">
            <complexContent>
               <extension base="vim2:HostHostBusAdapter">
                  <sequence>
                     <element name="portWorldWideName" type="xsd:long" />
                     <element name="nodeWorldWideName" type="xsd:long" />
                     <element name="portType" type="vim2:FibreChannelPortType" />
                     <element name="speed" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaDiscoveryCapabilities">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="iSnsDiscoverySettable" type="xsd:boolean" />
                     <element name="slpDiscoverySettable" type="xsd:boolean" />
                     <element name="staticTargetDiscoverySettable" type="xsd:boolean" />
                     <element name="sendTargetsDiscoverySettable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="InternetScsiSnsDiscoveryMethod">
            <restriction base="xsd:string">
               <enumeration value="isnsStatic" />
               <enumeration value="isnsDhcp" />
               <enumeration value="isnsSlp" />
            </restriction>
         </simpleType>
         <simpleType name="SlpDiscoveryMethod">
            <restriction base="xsd:string">
               <enumeration value="slpDhcp" />
               <enumeration value="slpAutoUnicast" />
               <enumeration value="slpAutoMulticast" />
               <enumeration value="slpManual" />
            </restriction>
         </simpleType>
         <complexType name="HostInternetScsiHbaDiscoveryProperties">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="iSnsDiscoveryEnabled" type="xsd:boolean" />
                     <element name="iSnsDiscoveryMethod" type="xsd:string" minOccurs="0" />
                     <element name="iSnsHost" type="xsd:string" minOccurs="0" />
                     <element name="slpDiscoveryEnabled" type="xsd:boolean" />
                     <element name="slpDiscoveryMethod" type="xsd:string" minOccurs="0" />
                     <element name="slpHost" type="xsd:string" minOccurs="0" />
                     <element name="staticTargetDiscoveryEnabled" type="xsd:boolean" />
                     <element name="sendTargetsDiscoveryEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaAuthenticationCapabilities">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="chapAuthSettable" type="xsd:boolean" />
                     <element name="krb5AuthSettable" type="xsd:boolean" />
                     <element name="srpAuthSettable" type="xsd:boolean" />
                     <element name="spkmAuthSettable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaAuthenticationProperties">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="chapAuthEnabled" type="xsd:boolean" />
                     <element name="chapName" type="xsd:string" minOccurs="0" />
                     <element name="chapSecret" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaIPCapabilities">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="addressSettable" type="xsd:boolean" />
                     <element name="ipConfigurationMethodSettable" type="xsd:boolean" />
                     <element name="subnetMaskSettable" type="xsd:boolean" />
                     <element name="defaultGatewaySettable" type="xsd:boolean" />
                     <element name="primaryDnsServerAddressSettable" type="xsd:boolean" />
                     <element name="alternateDnsServerAddressSettable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaIPProperties">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="mac" type="xsd:string" minOccurs="0" />
                     <element name="address" type="xsd:string" minOccurs="0" />
                     <element name="dhcpConfigurationEnabled" type="xsd:boolean" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                     <element name="defaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="primaryDnsServerAddress" type="xsd:string" minOccurs="0" />
                     <element name="alternateDnsServerAddress" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaSendTarget">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="address" type="xsd:string" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostInternetScsiHbaSendTarget">
            <sequence>
               <element name="HostInternetScsiHbaSendTarget" type="vim2:HostInternetScsiHbaSendTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostInternetScsiHbaStaticTarget">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="address" type="xsd:string" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="iScsiName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostInternetScsiHbaStaticTarget">
            <sequence>
               <element name="HostInternetScsiHbaStaticTarget" type="vim2:HostInternetScsiHbaStaticTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostInternetScsiHba">
            <complexContent>
               <extension base="vim2:HostHostBusAdapter">
                  <sequence>
                     <element name="isSoftwareBased" type="xsd:boolean" />
                     <element name="discoveryCapabilities" type="vim2:HostInternetScsiHbaDiscoveryCapabilities" />
                     <element name="discoveryProperties" type="vim2:HostInternetScsiHbaDiscoveryProperties" />
                     <element name="authenticationCapabilities" type="vim2:HostInternetScsiHbaAuthenticationCapabilities" />
                     <element name="authenticationProperties" type="vim2:HostInternetScsiHbaAuthenticationProperties" />
                     <element name="ipCapabilities" type="vim2:HostInternetScsiHbaIPCapabilities" />
                     <element name="ipProperties" type="vim2:HostInternetScsiHbaIPProperties" />
                     <element name="iScsiName" type="xsd:string" />
                     <element name="iScsiAlias" type="xsd:string" minOccurs="0" />
                     <element name="configuredSendTarget" type="vim2:HostInternetScsiHbaSendTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="configuredStaticTarget" type="vim2:HostInternetScsiHbaStaticTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxSpeedMb" type="xsd:int" minOccurs="0" />
                     <element name="currentSpeedMb" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dhcp" type="xsd:boolean" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpRouteConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="defaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="gatewayDevice" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAccountSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostPosixAccountSpec">
            <complexContent>
               <extension base="vim2:HostAccountSpec">
                  <sequence>
                     <element name="posixId" type="xsd:int" minOccurs="0" />
                     <element name="shellAccess" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CreateUser">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="user" type="vim2:HostAccountSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateUserResponse">
            <complexType />
         </element>
         <element name="UpdateUser">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="user" type="vim2:HostAccountSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateUserResponse">
            <complexType />
         </element>
         <element name="CreateGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="group" type="vim2:HostAccountSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateGroupResponse">
            <complexType />
         </element>
         <element name="RemoveUser">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="userName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveUserResponse">
            <complexType />
         </element>
         <element name="RemoveGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="groupName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveGroupResponse">
            <complexType />
         </element>
         <element name="AssignUserToGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="user" type="xsd:string" />
                  <element name="group" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="AssignUserToGroupResponse">
            <complexType />
         </element>
         <element name="UnassignUserFromGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="user" type="xsd:string" />
                  <element name="group" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UnassignUserFromGroupResponse">
            <complexType />
         </element>
         <complexType name="ServiceConsoleReservationInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="serviceConsoleReservedCfg" type="xsd:long" />
                     <element name="serviceConsoleReserved" type="xsd:long" />
                     <element name="unreserved" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReconfigureServiceConsoleReservation">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="cfgBytes" type="xsd:long" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureServiceConsoleReservationResponse">
            <complexType />
         </element>
         <simpleType name="HostMountMode">
            <restriction base="xsd:string">
               <enumeration value="readWrite" />
               <enumeration value="readOnly" />
            </restriction>
         </simpleType>
         <complexType name="HostMountInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" minOccurs="0" />
                     <element name="accessMode" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="MultipathState">
            <restriction base="xsd:string">
               <enumeration value="standby" />
               <enumeration value="active" />
               <enumeration value="disabled" />
               <enumeration value="dead" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostMultipathInfoLogicalUnitPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="policy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathInfoFixedLogicalUnitPolicy">
            <complexContent>
               <extension base="vim2:HostMultipathInfoLogicalUnitPolicy">
                  <sequence>
                     <element name="prefer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathInfoLogicalUnit">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="id" type="xsd:string" />
                     <element name="lun" type="xsd:string" />
                     <element name="path" type="vim2:HostMultipathInfoPath" maxOccurs="unbounded" />
                     <element name="policy" type="vim2:HostMultipathInfoLogicalUnitPolicy" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostMultipathInfoLogicalUnit">
            <sequence>
               <element name="HostMultipathInfoLogicalUnit" type="vim2:HostMultipathInfoLogicalUnit" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMultipathInfoPath">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="pathState" type="xsd:string" />
                     <element name="adapter" type="xsd:string" />
                     <element name="lun" type="xsd:string" />
                     <element name="transport" type="vim2:HostTargetTransport" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostMultipathInfoPath">
            <sequence>
               <element name="HostMultipathInfoPath" type="vim2:HostMultipathInfoPath" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMultipathInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="lun" type="vim2:HostMultipathInfoLogicalUnit" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetCapabilities">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="canSetPhysicalNicLinkSpeed" type="xsd:boolean" />
                     <element name="supportsNicTeaming" type="xsd:boolean" />
                     <element name="nicTeamingPolicy" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportsVlan" type="xsd:boolean" />
                     <element name="usesServiceConsoleNic" type="xsd:boolean" />
                     <element name="supportsNetworkHints" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetOffloadCapabilities">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="csumOffload" type="xsd:boolean" minOccurs="0" />
                     <element name="tcpSegmentation" type="xsd:boolean" minOccurs="0" />
                     <element name="zeroCopyXmit" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkConfigResult">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vnicDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnicDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vswitch" type="vim2:HostVirtualSwitchConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="portgroup" type="vim2:HostPortGroupConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="vim2:PhysicalNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vnic" type="vim2:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnic" type="vim2:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsConfig" type="vim2:HostDnsConfig" minOccurs="0" />
                     <element name="ipRouteConfig" type="vim2:HostIpRouteConfig" minOccurs="0" />
                     <element name="consoleIpRouteConfig" type="vim2:HostIpRouteConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vswitch" type="vim2:HostVirtualSwitch" minOccurs="0" maxOccurs="unbounded" />
                     <element name="portgroup" type="vim2:HostPortGroup" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="vim2:PhysicalNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vnic" type="vim2:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnic" type="vim2:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsConfig" type="vim2:HostDnsConfig" minOccurs="0" />
                     <element name="ipRouteConfig" type="vim2:HostIpRouteConfig" minOccurs="0" />
                     <element name="consoleIpRouteConfig" type="vim2:HostIpRouteConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkSecurityPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="allowPromiscuous" type="xsd:boolean" minOccurs="0" />
                     <element name="macChanges" type="xsd:boolean" minOccurs="0" />
                     <element name="forgedTransmits" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkTrafficShapingPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="averageBandwidth" type="xsd:long" minOccurs="0" />
                     <element name="peakBandwidth" type="xsd:long" minOccurs="0" />
                     <element name="burstSize" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicFailureCriteria">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="checkSpeed" type="xsd:string" minOccurs="0" />
                     <element name="speed" type="xsd:int" minOccurs="0" />
                     <element name="checkDuplex" type="xsd:boolean" minOccurs="0" />
                     <element name="fullDuplex" type="xsd:boolean" minOccurs="0" />
                     <element name="checkErrorPercent" type="xsd:boolean" minOccurs="0" />
                     <element name="percentage" type="xsd:int" minOccurs="0" />
                     <element name="checkBeacon" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicOrderPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="activeNic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="standbyNic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicTeamingPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="policy" type="xsd:string" minOccurs="0" />
                     <element name="reversePolicy" type="xsd:boolean" minOccurs="0" />
                     <element name="notifySwitches" type="xsd:boolean" minOccurs="0" />
                     <element name="rollingOrder" type="xsd:boolean" minOccurs="0" />
                     <element name="failureCriteria" type="vim2:HostNicFailureCriteria" minOccurs="0" />
                     <element name="nicOrder" type="vim2:HostNicOrderPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkPolicy">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="security" type="vim2:HostNetworkSecurityPolicy" minOccurs="0" />
                     <element name="nicTeaming" type="vim2:HostNicTeamingPolicy" minOccurs="0" />
                     <element name="offloadPolicy" type="vim2:HostNetOffloadCapabilities" minOccurs="0" />
                     <element name="shapingPolicy" type="vim2:HostNetworkTrafficShapingPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateNetworkConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:HostNetworkConfig" />
                  <element name="changeMode" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateNetworkConfigResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostNetworkConfigResult" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateDnsConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:HostDnsConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateDnsConfigResponse">
            <complexType />
         </element>
         <element name="UpdateIpRouteConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:HostIpRouteConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateIpRouteConfigResponse">
            <complexType />
         </element>
         <element name="UpdateConsoleIpRouteConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:HostIpRouteConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateConsoleIpRouteConfigResponse">
            <complexType />
         </element>
         <element name="AddVirtualSwitch">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vswitchName" type="xsd:string" />
                  <element name="spec" type="vim2:HostVirtualSwitchSpec" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="AddVirtualSwitchResponse">
            <complexType />
         </element>
         <element name="RemoveVirtualSwitch">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vswitchName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveVirtualSwitchResponse">
            <complexType />
         </element>
         <element name="UpdateVirtualSwitch">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vswitchName" type="xsd:string" />
                  <element name="spec" type="vim2:HostVirtualSwitchSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateVirtualSwitchResponse">
            <complexType />
         </element>
         <element name="AddPortGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="portgrp" type="vim2:HostPortGroupSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="AddPortGroupResponse">
            <complexType />
         </element>
         <element name="RemovePortGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pgName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemovePortGroupResponse">
            <complexType />
         </element>
         <element name="UpdatePortGroup">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pgName" type="xsd:string" />
                  <element name="portgrp" type="vim2:HostPortGroupSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdatePortGroupResponse">
            <complexType />
         </element>
         <element name="UpdatePhysicalNicLinkSpeed">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
                  <element name="linkSpeed" type="vim2:PhysicalNicLinkInfo" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdatePhysicalNicLinkSpeedResponse">
            <complexType />
         </element>
         <element name="QueryNetworkHint">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryNetworkHintResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:PhysicalNicHintInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="AddVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="portgroup" type="xsd:string" />
                  <element name="nic" type="vim2:HostVirtualNicSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="AddVirtualNicResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveVirtualNicResponse">
            <complexType />
         </element>
         <element name="UpdateVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
                  <element name="nic" type="vim2:HostVirtualNicSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateVirtualNicResponse">
            <complexType />
         </element>
         <element name="AddServiceConsoleVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="portgroup" type="xsd:string" />
                  <element name="nic" type="vim2:HostVirtualNicSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="AddServiceConsoleVirtualNicResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveServiceConsoleVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <element name="UpdateServiceConsoleVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
                  <element name="nic" type="vim2:HostVirtualNicSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <element name="RestartServiceConsoleVirtualNic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RestartServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <element name="RefreshNetworkSystem">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RefreshNetworkSystemResponse">
            <complexType />
         </element>
         <complexType name="HostPciDevice">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="classId" type="xsd:short" />
                     <element name="bus" type="xsd:byte" />
                     <element name="slot" type="xsd:byte" />
                     <element name="function" type="xsd:byte" />
                     <element name="vendorId" type="xsd:short" />
                     <element name="subVendorId" type="xsd:short" />
                     <element name="vendorName" type="xsd:string" />
                     <element name="deviceId" type="xsd:short" />
                     <element name="subDeviceId" type="xsd:short" />
                     <element name="deviceName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPciDevice">
            <sequence>
               <element name="HostPciDevice" type="vim2:HostPciDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="ip" type="vim2:HostIpConfig" minOccurs="0" />
                     <element name="linkSpeed" type="vim2:PhysicalNicLinkInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="spec" type="vim2:PhysicalNicSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicConfig">
            <sequence>
               <element name="PhysicalNicConfig" type="vim2:PhysicalNicConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicLinkInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="speedMb" type="xsd:int" />
                     <element name="duplex" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicLinkInfo">
            <sequence>
               <element name="PhysicalNicLinkInfo" type="vim2:PhysicalNicLinkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicHint">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vlanId" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicIpHint">
            <complexContent>
               <extension base="vim2:PhysicalNicHint">
                  <sequence>
                     <element name="ipSubnet" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicIpHint">
            <sequence>
               <element name="PhysicalNicIpHint" type="vim2:PhysicalNicIpHint" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicNameHint">
            <complexContent>
               <extension base="vim2:PhysicalNicHint">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicNameHint">
            <sequence>
               <element name="PhysicalNicNameHint" type="vim2:PhysicalNicNameHint" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicHintInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="subnet" type="vim2:PhysicalNicIpHint" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim2:PhysicalNicNameHint" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicHintInfo">
            <sequence>
               <element name="PhysicalNicHintInfo" type="vim2:PhysicalNicHintInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNic">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" />
                     <element name="pci" type="xsd:string" />
                     <element name="driver" type="xsd:string" minOccurs="0" />
                     <element name="linkSpeed" type="vim2:PhysicalNicLinkInfo" minOccurs="0" />
                     <element name="validLinkSpecification" type="vim2:PhysicalNicLinkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="spec" type="vim2:PhysicalNicSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNic">
            <sequence>
               <element name="PhysicalNic" type="vim2:PhysicalNic" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="PortGroupConnecteeType">
            <restriction base="xsd:string">
               <enumeration value="virtualMachine" />
               <enumeration value="systemManagement" />
               <enumeration value="host" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostPortGroupSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="vlanId" type="xsd:int" />
                     <element name="vswitchName" type="xsd:string" />
                     <element name="policy" type="vim2:HostNetworkPolicy" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostPortGroupConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="spec" type="vim2:HostPortGroupSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroupConfig">
            <sequence>
               <element name="HostPortGroupConfig" type="vim2:HostPortGroupConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPortGroupPort">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="mac" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroupPort">
            <sequence>
               <element name="HostPortGroupPort" type="vim2:HostPortGroupPort" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPortGroup">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="port" type="vim2:HostPortGroupPort" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vswitch" type="xsd:string" minOccurs="0" />
                     <element name="computedPolicy" type="vim2:HostNetworkPolicy" />
                     <element name="spec" type="vim2:HostPortGroupSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroup">
            <sequence>
               <element name="HostPortGroup" type="vim2:HostPortGroup" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="HostFirewallRuleDirection">
            <restriction base="xsd:string">
               <enumeration value="inbound" />
               <enumeration value="outbound" />
            </restriction>
         </simpleType>
         <simpleType name="HostFirewallRuleProtocol">
            <restriction base="xsd:string">
               <enumeration value="tcp" />
               <enumeration value="udp" />
            </restriction>
         </simpleType>
         <complexType name="HostFirewallRule">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="port" type="xsd:int" />
                     <element name="endPort" type="xsd:int" minOccurs="0" />
                     <element name="direction" type="vim2:HostFirewallRuleDirection" />
                     <element name="protocol" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFirewallRule">
            <sequence>
               <element name="HostFirewallRule" type="vim2:HostFirewallRule" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostFirewallRuleset">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="required" type="xsd:boolean" />
                     <element name="rule" type="vim2:HostFirewallRule" maxOccurs="unbounded" />
                     <element name="service" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFirewallRuleset">
            <sequence>
               <element name="HostFirewallRuleset" type="vim2:HostFirewallRuleset" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostRuntimeInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="connectionState" type="vim2:HostSystemConnectionState" />
                     <element name="inMaintenanceMode" type="xsd:boolean" />
                     <element name="bootTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostScsiDiskPartition">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskName" type="xsd:string" />
                     <element name="partition" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiDiskPartition">
            <sequence>
               <element name="HostScsiDiskPartition" type="vim2:HostScsiDiskPartition" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiDisk">
            <complexContent>
               <extension base="vim2:ScsiLun">
                  <sequence>
                     <element name="capacity" type="vim2:HostDiskDimensionsLba" />
                     <element name="devicePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiDisk">
            <sequence>
               <element name="HostScsiDisk" type="vim2:HostScsiDisk" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ScsiLunType">
            <restriction base="xsd:string">
               <enumeration value="disk" />
               <enumeration value="tape" />
               <enumeration value="printer" />
               <enumeration value="processor" />
               <enumeration value="worm" />
               <enumeration value="cdrom" />
               <enumeration value="scanner" />
               <enumeration value="opticalDevice" />
               <enumeration value="mediaChanger" />
               <enumeration value="communications" />
               <enumeration value="storageArrayController" />
               <enumeration value="enclosure" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="ScsiLunDurableName">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="namespace" type="xsd:string" />
                     <element name="namespaceId" type="xsd:byte" />
                     <element name="data" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ScsiLunState">
            <restriction base="xsd:string">
               <enumeration value="unknownState" />
               <enumeration value="ok" />
               <enumeration value="error" />
               <enumeration value="degraded" />
               <enumeration value="lostCommunication" />
            </restriction>
         </simpleType>
         <complexType name="ScsiLun">
            <complexContent>
               <extension base="vim2:HostDevice">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" />
                     <element name="canonicalName" type="xsd:string" minOccurs="0" />
                     <element name="lunType" type="xsd:string" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="model" type="xsd:string" minOccurs="0" />
                     <element name="revision" type="xsd:string" minOccurs="0" />
                     <element name="scsiLevel" type="xsd:int" minOccurs="0" />
                     <element name="serialNumber" type="xsd:string" minOccurs="0" />
                     <element name="durableName" type="vim2:ScsiLunDurableName" minOccurs="0" />
                     <element name="queueDepth" type="xsd:int" minOccurs="0" />
                     <element name="operationalState" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScsiLun">
            <sequence>
               <element name="ScsiLun" type="vim2:ScsiLun" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyInterface">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="adapter" type="xsd:string" />
                     <element name="target" type="vim2:HostScsiTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyInterface">
            <sequence>
               <element name="HostScsiTopologyInterface" type="vim2:HostScsiTopologyInterface" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyTarget">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="target" type="xsd:int" />
                     <element name="lun" type="vim2:HostScsiTopologyLun" minOccurs="0" maxOccurs="unbounded" />
                     <element name="transport" type="vim2:HostTargetTransport" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyTarget">
            <sequence>
               <element name="HostScsiTopologyTarget" type="vim2:HostScsiTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyLun">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="lun" type="xsd:int" />
                     <element name="scsiLun" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyLun">
            <sequence>
               <element name="HostScsiTopologyLun" type="vim2:HostScsiTopologyLun" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopology">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="adapter" type="vim2:HostScsiTopologyInterface" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostServicePolicy">
            <restriction base="xsd:string">
               <enumeration value="on" />
               <enumeration value="automatic" />
               <enumeration value="off" />
            </restriction>
         </simpleType>
         <complexType name="HostService">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="required" type="xsd:boolean" />
                     <element name="uninstallable" type="xsd:boolean" />
                     <element name="running" type="xsd:boolean" />
                     <element name="ruleset" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="policy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostService">
            <sequence>
               <element name="HostService" type="vim2:HostService" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostServiceInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="service" type="vim2:HostService" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateServicePolicy">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
                  <element name="policy" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateServicePolicyResponse">
            <complexType />
         </element>
         <element name="StartService">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="StartServiceResponse">
            <complexType />
         </element>
         <element name="StopService">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="StopServiceResponse">
            <complexType />
         </element>
         <element name="RestartService">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RestartServiceResponse">
            <complexType />
         </element>
         <element name="UninstallService">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="id" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UninstallServiceResponse">
            <complexType />
         </element>
         <element name="RefreshServices">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RefreshServicesResponse">
            <complexType />
         </element>
         <complexType name="HostSnmpConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="autoStartMasterSnmpAgentEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="startupScript" type="xsd:string" minOccurs="0" />
                     <element name="configFile" type="xsd:string" minOccurs="0" />
                     <element name="vmwareSubagentEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="vmwareTrapsEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CheckIfMasterSnmpAgentRunning">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="CheckIfMasterSnmpAgentRunningResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateSnmpConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="config" type="vim2:HostSnmpConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateSnmpConfigResponse">
            <complexType />
         </element>
         <element name="RestartMasterSnmpAgent">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RestartMasterSnmpAgentResponse">
            <complexType />
         </element>
         <element name="StopMasterSnmpAgent">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="StopMasterSnmpAgentResponse">
            <complexType />
         </element>
         <complexType name="HostStorageDeviceInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="hostBusAdapter" type="vim2:HostHostBusAdapter" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiLun" type="vim2:ScsiLun" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiTopology" type="vim2:HostScsiTopology" minOccurs="0" />
                     <element name="multipathInfo" type="vim2:HostMultipathInfo" minOccurs="0" />
                     <element name="softwareInternetScsiEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RetrieveDiskPartitionInfo">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="devicePath" type="xsd:string" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveDiskPartitionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostDiskPartitionInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="ComputeDiskPartitionInfo">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="devicePath" type="xsd:string" />
                  <element name="layout" type="vim2:HostDiskPartitionLayout" />
               </sequence>
            </complexType>
         </element>
         <element name="ComputeDiskPartitionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostDiskPartitionInfo" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateDiskPartitions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="devicePath" type="xsd:string" />
                  <element name="spec" type="vim2:HostDiskPartitionSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateDiskPartitionsResponse">
            <complexType />
         </element>
         <element name="FormatVmfs">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="createSpec" type="vim2:HostVmfsSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="FormatVmfsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:HostVmfsVolume" />
               </sequence>
            </complexType>
         </element>
         <element name="RescanVmfs">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RescanVmfsResponse">
            <complexType />
         </element>
         <element name="AttachVmfsExtent">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vmfsPath" type="xsd:string" />
                  <element name="extent" type="vim2:HostScsiDiskPartition" />
               </sequence>
            </complexType>
         </element>
         <element name="AttachVmfsExtentResponse">
            <complexType />
         </element>
         <element name="UpgradeVmfs">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="vmfsPath" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpgradeVmfsResponse">
            <complexType />
         </element>
         <element name="UpgradeVmLayout">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="UpgradeVmLayoutResponse">
            <complexType />
         </element>
         <element name="RescanHba">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="hbaDevice" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="RescanHbaResponse">
            <complexType />
         </element>
         <element name="RescanAllHba">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RescanAllHbaResponse">
            <complexType />
         </element>
         <element name="UpdateSoftwareInternetScsiEnabled">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="enabled" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateSoftwareInternetScsiEnabledResponse">
            <complexType />
         </element>
         <element name="UpdateInternetScsiDiscoveryProperties">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="discoveryProperties" type="vim2:HostInternetScsiHbaDiscoveryProperties" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateInternetScsiDiscoveryPropertiesResponse">
            <complexType />
         </element>
         <element name="UpdateInternetScsiAuthenticationProperties">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="authenticationProperties" type="vim2:HostInternetScsiHbaAuthenticationProperties" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateInternetScsiAuthenticationPropertiesResponse">
            <complexType />
         </element>
         <element name="UpdateInternetScsiIPProperties">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="ipProperties" type="vim2:HostInternetScsiHbaIPProperties" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateInternetScsiIPPropertiesResponse">
            <complexType />
         </element>
         <element name="UpdateInternetScsiName">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="iScsiName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateInternetScsiNameResponse">
            <complexType />
         </element>
         <element name="UpdateInternetScsiAlias">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="iScsiAlias" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateInternetScsiAliasResponse">
            <complexType />
         </element>
         <element name="AddInternetScsiSendTargets">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="targets" type="vim2:HostInternetScsiHbaSendTarget" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="AddInternetScsiSendTargetsResponse">
            <complexType />
         </element>
         <element name="RemoveInternetScsiSendTargets">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="targets" type="vim2:HostInternetScsiHbaSendTarget" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveInternetScsiSendTargetsResponse">
            <complexType />
         </element>
         <element name="AddInternetScsiStaticTargets">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="targets" type="vim2:HostInternetScsiHbaStaticTarget" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="AddInternetScsiStaticTargetsResponse">
            <complexType />
         </element>
         <element name="RemoveInternetScsiStaticTargets">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="iScsiHbaDevice" type="xsd:string" />
                  <element name="targets" type="vim2:HostInternetScsiHbaStaticTarget" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveInternetScsiStaticTargetsResponse">
            <complexType />
         </element>
         <element name="EnableMultipathPath">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pathName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="EnableMultipathPathResponse">
            <complexType />
         </element>
         <element name="DisableMultipathPath">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="pathName" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="DisableMultipathPathResponse">
            <complexType />
         </element>
         <element name="SetMultipathLunPolicy">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="lunId" type="xsd:string" />
                  <element name="policy" type="vim2:HostMultipathInfoLogicalUnitPolicy" />
               </sequence>
            </complexType>
         </element>
         <element name="SetMultipathLunPolicyResponse">
            <complexType />
         </element>
         <element name="RefreshStorageSystem">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RefreshStorageSystemResponse">
            <complexType />
         </element>
         <complexType name="HostHardwareSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vendor" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="memorySize" type="xsd:long" />
                     <element name="cpuModel" type="xsd:string" />
                     <element name="cpuMhz" type="xsd:int" />
                     <element name="numCpuPkgs" type="xsd:short" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="numNics" type="xsd:int" />
                     <element name="numHBAs" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostListSummaryQuickStats">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="overallCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="overallMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="distributedCpuFairness" type="xsd:int" minOccurs="0" />
                     <element name="distributedMemoryFairness" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="port" type="xsd:int" />
                     <element name="product" type="vim2:AboutInfo" minOccurs="0" />
                     <element name="vmotionEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostListSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="hardware" type="vim2:HostHardwareSummary" minOccurs="0" />
                     <element name="runtime" type="vim2:HostRuntimeInfo" minOccurs="0" />
                     <element name="config" type="vim2:HostConfigSummary" />
                     <element name="quickStats" type="vim2:HostListSummaryQuickStats" />
                     <element name="overallStatus" type="vim2:ManagedEntityStatus" />
                     <element name="rebootRequired" type="xsd:boolean" />
                     <element name="customValue" type="vim2:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSystemResourceInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="config" type="vim2:ResourceConfigSpec" minOccurs="0" />
                     <element name="child" type="vim2:HostSystemResourceInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostSystemResourceInfo">
            <sequence>
               <element name="HostSystemResourceInfo" type="vim2:HostSystemResourceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostTargetTransport">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostParallelScsiTargetTransport">
            <complexContent>
               <extension base="vim2:HostTargetTransport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostBlockAdapterTargetTransport">
            <complexContent>
               <extension base="vim2:HostTargetTransport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFibreChannelTargetTransport">
            <complexContent>
               <extension base="vim2:HostTargetTransport">
                  <sequence>
                     <element name="portWorldWideName" type="xsd:long" />
                     <element name="nodeWorldWideName" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiTargetTransport">
            <complexContent>
               <extension base="vim2:HostTargetTransport">
                  <sequence>
                     <element name="iScsiName" type="xsd:string" />
                     <element name="iScsiAlias" type="xsd:string" />
                     <element name="address" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vmotionNicKey" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="netConfig" type="vim2:HostVMotionNetConfig" minOccurs="0" />
                     <element name="ipConfig" type="vim2:HostIpConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionManagerSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="migrationId" type="xsd:long" />
                     <element name="srcIp" type="xsd:string" />
                     <element name="dstIp" type="xsd:string" />
                     <element name="srcUuid" type="xsd:string" />
                     <element name="dstUuid" type="xsd:string" />
                     <element name="priority" type="vim2:VirtualMachineMovePriority" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionManagerDestinationState">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dstId" type="xsd:int" />
                     <element name="dstTask" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionManagerReparentSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="busNumber" type="xsd:int" />
                     <element name="unitNumber" type="xsd:int" />
                     <element name="filename" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVMotionManagerReparentSpec">
            <sequence>
               <element name="HostVMotionManagerReparentSpec" type="vim2:HostVMotionManagerReparentSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVMotionNetConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="candidateVnic" type="vim2:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="selectedVnic" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UpdateIpConfig">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="ipConfig" type="vim2:HostIpConfig" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateIpConfigResponse">
            <complexType />
         </element>
         <element name="SelectVnic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="device" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <element name="SelectVnicResponse">
            <complexType />
         </element>
         <element name="DeselectVnic">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="DeselectVnicResponse">
            <complexType />
         </element>
         <complexType name="HostVirtualNicSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="ip" type="vim2:HostIpConfig" minOccurs="0" />
                     <element name="mac" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualNicConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" minOccurs="0" />
                     <element name="portgroup" type="xsd:string" />
                     <element name="spec" type="vim2:HostVirtualNicSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualNicConfig">
            <sequence>
               <element name="HostVirtualNicConfig" type="vim2:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualNic">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="key" type="xsd:string" />
                     <element name="portgroup" type="xsd:string" />
                     <element name="spec" type="vim2:HostVirtualNicSpec" />
                     <element name="port" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualNic">
            <sequence>
               <element name="HostVirtualNic" type="vim2:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualSwitchBridge">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchAutoBridge">
            <complexContent>
               <extension base="vim2:HostVirtualSwitchBridge">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchSimpleBridge">
            <complexContent>
               <extension base="vim2:HostVirtualSwitchBridge">
                  <sequence>
                     <element name="nicDevice" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchBondBridge">
            <complexContent>
               <extension base="vim2:HostVirtualSwitchBridge">
                  <sequence>
                     <element name="nicDevice" type="xsd:string" maxOccurs="unbounded" />
                     <element name="beacon" type="vim2:HostVirtualSwitchBeaconConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchBeaconConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="numPorts" type="xsd:int" />
                     <element name="bridge" type="vim2:HostVirtualSwitchBridge" minOccurs="0" />
                     <element name="policy" type="vim2:HostNetworkPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchConfig">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="spec" type="vim2:HostVirtualSwitchSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualSwitchConfig">
            <sequence>
               <element name="HostVirtualSwitchConfig" type="vim2:HostVirtualSwitchConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualSwitch">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="key" type="xsd:string" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="numPortsAvailable" type="xsd:int" />
                     <element name="portgroup" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="spec" type="vim2:HostVirtualSwitchSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualSwitch">
            <sequence>
               <element name="HostVirtualSwitch" type="vim2:HostVirtualSwitch" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVmfsSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="extent" type="vim2:HostScsiDiskPartition" />
                     <element name="blockSizeMb" type="xsd:int" minOccurs="0" />
                     <element name="majorVersion" type="xsd:int" />
                     <element name="volumeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVmfsVolume">
            <complexContent>
               <extension base="vim2:HostFileSystemVolume">
                  <sequence>
                     <element name="blockSizeMb" type="xsd:int" />
                     <element name="maxBlocks" type="xsd:int" />
                     <element name="majorVersion" type="xsd:int" />
                     <element name="version" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="extent" type="vim2:HostScsiDiskPartition" maxOccurs="unbounded" />
                     <element name="vmfsUpgradable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ArrayUpdateOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <complexType name="ArrayUpdateSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="operation" type="vim2:ArrayUpdateOperation" />
                     <element name="removeKey" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="BoolOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="supported" type="xsd:boolean" />
                     <element name="defaultValue" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ChoiceOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="choiceInfo" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="defaultIndex" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloatOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="min" type="xsd:float" />
                     <element name="max" type="xsd:float" />
                     <element name="defaultValue" type="xsd:float" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IntOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="min" type="xsd:int" />
                     <element name="max" type="xsd:int" />
                     <element name="defaultValue" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LongOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="min" type="xsd:long" />
                     <element name="max" type="xsd:long" />
                     <element name="defaultValue" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OptionDef">
            <complexContent>
               <extension base="vim2:ElementDescription">
                  <sequence>
                     <element name="optionType" type="vim2:OptionType" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOptionDef">
            <sequence>
               <element name="OptionDef" type="vim2:OptionDef" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryOptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="QueryOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateOptions">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="changedValue" type="vim2:OptionValue" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <element name="UpdateOptionsResponse">
            <complexType />
         </element>
         <complexType name="OptionType">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="valueIsReadonly" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OptionValue">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="value" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOptionValue">
            <sequence>
               <element name="OptionValue" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="StringOption">
            <complexContent>
               <extension base="vim2:OptionType">
                  <sequence>
                     <element name="defaultValue" type="xsd:string" />
                     <element name="validCharacters" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoveScheduledTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveScheduledTaskResponse">
            <complexType />
         </element>
         <element name="ReconfigureScheduledTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:ScheduledTaskSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="ReconfigureScheduledTaskResponse">
            <complexType />
         </element>
         <element name="RunScheduledTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RunScheduledTaskResponse">
            <complexType />
         </element>
         <complexType name="ScheduledTaskDetail">
            <complexContent>
               <extension base="vim2:TypeDescription">
                  <sequence>
                     <element name="frequency" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScheduledTaskDetail">
            <sequence>
               <element name="ScheduledTaskDetail" type="vim2:ScheduledTaskDetail" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ScheduledTaskDescription">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="action" type="vim2:TypeDescription" maxOccurs="unbounded" />
                     <element name="schedulerInfo" type="vim2:ScheduledTaskDetail" maxOccurs="unbounded" />
                     <element name="state" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="dayOfWeek" type="vim2:ElementDescription" maxOccurs="unbounded" />
                     <element name="weekOfMonth" type="vim2:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskInfo">
            <complexContent>
               <extension base="vim2:ScheduledTaskSpec">
                  <sequence>
                     <element name="scheduledTask" type="vim2:ManagedObjectReference" />
                     <element name="entity" type="vim2:ManagedObjectReference" />
                     <element name="lastModifiedTime" type="xsd:dateTime" />
                     <element name="lastModifiedUser" type="xsd:string" />
                     <element name="nextRunTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="prevRunTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="state" type="vim2:TaskInfoState" />
                     <element name="error" type="vim2:LocalizedMethodFault" minOccurs="0" />
                     <element name="result" type="xsd:anyType" minOccurs="0" />
                     <element name="progress" type="xsd:int" minOccurs="0" />
                     <element name="activeTask" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CreateScheduledTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" />
                  <element name="spec" type="vim2:ScheduledTaskSpec" />
               </sequence>
            </complexType>
         </element>
         <element name="CreateScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveEntityScheduledTask">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="entity" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RetrieveEntityScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TaskScheduler">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="activeTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="expireTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AfterStartupTaskScheduler">
            <complexContent>
               <extension base="vim2:TaskScheduler">
                  <sequence>
                     <element name="minute" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OnceTaskScheduler">
            <complexContent>
               <extension base="vim2:TaskScheduler">
                  <sequence>
                     <element name="runAt" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RecurrentTaskScheduler">
            <complexContent>
               <extension base="vim2:TaskScheduler">
                  <sequence>
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HourlyTaskScheduler">
            <complexContent>
               <extension base="vim2:RecurrentTaskScheduler">
                  <sequence>
                     <element name="minute" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DailyTaskScheduler">
            <complexContent>
               <extension base="vim2:HourlyTaskScheduler">
                  <sequence>
                     <element name="hour" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="WeeklyTaskScheduler">
            <complexContent>
               <extension base="vim2:DailyTaskScheduler">
                  <sequence>
                     <element name="sunday" type="xsd:boolean" />
                     <element name="monday" type="xsd:boolean" />
                     <element name="tuesday" type="xsd:boolean" />
                     <element name="wednesday" type="xsd:boolean" />
                     <element name="thursday" type="xsd:boolean" />
                     <element name="friday" type="xsd:boolean" />
                     <element name="saturday" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MonthlyTaskScheduler">
            <complexContent>
               <extension base="vim2:DailyTaskScheduler">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MonthlyByDayTaskScheduler">
            <complexContent>
               <extension base="vim2:MonthlyTaskScheduler">
                  <sequence>
                     <element name="day" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DayOfWeek">
            <restriction base="xsd:string">
               <enumeration value="sunday" />
               <enumeration value="monday" />
               <enumeration value="tuesday" />
               <enumeration value="wednesday" />
               <enumeration value="thursday" />
               <enumeration value="friday" />
               <enumeration value="saturday" />
            </restriction>
         </simpleType>
         <simpleType name="WeekOfMonth">
            <restriction base="xsd:string">
               <enumeration value="first" />
               <enumeration value="second" />
               <enumeration value="third" />
               <enumeration value="fourth" />
               <enumeration value="last" />
            </restriction>
         </simpleType>
         <complexType name="MonthlyByWeekdayTaskScheduler">
            <complexContent>
               <extension base="vim2:MonthlyTaskScheduler">
                  <sequence>
                     <element name="offset" type="vim2:WeekOfMonth" />
                     <element name="weekday" type="vim2:DayOfWeek" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="enabled" type="xsd:boolean" />
                     <element name="scheduler" type="vim2:TaskScheduler" />
                     <element name="action" type="vim2:Action" />
                     <element name="notification" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineAffinityInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="affinitySet" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineCapability">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="snapshotOperationsSupported" type="xsd:boolean" />
                     <element name="multipleSnapshotsSupported" type="xsd:boolean" />
                     <element name="snapshotConfigSupported" type="xsd:boolean" />
                     <element name="poweredOffSnapshotsSupported" type="xsd:boolean" />
                     <element name="memorySnapshotsSupported" type="xsd:boolean" />
                     <element name="revertToSnapshotSupported" type="xsd:boolean" />
                     <element name="quiescedSnapshotsSupported" type="xsd:boolean" />
                     <element name="consolePreferencesSupported" type="xsd:boolean" />
                     <element name="cpuFeatureMaskSupported" type="xsd:boolean" />
                     <element name="s1AcpiManagementSupported" type="xsd:boolean" />
                     <element name="settingScreenResolutionSupported" type="xsd:boolean" />
                     <element name="toolsAutoUpdateSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineCdromInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineCdromInfo">
            <sequence>
               <element name="VirtualMachineCdromInfo" type="vim2:VirtualMachineCdromInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineCloneSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="location" type="vim2:VirtualMachineRelocateSpec" />
                     <element name="template" type="xsd:boolean" />
                     <element name="config" type="vim2:VirtualMachineConfigSpec" minOccurs="0" />
                     <element name="customization" type="vim2:CustomizationSpec" minOccurs="0" />
                     <element name="powerOn" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigInfoDatastoreUrlPair">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineConfigInfoDatastoreUrlPair">
            <sequence>
               <element name="VirtualMachineConfigInfoDatastoreUrlPair" type="vim2:VirtualMachineConfigInfoDatastoreUrlPair" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="changeVersion" type="xsd:string" />
                     <element name="modified" type="xsd:dateTime" />
                     <element name="name" type="xsd:string" />
                     <element name="guestFullName" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="locationId" type="xsd:string" minOccurs="0" />
                     <element name="template" type="xsd:boolean" />
                     <element name="guestId" type="xsd:string" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="files" type="vim2:VirtualMachineFileInfo" />
                     <element name="tools" type="vim2:ToolsConfigInfo" minOccurs="0" />
                     <element name="flags" type="vim2:VirtualMachineFlagInfo" />
                     <element name="consolePreferences" type="vim2:VirtualMachineConsolePreferences" minOccurs="0" />
                     <element name="defaultPowerOps" type="vim2:VirtualMachineDefaultPowerOpInfo" />
                     <element name="hardware" type="vim2:VirtualHardware" />
                     <element name="cpuAllocation" type="vim2:ResourceAllocationInfo" minOccurs="0" />
                     <element name="memoryAllocation" type="vim2:ResourceAllocationInfo" minOccurs="0" />
                     <element name="cpuAffinity" type="vim2:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="memoryAffinity" type="vim2:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="networkShaper" type="vim2:VirtualMachineNetworkShaperInfo" minOccurs="0" />
                     <element name="extraConfig" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuFeatureMask" type="vim2:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastoreUrl" type="vim2:VirtualMachineConfigInfoDatastoreUrlPair" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="guestOSDescriptor" type="vim2:GuestOsDescriptor" maxOccurs="unbounded" />
                     <element name="guestOSDefaultIndex" type="xsd:int" />
                     <element name="hardwareOptions" type="vim2:VirtualHardwareOption" />
                     <element name="capabilities" type="vim2:VirtualMachineCapability" />
                     <element name="datastore" type="vim2:DatastoreOption" />
                     <element name="defaultDevice" type="vim2:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigOptionDescriptor">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineConfigOptionDescriptor">
            <sequence>
               <element name="VirtualMachineConfigOptionDescriptor" type="vim2:VirtualMachineConfigOptionDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineCpuIdInfoSpec">
            <complexContent>
               <extension base="vim2:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim2:HostCpuIdInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineCpuIdInfoSpec">
            <sequence>
               <element name="VirtualMachineCpuIdInfoSpec" type="vim2:VirtualMachineCpuIdInfoSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineConfigSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="locationId" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="files" type="vim2:VirtualMachineFileInfo" minOccurs="0" />
                     <element name="tools" type="vim2:ToolsConfigInfo" minOccurs="0" />
                     <element name="flags" type="vim2:VirtualMachineFlagInfo" minOccurs="0" />
                     <element name="consolePreferences" type="vim2:VirtualMachineConsolePreferences" minOccurs="0" />
                     <element name="powerOpInfo" type="vim2:VirtualMachineDefaultPowerOpInfo" minOccurs="0" />
                     <element name="numCPUs" type="xsd:int" minOccurs="0" />
                     <element name="memoryMB" type="xsd:long" minOccurs="0" />
                     <element name="deviceChange" type="vim2:VirtualDeviceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuAllocation" type="vim2:ResourceAllocationInfo" minOccurs="0" />
                     <element name="memoryAllocation" type="vim2:ResourceAllocationInfo" minOccurs="0" />
                     <element name="cpuAffinity" type="vim2:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="memoryAffinity" type="vim2:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="networkShaper" type="vim2:VirtualMachineNetworkShaperInfo" minOccurs="0" />
                     <element name="cpuFeatureMask" type="vim2:VirtualMachineCpuIdInfoSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="extraConfig" type="vim2:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ConfigTarget">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="numCpus" type="xsd:int" />
                     <element name="numCpuCores" type="xsd:int" />
                     <element name="numNumaNodes" type="xsd:int" />
                     <element name="datastore" type="vim2:VirtualMachineDatastoreInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim2:VirtualMachineNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cdRom" type="vim2:VirtualMachineCdromInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="serial" type="vim2:VirtualMachineSerialInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="parallel" type="vim2:VirtualMachineParallelInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="floppy" type="vim2:VirtualMachineFloppyInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="legacyNetworkInfo" type="vim2:VirtualMachineLegacyNetworkSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiPassthrough" type="vim2:VirtualMachineScsiPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiDisk" type="vim2:VirtualMachineScsiDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ideDisk" type="vim2:VirtualMachineIdeDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxMemMBOptimalPerf" type="xsd:int" />
                     <element name="resourcePool" type="vim2:ResourcePoolRuntimeInfo" minOccurs="0" />
                     <element name="autoVmotion" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConsolePreferences">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="powerOnWhenOpened" type="xsd:boolean" minOccurs="0" />
                     <element name="enterFullScreenOnPowerOn" type="xsd:boolean" minOccurs="0" />
                     <element name="closeOnPowerOffOrSuspend" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineDatastoreInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="datastore" type="vim2:DatastoreSummary" />
                     <element name="capability" type="vim2:DatastoreCapability" />
                     <element name="maxFileSize" type="xsd:long" />
                     <element name="mode" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineDatastoreInfo">
            <sequence>
               <element name="VirtualMachineDatastoreInfo" type="vim2:VirtualMachineDatastoreInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineDatastoreVolumeOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="fileSystemType" type="xsd:string" />
                     <element name="majorVersion" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineDatastoreVolumeOption">
            <sequence>
               <element name="VirtualMachineDatastoreVolumeOption" type="vim2:VirtualMachineDatastoreVolumeOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatastoreOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="unsupportedVolumes" type="vim2:VirtualMachineDatastoreVolumeOption" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachinePowerOpType">
            <restriction base="xsd:string">
               <enumeration value="soft" />
               <enumeration value="hard" />
               <enumeration value="preset" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineStandbyActionType">
            <restriction base="xsd:string">
               <enumeration value="checkpoint" />
               <enumeration value="powerOnSuspend" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineDefaultPowerOpInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="powerOffType" type="xsd:string" minOccurs="0" />
                     <element name="suspendType" type="xsd:string" minOccurs="0" />
                     <element name="resetType" type="xsd:string" minOccurs="0" />
                     <element name="defaultPowerOffType" type="xsd:string" minOccurs="0" />
                     <element name="defaultSuspendType" type="xsd:string" minOccurs="0" />
                     <element name="defaultResetType" type="xsd:string" minOccurs="0" />
                     <element name="standbyAction" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineDiskDeviceInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="capacity" type="xsd:long" minOccurs="0" />
                     <element name="vm" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFileInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vmPathName" type="xsd:string" minOccurs="0" />
                     <element name="snapshotDirectory" type="xsd:string" minOccurs="0" />
                     <element name="suspendDirectory" type="xsd:string" minOccurs="0" />
                     <element name="logDirectory" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFileLayoutDiskLayout">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="diskFile" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutDiskLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutDiskLayout" type="vim2:VirtualMachineFileLayoutDiskLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutSnapshotLayout">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="vim2:ManagedObjectReference" />
                     <element name="snapshotFile" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutSnapshotLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutSnapshotLayout" type="vim2:VirtualMachineFileLayoutSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayout">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="configFile" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="logFile" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="disk" type="vim2:VirtualMachineFileLayoutDiskLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="snapshot" type="vim2:VirtualMachineFileLayoutSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="swapFile" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineHtSharing">
            <restriction base="xsd:string">
               <enumeration value="any" />
               <enumeration value="none" />
               <enumeration value="internal" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineFlagInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="disableAcceleration" type="xsd:boolean" minOccurs="0" />
                     <element name="enableLogging" type="xsd:boolean" minOccurs="0" />
                     <element name="useToe" type="xsd:boolean" minOccurs="0" />
                     <element name="runWithDebugInfo" type="xsd:boolean" minOccurs="0" />
                     <element name="htSharing" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFloppyInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFloppyInfo">
            <sequence>
               <element name="VirtualMachineFloppyInfo" type="vim2:VirtualMachineFloppyInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineToolsStatus">
            <restriction base="xsd:string">
               <enumeration value="toolsNotInstalled" />
               <enumeration value="toolsNotRunning" />
               <enumeration value="toolsOld" />
               <enumeration value="toolsOk" />
            </restriction>
         </simpleType>
         <complexType name="GuestDiskInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskPath" type="xsd:string" minOccurs="0" />
                     <element name="capacity" type="xsd:long" minOccurs="0" />
                     <element name="freeSpace" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestDiskInfo">
            <sequence>
               <element name="GuestDiskInfo" type="vim2:GuestDiskInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="GuestNicInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="network" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="connected" type="xsd:boolean" />
                     <element name="deviceConfigId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestNicInfo">
            <sequence>
               <element name="GuestNicInfo" type="vim2:GuestNicInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="GuestScreenInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="width" type="xsd:int" />
                     <element name="height" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineGuestState">
            <restriction base="xsd:string">
               <enumeration value="running" />
               <enumeration value="shuttingDown" />
               <enumeration value="resetting" />
               <enumeration value="standby" />
               <enumeration value="notRunning" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="GuestInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="toolsStatus" type="vim2:VirtualMachineToolsStatus" minOccurs="0" />
                     <element name="toolsVersion" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFamily" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                     <element name="net" type="vim2:GuestNicInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="disk" type="vim2:GuestDiskInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="screen" type="vim2:GuestScreenInfo" minOccurs="0" />
                     <element name="guestState" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineGuestOsFamily">
            <restriction base="xsd:string">
               <enumeration value="windowsGuest" />
               <enumeration value="linuxGuest" />
               <enumeration value="netwareGuest" />
               <enumeration value="solarisGuest" />
               <enumeration value="otherGuestFamily" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineGuestOsIdentifier">
            <restriction base="xsd:string">
               <enumeration value="dosGuest" />
               <enumeration value="win31Guest" />
               <enumeration value="win95Guest" />
               <enumeration value="win98Guest" />
               <enumeration value="winMeGuest" />
               <enumeration value="winNTGuest" />
               <enumeration value="win2000ProGuest" />
               <enumeration value="win2000ServGuest" />
               <enumeration value="win2000AdvServGuest" />
               <enumeration value="winXPHomeGuest" />
               <enumeration value="winXPProGuest" />
               <enumeration value="winXPPro64Guest" />
               <enumeration value="winNetWebGuest" />
               <enumeration value="winNetStandardGuest" />
               <enumeration value="winNetEnterpriseGuest" />
               <enumeration value="winNetBusinessGuest" />
               <enumeration value="winNetStandard64Guest" />
               <enumeration value="winNetEnterprise64Guest" />
               <enumeration value="winVistaGuest" />
               <enumeration value="winVista64Guest" />
               <enumeration value="freebsdGuest" />
               <enumeration value="freebsd64Guest" />
               <enumeration value="redhatGuest" />
               <enumeration value="rhel2Guest" />
               <enumeration value="rhel3Guest" />
               <enumeration value="rhel3_64Guest" />
               <enumeration value="rhel4Guest" />
               <enumeration value="rhel4_64Guest" />
               <enumeration value="suseGuest" />
               <enumeration value="suse64Guest" />
               <enumeration value="slesGuest" />
               <enumeration value="sles64Guest" />
               <enumeration value="nld9Guest" />
               <enumeration value="oesGuest" />
               <enumeration value="sjdsGuest" />
               <enumeration value="mandrakeGuest" />
               <enumeration value="mandrake64Guest" />
               <enumeration value="turboLinuxGuest" />
               <enumeration value="ubuntuGuest" />
               <enumeration value="ubuntu64Guest" />
               <enumeration value="other24xLinuxGuest" />
               <enumeration value="other26xLinuxGuest" />
               <enumeration value="otherLinuxGuest" />
               <enumeration value="other24xLinux64Guest" />
               <enumeration value="other26xLinux64Guest" />
               <enumeration value="otherLinux64Guest" />
               <enumeration value="solaris6Guest" />
               <enumeration value="solaris7Guest" />
               <enumeration value="solaris8Guest" />
               <enumeration value="solaris9Guest" />
               <enumeration value="solaris10Guest" />
               <enumeration value="solaris10_64Guest" />
               <enumeration value="os2Guest" />
               <enumeration value="netware4Guest" />
               <enumeration value="netware5Guest" />
               <enumeration value="netware6Guest" />
               <enumeration value="darwinGuest" />
               <enumeration value="otherGuest" />
               <enumeration value="otherGuest64" />
            </restriction>
         </simpleType>
         <complexType name="GuestOsDescriptor">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="family" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="supportedMaxCPUs" type="xsd:int" />
                     <element name="supportedMinMemMB" type="xsd:int" />
                     <element name="supportedMaxMemMB" type="xsd:int" />
                     <element name="recommendedMemMB" type="xsd:int" />
                     <element name="recommendedColorDepth" type="xsd:int" />
                     <element name="supportedDiskControllerList" type="xsd:string" maxOccurs="unbounded" />
                     <element name="recommendedSCSIController" type="xsd:string" minOccurs="0" />
                     <element name="recommendedDiskController" type="xsd:string" />
                     <element name="supportedNumDisks" type="xsd:int" />
                     <element name="recommendedDiskSizeMB" type="xsd:int" />
                     <element name="supportedEthernetCard" type="xsd:string" maxOccurs="unbounded" />
                     <element name="recommendedEthernetCard" type="xsd:string" minOccurs="0" />
                     <element name="supportsSlaveDisk" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuFeatureMask" type="vim2:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportsWakeOnLan" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestOsDescriptor">
            <sequence>
               <element name="GuestOsDescriptor" type="vim2:GuestOsDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineIdeDiskDevicePartitionInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:int" />
                     <element name="capacity" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineIdeDiskDevicePartitionInfo">
            <sequence>
               <element name="VirtualMachineIdeDiskDevicePartitionInfo" type="vim2:VirtualMachineIdeDiskDevicePartitionInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineIdeDiskDeviceInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineDiskDeviceInfo">
                  <sequence>
                     <element name="partitionTable" type="vim2:VirtualMachineIdeDiskDevicePartitionInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineIdeDiskDeviceInfo">
            <sequence>
               <element name="VirtualMachineIdeDiskDeviceInfo" type="vim2:VirtualMachineIdeDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineLegacyNetworkSwitchInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineLegacyNetworkSwitchInfo">
            <sequence>
               <element name="VirtualMachineLegacyNetworkSwitchInfo" type="vim2:VirtualMachineLegacyNetworkSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineNetworkInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="network" type="vim2:NetworkSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineNetworkInfo">
            <sequence>
               <element name="VirtualMachineNetworkInfo" type="vim2:VirtualMachineNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineNetworkShaperInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="peakBps" type="xsd:long" minOccurs="0" />
                     <element name="averageBps" type="xsd:long" minOccurs="0" />
                     <element name="burstSize" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineParallelInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineParallelInfo">
            <sequence>
               <element name="VirtualMachineParallelInfo" type="vim2:VirtualMachineParallelInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineQuestionInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="text" type="xsd:string" />
                     <element name="choice" type="vim2:ChoiceOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineRelocateTransformation">
            <restriction base="xsd:string">
               <enumeration value="flat" />
               <enumeration value="sparse" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineRelocateSpecDiskLocator">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="diskId" type="xsd:int" />
                     <element name="datastore" type="vim2:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineRelocateSpecDiskLocator">
            <sequence>
               <element name="VirtualMachineRelocateSpecDiskLocator" type="vim2:VirtualMachineRelocateSpecDiskLocator" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineRelocateSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="pool" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="disk" type="vim2:VirtualMachineRelocateSpecDiskLocator" minOccurs="0" maxOccurs="unbounded" />
                     <element name="transform" type="vim2:VirtualMachineRelocateTransformation" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineRuntimeInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="connectionState" type="vim2:VirtualMachineConnectionState" />
                     <element name="powerState" type="vim2:VirtualMachinePowerState" />
                     <element name="toolsInstallerMounted" type="xsd:boolean" />
                     <element name="suspendTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="bootTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="suspendInterval" type="xsd:long" minOccurs="0" />
                     <element name="question" type="vim2:VirtualMachineQuestionInfo" minOccurs="0" />
                     <element name="memoryOverhead" type="xsd:long" minOccurs="0" />
                     <element name="maxCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="maxMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="numMksConnections" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineScsiDiskDeviceInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineDiskDeviceInfo">
                  <sequence>
                     <element name="disk" type="vim2:HostScsiDisk" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineScsiDiskDeviceInfo">
            <sequence>
               <element name="VirtualMachineScsiDiskDeviceInfo" type="vim2:VirtualMachineScsiDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineScsiPassthroughType">
            <restriction base="xsd:string">
               <enumeration value="disk" />
               <enumeration value="tape" />
               <enumeration value="printer" />
               <enumeration value="processor" />
               <enumeration value="worm" />
               <enumeration value="cdrom" />
               <enumeration value="scanner" />
               <enumeration value="optical" />
               <enumeration value="media" />
               <enumeration value="com" />
               <enumeration value="raid" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineScsiPassthroughInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="scsiClass" type="xsd:string" />
                     <element name="vendor" type="xsd:string" />
                     <element name="physicalUnitNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineScsiPassthroughInfo">
            <sequence>
               <element name="VirtualMachineScsiPassthroughInfo" type="vim2:VirtualMachineScsiPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineSerialInfo">
            <complexContent>
               <extension base="vim2:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSerialInfo">
            <sequence>
               <element name="VirtualMachineSerialInfo" type="vim2:VirtualMachineSerialInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RevertToSnapshot_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="host" type="vim2:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RevertToSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveSnapshot_Task">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="removeChildren" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <element name="RemoveSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim2:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <element name="RenameSnapshot">
            <complexType>
               <sequence>
                  <element name="_this" type="vim2:ManagedObjectReference" />
                  <element name="name" type="xsd:string" minOccurs="0" />
                  <element name="description" type="xsd:string" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <element name="RenameSnapshotResponse">
            <complexType />
         </element>
         <complexType name="VirtualMachineSnapshotInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="currentSnapshot" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="rootSnapshotList" type="vim2:VirtualMachineSnapshotTree" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineSnapshotTree">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="snapshot" type="vim2:ManagedObjectReference" />
                     <element name="vm" type="vim2:ManagedObjectReference" />
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="createTime" type="xsd:dateTime" />
                     <element name="state" type="vim2:VirtualMachinePowerState" />
                     <element name="quiesced" type="xsd:boolean" />
                     <element name="childSnapshotList" type="vim2:VirtualMachineSnapshotTree" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSnapshotTree">
            <sequence>
               <element name="VirtualMachineSnapshotTree" type="vim2:VirtualMachineSnapshotTree" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineConfigSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="template" type="xsd:boolean" />
                     <element name="vmPathName" type="xsd:string" />
                     <element name="memorySizeMB" type="xsd:int" minOccurs="0" />
                     <element name="cpuReservation" type="xsd:int" minOccurs="0" />
                     <element name="memoryReservation" type="xsd:int" minOccurs="0" />
                     <element name="numCpu" type="xsd:int" minOccurs="0" />
                     <element name="numEthernetCards" type="xsd:int" minOccurs="0" />
                     <element name="numVirtualDisks" type="xsd:int" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineQuickStats">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="overallCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="guestMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="hostMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="guestHeartbeatStatus" type="vim2:ManagedEntityStatus" />
                     <element name="distributedCpuEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="distributedMemoryEntitlement" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineGuestSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="toolsStatus" type="vim2:VirtualMachineToolsStatus" minOccurs="0" />
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineSummary">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="vm" type="vim2:ManagedObjectReference" minOccurs="0" />
                     <element name="runtime" type="vim2:VirtualMachineRuntimeInfo" />
                     <element name="guest" type="vim2:VirtualMachineGuestSummary" minOccurs="0" />
                     <element name="config" type="vim2:VirtualMachineConfigSummary" />
                     <element name="quickStats" type="vim2:VirtualMachineQuickStats" />
                     <element name="overallStatus" type="vim2:ManagedEntityStatus" />
                     <element name="customValue" type="vim2:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSummary">
            <sequence>
               <element name="VirtualMachineSummary" type="vim2:VirtualMachineSummary" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineTargetInfoConfigurationTag">
            <restriction base="xsd:string">
               <enumeration value="compliant" />
               <enumeration value="clusterWide" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineTargetInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="configurationTag" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ToolsConfigInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="toolsVersion" type="xsd:int" minOccurs="0" />
                     <element name="afterPowerOn" type="xsd:boolean" minOccurs="0" />
                     <element name="afterResume" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestStandby" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestShutdown" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestReboot" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualHardware">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="numCPU" type="xsd:int" />
                     <element name="memoryMB" type="xsd:int" />
                     <element name="device" type="vim2:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualHardwareOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="hwVersion" type="xsd:int" />
                     <element name="virtualDeviceOption" type="vim2:VirtualDeviceOption" maxOccurs="unbounded" />
                     <element name="deviceListReadonly" type="xsd:boolean" />
                     <element name="numCPU" type="xsd:int" maxOccurs="unbounded" />
                     <element name="numCpuReadonly" type="xsd:boolean" />
                     <element name="memoryMB" type="vim2:LongOption" />
                     <element name="numPCIControllers" type="vim2:IntOption" />
                     <element name="numIDEControllers" type="vim2:IntOption" />
                     <element name="numUSBControllers" type="vim2:IntOption" />
                     <element name="numSIOControllers" type="vim2:IntOption" />
                     <element name="numPS2Controllers" type="vim2:IntOption" />
                     <element name="licensingLimit" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="options" type="vim2:CustomizationOptions" minOccurs="0" />
                     <element name="identity" type="vim2:CustomizationIdentitySettings" />
                     <element name="globalIPSettings" type="vim2:CustomizationGlobalIPSettings" />
                     <element name="nicSettingMap" type="vim2:CustomizationAdapterMapping" minOccurs="0" maxOccurs="unbounded" />
                     <element name="encryptionKey" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationName">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFixedName">
            <complexContent>
               <extension base="vim2:CustomizationName">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationPrefixName">
            <complexContent>
               <extension base="vim2:CustomizationName">
                  <sequence>
                     <element name="base" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationVirtualMachineName">
            <complexContent>
               <extension base="vim2:CustomizationName">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownName">
            <complexContent>
               <extension base="vim2:CustomizationName">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationCustomName">
            <complexContent>
               <extension base="vim2:CustomizationName">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationPassword">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="value" type="xsd:string" />
                     <element name="plainText" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationOptions">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationWinOptions">
            <complexContent>
               <extension base="vim2:CustomizationOptions">
                  <sequence>
                     <element name="changeSID" type="xsd:boolean" />
                     <element name="deleteAccounts" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationLinuxOptions">
            <complexContent>
               <extension base="vim2:CustomizationOptions">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGuiUnattended">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="password" type="vim2:CustomizationPassword" minOccurs="0" />
                     <element name="timeZone" type="xsd:int" />
                     <element name="autoLogon" type="xsd:boolean" />
                     <element name="autoLogonCount" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUserData">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="fullName" type="xsd:string" />
                     <element name="orgName" type="xsd:string" />
                     <element name="computerName" type="vim2:CustomizationName" />
                     <element name="productId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGuiRunOnce">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="commandList" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIdentification">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="joinWorkgroup" type="xsd:string" minOccurs="0" />
                     <element name="joinDomain" type="xsd:string" minOccurs="0" />
                     <element name="domainAdmin" type="xsd:string" minOccurs="0" />
                     <element name="domainAdminPassword" type="vim2:CustomizationPassword" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="CustomizationLicenseDataMode">
            <restriction base="xsd:string">
               <enumeration value="perServer" />
               <enumeration value="perSeat" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationLicenseFilePrintData">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="autoMode" type="vim2:CustomizationLicenseDataMode" />
                     <element name="autoUsers" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIdentitySettings">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSysprepText">
            <complexContent>
               <extension base="vim2:CustomizationIdentitySettings">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSysprep">
            <complexContent>
               <extension base="vim2:CustomizationIdentitySettings">
                  <sequence>
                     <element name="guiUnattended" type="vim2:CustomizationGuiUnattended" />
                     <element name="userData" type="vim2:CustomizationUserData" />
                     <element name="guiRunOnce" type="vim2:CustomizationGuiRunOnce" minOccurs="0" />
                     <element name="identification" type="vim2:CustomizationIdentification" />
                     <element name="licenseFilePrintData" type="vim2:CustomizationLicenseFilePrintData" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationLinuxPrep">
            <complexContent>
               <extension base="vim2:CustomizationIdentitySettings">
                  <sequence>
                     <element name="hostName" type="vim2:CustomizationName" />
                     <element name="domain" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGlobalIPSettings">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="dnsSuffixList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsServerList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="CustomizationNetBIOSMode">
            <restriction base="xsd:string">
               <enumeration value="enableNetBIOSViaDhcp" />
               <enumeration value="enableNetBIOS" />
               <enumeration value="disableNetBIOS" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationIPSettings">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="ip" type="vim2:CustomizationIpGenerator" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                     <element name="gateway" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsServerList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsDomain" type="xsd:string" minOccurs="0" />
                     <element name="primaryWINS" type="xsd:string" minOccurs="0" />
                     <element name="secondaryWINS" type="xsd:string" minOccurs="0" />
                     <element name="netBIOS" type="vim2:CustomizationNetBIOSMode" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIpGenerator">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationDhcpIpGenerator">
            <complexContent>
               <extension base="vim2:CustomizationIpGenerator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFixedIp">
            <complexContent>
               <extension base="vim2:CustomizationIpGenerator">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownIpGenerator">
            <complexContent>
               <extension base="vim2:CustomizationIpGenerator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationCustomIpGenerator">
            <complexContent>
               <extension base="vim2:CustomizationIpGenerator">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationAdapterMapping">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="adapter" type="vim2:CustomizationIPSettings" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomizationAdapterMapping">
            <sequence>
               <element name="CustomizationAdapterMapping" type="vim2:CustomizationAdapterMapping" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskMappingPartitionInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fileSystem" type="xsd:string" />
                     <element name="capacityInKb" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskMappingInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="physicalPartition" type="vim2:HostDiskMappingPartitionInfo" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="exclusive" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskMappingPartitionOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fileSystem" type="xsd:string" />
                     <element name="capacityInKb" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskMappingPartitionOption">
            <sequence>
               <element name="HostDiskMappingPartitionOption" type="vim2:HostDiskMappingPartitionOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskMappingOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="physicalPartition" type="vim2:HostDiskMappingPartitionOption" minOccurs="0" maxOccurs="unbounded" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualBusLogicController">
            <complexContent>
               <extension base="vim2:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualBusLogicControllerOption">
            <complexContent>
               <extension base="vim2:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromIsoBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromPassthroughBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="exclusive" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemotePassthroughBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                     <element name="exclusive" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromAtapiBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemoteAtapiBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdrom">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromIsoBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromPassthroughBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="exclusive" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemotePassthroughBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceRemoteDeviceBackingOption">
                  <sequence>
                     <element name="exclusive" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromAtapiBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemoteAtapiBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualController">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                     <element name="busNumber" type="xsd:int" />
                     <element name="device" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualControllerOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                     <element name="devices" type="vim2:IntOption" />
                     <element name="supportedDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceFileBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="fileName" type="xsd:string" />
                     <element name="datastore" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceRemoteDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevicePipeBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="pipeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceConnectInfo">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="startConnected" type="xsd:boolean" />
                     <element name="allowGuestControl" type="xsd:boolean" />
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevice">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="deviceInfo" type="vim2:Description" minOccurs="0" />
                     <element name="backing" type="vim2:VirtualDeviceBackingInfo" minOccurs="0" />
                     <element name="connectable" type="vim2:VirtualDeviceConnectInfo" minOccurs="0" />
                     <element name="controllerKey" type="xsd:int" minOccurs="0" />
                     <element name="unitNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDevice">
            <sequence>
               <element name="VirtualDevice" type="vim2:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualDeviceBackingOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceBackingOption">
            <sequence>
               <element name="VirtualDeviceBackingOption" type="vim2:VirtualDeviceBackingOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualDeviceFileExtension">
            <restriction base="xsd:string">
               <enumeration value="iso" />
               <enumeration value="flp" />
               <enumeration value="vmdk" />
               <enumeration value="dsk" />
               <enumeration value="rdm" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDeviceFileBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingOption">
                  <sequence>
                     <element name="fileNameExtensions" type="vim2:ChoiceOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceRemoteDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevicePipeBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceConnectOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="startConnected" type="vim2:BoolOption" />
                     <element name="allowGuestControl" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceOption">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="connectOption" type="vim2:VirtualDeviceConnectOption" minOccurs="0" />
                     <element name="controllerType" type="xsd:string" minOccurs="0" />
                     <element name="autoAssignController" type="vim2:BoolOption" minOccurs="0" />
                     <element name="backingOption" type="vim2:VirtualDeviceBackingOption" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultBackingOptionIndex" type="xsd:int" minOccurs="0" />
                     <element name="licensingLimit" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="deprecated" type="xsd:boolean" />
                     <element name="plugAndPlay" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceOption">
            <sequence>
               <element name="VirtualDeviceOption" type="vim2:VirtualDeviceOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualDeviceConfigSpecOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualDeviceConfigSpecFileOperation">
            <restriction base="xsd:string">
               <enumeration value="create" />
               <enumeration value="destroy" />
               <enumeration value="replace" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDeviceConfigSpec">
            <complexContent>
               <extension base="vim2:DynamicData">
                  <sequence>
                     <element name="operation" type="vim2:VirtualDeviceConfigSpecOperation" minOccurs="0" />
                     <element name="fileOperation" type="vim2:VirtualDeviceConfigSpecFileOperation" minOccurs="0" />
                     <element name="device" type="vim2:VirtualDevice" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceConfigSpec">
            <sequence>
               <element name="VirtualDeviceConfigSpec" type="vim2:VirtualDeviceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualDiskSparseVer1BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="spaceUsedInKB" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskSparseVer2BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="spaceUsedInKB" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer1BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer2BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="thinProvisioned" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskVer2BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="descriptorFileName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskPartitionedRawDiskVer2BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDiskRawDiskVer2BackingInfo">
                  <sequence>
                     <element name="partition" type="xsd:int" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskMappingVer1BackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="lunUuid" type="xsd:string" minOccurs="0" />
                     <element name="deviceName" type="xsd:string" minOccurs="0" />
                     <element name="compatibilityMode" type="xsd:string" minOccurs="0" />
                     <element name="diskMode" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDisk">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                     <element name="capacityInKB" type="xsd:long" />
                     <element name="shares" type="vim2:SharesInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualDiskMode">
            <restriction base="xsd:string">
               <enumeration value="persistent" />
               <enumeration value="nonpersistent" />
               <enumeration value="undoable" />
               <enumeration value="independent_persistent" />
               <enumeration value="independent_nonpersistent" />
               <enumeration value="append" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualDiskCompatibilityMode">
            <restriction base="xsd:string">
               <enumeration value="virtualMode" />
               <enumeration value="physicalMode" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDiskSparseVer1BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskModes" type="vim2:ChoiceOption" />
                     <element name="split" type="vim2:BoolOption" />
                     <element name="writeThrough" type="vim2:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskSparseVer2BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim2:ChoiceOption" />
                     <element name="split" type="vim2:BoolOption" />
                     <element name="writeThrough" type="vim2:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer1BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim2:ChoiceOption" />
                     <element name="split" type="vim2:BoolOption" />
                     <element name="writeThrough" type="vim2:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer2BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim2:ChoiceOption" />
                     <element name="split" type="vim2:BoolOption" />
                     <element name="writeThrough" type="vim2:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskVer2BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="descriptorFileNameExtensions" type="vim2:ChoiceOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskPartitionedRawDiskVer2BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDiskRawDiskVer2BackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskMappingVer1BackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="descriptorFileNameExtensions" type="vim2:ChoiceOption" minOccurs="0" />
                     <element name="compatibilityMode" type="vim2:ChoiceOption" />
                     <element name="diskMode" type="vim2:ChoiceOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                     <element name="capacityInKB" type="vim2:LongOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualE1000">
            <complexContent>
               <extension base="vim2:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualE1000Option">
            <complexContent>
               <extension base="vim2:VirtualEthernetCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEnsoniq1371">
            <complexContent>
               <extension base="vim2:VirtualSoundCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEnsoniq1371Option">
            <complexContent>
               <extension base="vim2:VirtualSoundCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardNetworkBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="network" type="vim2:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardLegacyNetworkBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCard">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                     <element name="addressType" type="xsd:string" minOccurs="0" />
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="wakeOnLanEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardNetworkBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualEthernetCardLegacyNetworkDeviceName">
            <restriction base="xsd:string">
               <enumeration value="bridged" />
               <enumeration value="nat" />
               <enumeration value="hostonly" />
            </restriction>
         </simpleType>
         <complexType name="VirtualEthernetCardLegacyNetworkBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualEthernetCardMacType">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="generated" />
               <enumeration value="assigned" />
            </restriction>
         </simpleType>
         <complexType name="VirtualEthernetCardOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                     <element name="supportedOUI" type="vim2:ChoiceOption" />
                     <element name="macType" type="vim2:ChoiceOption" />
                     <element name="wakeOnLanEnabled" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyImageBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyRemoteDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppy">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyImageBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyRemoteDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceRemoteDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualIDEController">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualIDEControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="numIDEDisks" type="vim2:IntOption" />
                     <element name="numIDECdroms" type="vim2:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualKeyboard">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualKeyboardOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicController">
            <complexContent>
               <extension base="vim2:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicControllerOption">
            <complexContent>
               <extension base="vim2:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIController">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="numSCSIControllers" type="vim2:IntOption" />
                     <element name="numEthernetCards" type="vim2:IntOption" />
                     <element name="numVideoCards" type="vim2:IntOption" />
                     <element name="numSoundCards" type="vim2:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCNet32">
            <complexContent>
               <extension base="vim2:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCNet32Option">
            <complexContent>
               <extension base="vim2:VirtualEthernetCardOption">
                  <sequence>
                     <element name="supportsMorphing" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPS2Controller">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPS2ControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="numKeyboards" type="vim2:IntOption" />
                     <element name="numPointingDevices" type="vim2:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortFileBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPort">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortFileBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDeviceDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="hostPointingDevice" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDevice">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualPointingDeviceHostChoice">
            <restriction base="xsd:string">
               <enumeration value="autodetect" />
               <enumeration value="intellimouseExplorer" />
               <enumeration value="intellimousePs2" />
               <enumeration value="logitechMouseman" />
               <enumeration value="microsoft_serial" />
               <enumeration value="mouseSystems" />
               <enumeration value="mousemanSerial" />
               <enumeration value="ps2" />
            </restriction>
         </simpleType>
         <complexType name="VirtualPointingDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="hostPointingDevice" type="vim2:ChoiceOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDeviceOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualSCSISharing">
            <restriction base="xsd:string">
               <enumeration value="noSharing" />
               <enumeration value="virtualSharing" />
               <enumeration value="physicalSharing" />
            </restriction>
         </simpleType>
         <complexType name="ArrayOfVirtualSCSISharing">
            <sequence>
               <element name="VirtualSCSISharing" type="vim2:VirtualSCSISharing" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualSCSIController">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                     <element name="hotAddRemove" type="xsd:boolean" minOccurs="0" />
                     <element name="sharedBus" type="vim2:VirtualSCSISharing" />
                     <element name="scsiCtlrUnitNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="numSCSIDisks" type="vim2:IntOption" />
                     <element name="numSCSICdroms" type="vim2:IntOption" />
                     <element name="numSCSIPassthrough" type="vim2:IntOption" />
                     <element name="sharing" type="vim2:VirtualSCSISharing" maxOccurs="unbounded" />
                     <element name="defaultSharedIndex" type="xsd:int" />
                     <element name="hotAddRemove" type="vim2:BoolOption" />
                     <element name="scsiCtlrUnitNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthrough">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSIOController">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSIOControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="numFloppyDrives" type="vim2:IntOption" />
                     <element name="numSerialPorts" type="vim2:IntOption" />
                     <element name="numParallelPorts" type="vim2:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortFileBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortPipeBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDevicePipeBackingInfo">
                  <sequence>
                     <element name="endpoint" type="xsd:string" />
                     <element name="noRxLoss" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPort">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                     <element name="yieldOnPoll" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualSerialPortEndPoint">
            <restriction base="xsd:string">
               <enumeration value="client" />
               <enumeration value="server" />
            </restriction>
         </simpleType>
         <complexType name="VirtualSerialPortFileBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortPipeBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDevicePipeBackingOption">
                  <sequence>
                     <element name="endpoint" type="vim2:ChoiceOption" />
                     <element name="noRxLoss" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                     <element name="yieldOnPoll" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundBlaster16">
            <complexContent>
               <extension base="vim2:VirtualSoundCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundBlaster16Option">
            <complexContent>
               <extension base="vim2:VirtualSoundCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardDeviceBackingInfo">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCard">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardDeviceBackingOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSB">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBController">
            <complexContent>
               <extension base="vim2:VirtualController">
                  <sequence>
                     <element name="autoConnectDevices" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBControllerOption">
            <complexContent>
               <extension base="vim2:VirtualControllerOption">
                  <sequence>
                     <element name="autoConnectDevices" type="vim2:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineVideoCard">
            <complexContent>
               <extension base="vim2:VirtualDevice">
                  <sequence>
                     <element name="videoRamSizeInKB" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVideoCardOption">
            <complexContent>
               <extension base="vim2:VirtualDeviceOption">
                  <sequence>
                     <element name="videoRamSizeInKB" type="vim2:LongOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet">
            <complexContent>
               <extension base="vim2:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnetOption">
            <complexContent>
               <extension base="vim2:VirtualEthernetCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ManagedObjectReference">
            <simpleContent>
               <extension base="xsd:string">
                  <attribute name="type" type="xsd:string"/>
               </extension>
            </simpleContent>
         </complexType>
         <complexType name="ArrayOfString">
            <sequence>
               <element name="string" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfAnyType">
            <sequence>
               <element name="anyType" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfManagedObjectReference">
            <sequence>
               <element name="ManagedObjectReference" type="vim2:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfInt">
            <sequence>
               <element name="int" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfByte">
            <sequence>
               <element name="byte" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfShort">
            <sequence>
               <element name="short" type="xsd:short" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfLong">
            <sequence>
               <element name="long" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
      </schema>
   </types>
   <message name="HostCommunicationFaultMsg">
      <part name="fault" element="vim2:HostCommunicationFault" />
   </message>
   <message name="HostNotConnectedFaultMsg">
      <part name="fault" element="vim2:HostNotConnectedFault" />
   </message>
   <message name="HostNotReachableFaultMsg">
      <part name="fault" element="vim2:HostNotReachableFault" />
   </message>
   <message name="InvalidArgumentFaultMsg">
      <part name="fault" element="vim2:InvalidArgumentFault" />
   </message>
   <message name="InvalidRequestFaultMsg">
      <part name="fault" element="vim2:InvalidRequestFault" />
   </message>
   <message name="InvalidTypeFaultMsg">
      <part name="fault" element="vim2:InvalidTypeFault" />
   </message>
   <message name="ManagedObjectNotFoundFaultMsg">
      <part name="fault" element="vim2:ManagedObjectNotFoundFault" />
   </message>
   <message name="MethodNotFoundFaultMsg">
      <part name="fault" element="vim2:MethodNotFoundFault" />
   </message>
   <message name="NotEnoughLicensesFaultMsg">
      <part name="fault" element="vim2:NotEnoughLicensesFault" />
   </message>
   <message name="NotImplementedFaultMsg">
      <part name="fault" element="vim2:NotImplementedFault" />
   </message>
   <message name="NotSupportedFaultMsg">
      <part name="fault" element="vim2:NotSupportedFault" />
   </message>
   <message name="RequestCanceledFaultMsg">
      <part name="fault" element="vim2:RequestCanceledFault" />
   </message>
   <message name="SecurityErrorFaultMsg">
      <part name="fault" element="vim2:SecurityErrorFault" />
   </message>
   <message name="SystemErrorFaultMsg">
      <part name="fault" element="vim2:SystemErrorFault" />
   </message>
   <message name="InvalidCollectorVersionFaultMsg">
      <part name="fault" element="vim2:InvalidCollectorVersionFault" />
   </message>
   <message name="InvalidPropertyFaultMsg">
      <part name="fault" element="vim2:InvalidPropertyFault" />
   </message>
   <message name="DestroyPropertyFilterRequestMsg">
      <part name="parameters" element="vim2:DestroyPropertyFilter" />
   </message>
   <message name="DestroyPropertyFilterResponseMsg">
      <part name="parameters" element="vim2:DestroyPropertyFilterResponse" />
   </message>
   <message name="CreateFilterRequestMsg">
      <part name="parameters" element="vim2:CreateFilter" />
   </message>
   <message name="CreateFilterResponseMsg">
      <part name="parameters" element="vim2:CreateFilterResponse" />
   </message>
   <message name="RetrievePropertiesRequestMsg">
      <part name="parameters" element="vim2:RetrieveProperties" />
   </message>
   <message name="RetrievePropertiesResponseMsg">
      <part name="parameters" element="vim2:RetrievePropertiesResponse" />
   </message>
   <message name="CheckForUpdatesRequestMsg">
      <part name="parameters" element="vim2:CheckForUpdates" />
   </message>
   <message name="CheckForUpdatesResponseMsg">
      <part name="parameters" element="vim2:CheckForUpdatesResponse" />
   </message>
   <message name="WaitForUpdatesRequestMsg">
      <part name="parameters" element="vim2:WaitForUpdates" />
   </message>
   <message name="WaitForUpdatesResponseMsg">
      <part name="parameters" element="vim2:WaitForUpdatesResponse" />
   </message>
   <message name="CancelWaitForUpdatesRequestMsg">
      <part name="parameters" element="vim2:CancelWaitForUpdates" />
   </message>
   <message name="CancelWaitForUpdatesResponseMsg">
      <part name="parameters" element="vim2:CancelWaitForUpdatesResponse" />
   </message>
   <message name="MethodFaultFaultMsg">
      <part name="fault" element="vim2:MethodFaultFault" />
   </message>
   <message name="RuntimeFaultFaultMsg">
      <part name="fault" element="vim2:RuntimeFaultFault" />
   </message>
   <message name="AddAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim2:AddAuthorizationRole" />
   </message>
   <message name="AddAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim2:AddAuthorizationRoleResponse" />
   </message>
   <message name="RemoveAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim2:RemoveAuthorizationRole" />
   </message>
   <message name="RemoveAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim2:RemoveAuthorizationRoleResponse" />
   </message>
   <message name="UpdateAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim2:UpdateAuthorizationRole" />
   </message>
   <message name="UpdateAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim2:UpdateAuthorizationRoleResponse" />
   </message>
   <message name="MergePermissionsRequestMsg">
      <part name="parameters" element="vim2:MergePermissions" />
   </message>
   <message name="MergePermissionsResponseMsg">
      <part name="parameters" element="vim2:MergePermissionsResponse" />
   </message>
   <message name="RetrieveRolePermissionsRequestMsg">
      <part name="parameters" element="vim2:RetrieveRolePermissions" />
   </message>
   <message name="RetrieveRolePermissionsResponseMsg">
      <part name="parameters" element="vim2:RetrieveRolePermissionsResponse" />
   </message>
   <message name="RetrieveEntityPermissionsRequestMsg">
      <part name="parameters" element="vim2:RetrieveEntityPermissions" />
   </message>
   <message name="RetrieveEntityPermissionsResponseMsg">
      <part name="parameters" element="vim2:RetrieveEntityPermissionsResponse" />
   </message>
   <message name="RetrieveAllPermissionsRequestMsg">
      <part name="parameters" element="vim2:RetrieveAllPermissions" />
   </message>
   <message name="RetrieveAllPermissionsResponseMsg">
      <part name="parameters" element="vim2:RetrieveAllPermissionsResponse" />
   </message>
   <message name="SetEntityPermissionsRequestMsg">
      <part name="parameters" element="vim2:SetEntityPermissions" />
   </message>
   <message name="SetEntityPermissionsResponseMsg">
      <part name="parameters" element="vim2:SetEntityPermissionsResponse" />
   </message>
   <message name="ResetEntityPermissionsRequestMsg">
      <part name="parameters" element="vim2:ResetEntityPermissions" />
   </message>
   <message name="ResetEntityPermissionsResponseMsg">
      <part name="parameters" element="vim2:ResetEntityPermissionsResponse" />
   </message>
   <message name="RemoveEntityPermissionRequestMsg">
      <part name="parameters" element="vim2:RemoveEntityPermission" />
   </message>
   <message name="RemoveEntityPermissionResponseMsg">
      <part name="parameters" element="vim2:RemoveEntityPermissionResponse" />
   </message>
   <message name="ReconfigureCluster_TaskRequestMsg">
      <part name="parameters" element="vim2:ReconfigureCluster_Task" />
   </message>
   <message name="ReconfigureCluster_TaskResponseMsg">
      <part name="parameters" element="vim2:ReconfigureCluster_TaskResponse" />
   </message>
   <message name="ApplyRecommendationRequestMsg">
      <part name="parameters" element="vim2:ApplyRecommendation" />
   </message>
   <message name="ApplyRecommendationResponseMsg">
      <part name="parameters" element="vim2:ApplyRecommendationResponse" />
   </message>
   <message name="RecommendHostsForVmRequestMsg">
      <part name="parameters" element="vim2:RecommendHostsForVm" />
   </message>
   <message name="RecommendHostsForVmResponseMsg">
      <part name="parameters" element="vim2:RecommendHostsForVmResponse" />
   </message>
   <message name="AddHost_TaskRequestMsg">
      <part name="parameters" element="vim2:AddHost_Task" />
   </message>
   <message name="AddHost_TaskResponseMsg">
      <part name="parameters" element="vim2:AddHost_TaskResponse" />
   </message>
   <message name="MoveInto_TaskRequestMsg">
      <part name="parameters" element="vim2:MoveInto_Task" />
   </message>
   <message name="MoveInto_TaskResponseMsg">
      <part name="parameters" element="vim2:MoveInto_TaskResponse" />
   </message>
   <message name="MoveHostInto_TaskRequestMsg">
      <part name="parameters" element="vim2:MoveHostInto_Task" />
   </message>
   <message name="MoveHostInto_TaskResponseMsg">
      <part name="parameters" element="vim2:MoveHostInto_TaskResponse" />
   </message>
   <message name="AddCustomFieldDefRequestMsg">
      <part name="parameters" element="vim2:AddCustomFieldDef" />
   </message>
   <message name="AddCustomFieldDefResponseMsg">
      <part name="parameters" element="vim2:AddCustomFieldDefResponse" />
   </message>
   <message name="RemoveCustomFieldDefRequestMsg">
      <part name="parameters" element="vim2:RemoveCustomFieldDef" />
   </message>
   <message name="RemoveCustomFieldDefResponseMsg">
      <part name="parameters" element="vim2:RemoveCustomFieldDefResponse" />
   </message>
   <message name="RenameCustomFieldDefRequestMsg">
      <part name="parameters" element="vim2:RenameCustomFieldDef" />
   </message>
   <message name="RenameCustomFieldDefResponseMsg">
      <part name="parameters" element="vim2:RenameCustomFieldDefResponse" />
   </message>
   <message name="SetFieldRequestMsg">
      <part name="parameters" element="vim2:SetField" />
   </message>
   <message name="SetFieldResponseMsg">
      <part name="parameters" element="vim2:SetFieldResponse" />
   </message>
   <message name="DoesCustomizationSpecExistRequestMsg">
      <part name="parameters" element="vim2:DoesCustomizationSpecExist" />
   </message>
   <message name="DoesCustomizationSpecExistResponseMsg">
      <part name="parameters" element="vim2:DoesCustomizationSpecExistResponse" />
   </message>
   <message name="GetCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:GetCustomizationSpec" />
   </message>
   <message name="GetCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:GetCustomizationSpecResponse" />
   </message>
   <message name="CreateCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:CreateCustomizationSpec" />
   </message>
   <message name="CreateCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:CreateCustomizationSpecResponse" />
   </message>
   <message name="OverwriteCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:OverwriteCustomizationSpec" />
   </message>
   <message name="OverwriteCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:OverwriteCustomizationSpecResponse" />
   </message>
   <message name="DeleteCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:DeleteCustomizationSpec" />
   </message>
   <message name="DeleteCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:DeleteCustomizationSpecResponse" />
   </message>
   <message name="DuplicateCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:DuplicateCustomizationSpec" />
   </message>
   <message name="DuplicateCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:DuplicateCustomizationSpecResponse" />
   </message>
   <message name="RenameCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:RenameCustomizationSpec" />
   </message>
   <message name="RenameCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:RenameCustomizationSpecResponse" />
   </message>
   <message name="CustomizationSpecItemToXmlRequestMsg">
      <part name="parameters" element="vim2:CustomizationSpecItemToXml" />
   </message>
   <message name="CustomizationSpecItemToXmlResponseMsg">
      <part name="parameters" element="vim2:CustomizationSpecItemToXmlResponse" />
   </message>
   <message name="XmlToCustomizationSpecItemRequestMsg">
      <part name="parameters" element="vim2:XmlToCustomizationSpecItem" />
   </message>
   <message name="XmlToCustomizationSpecItemResponseMsg">
      <part name="parameters" element="vim2:XmlToCustomizationSpecItemResponse" />
   </message>
   <message name="CheckCustomizationResourcesRequestMsg">
      <part name="parameters" element="vim2:CheckCustomizationResources" />
   </message>
   <message name="CheckCustomizationResourcesResponseMsg">
      <part name="parameters" element="vim2:CheckCustomizationResourcesResponse" />
   </message>
   <message name="QueryConnectionInfoRequestMsg">
      <part name="parameters" element="vim2:QueryConnectionInfo" />
   </message>
   <message name="QueryConnectionInfoResponseMsg">
      <part name="parameters" element="vim2:QueryConnectionInfoResponse" />
   </message>
   <message name="RenameDatastoreRequestMsg">
      <part name="parameters" element="vim2:RenameDatastore" />
   </message>
   <message name="RenameDatastoreResponseMsg">
      <part name="parameters" element="vim2:RenameDatastoreResponse" />
   </message>
   <message name="RefreshDatastoreRequestMsg">
      <part name="parameters" element="vim2:RefreshDatastore" />
   </message>
   <message name="RefreshDatastoreResponseMsg">
      <part name="parameters" element="vim2:RefreshDatastoreResponse" />
   </message>
   <message name="DestroyDatastoreRequestMsg">
      <part name="parameters" element="vim2:DestroyDatastore" />
   </message>
   <message name="DestroyDatastoreResponseMsg">
      <part name="parameters" element="vim2:DestroyDatastoreResponse" />
   </message>
   <message name="QueryDescriptionsRequestMsg">
      <part name="parameters" element="vim2:QueryDescriptions" />
   </message>
   <message name="QueryDescriptionsResponseMsg">
      <part name="parameters" element="vim2:QueryDescriptionsResponse" />
   </message>
   <message name="BrowseDiagnosticLogRequestMsg">
      <part name="parameters" element="vim2:BrowseDiagnosticLog" />
   </message>
   <message name="BrowseDiagnosticLogResponseMsg">
      <part name="parameters" element="vim2:BrowseDiagnosticLogResponse" />
   </message>
   <message name="GenerateLogBundles_TaskRequestMsg">
      <part name="parameters" element="vim2:GenerateLogBundles_Task" />
   </message>
   <message name="GenerateLogBundles_TaskResponseMsg">
      <part name="parameters" element="vim2:GenerateLogBundles_TaskResponse" />
   </message>
   <message name="QueryConfigOptionDescriptorRequestMsg">
      <part name="parameters" element="vim2:QueryConfigOptionDescriptor" />
   </message>
   <message name="QueryConfigOptionDescriptorResponseMsg">
      <part name="parameters" element="vim2:QueryConfigOptionDescriptorResponse" />
   </message>
   <message name="QueryConfigOptionRequestMsg">
      <part name="parameters" element="vim2:QueryConfigOption" />
   </message>
   <message name="QueryConfigOptionResponseMsg">
      <part name="parameters" element="vim2:QueryConfigOptionResponse" />
   </message>
   <message name="QueryConfigTargetRequestMsg">
      <part name="parameters" element="vim2:QueryConfigTarget" />
   </message>
   <message name="QueryConfigTargetResponseMsg">
      <part name="parameters" element="vim2:QueryConfigTargetResponse" />
   </message>
   <message name="CreateFolderRequestMsg">
      <part name="parameters" element="vim2:CreateFolder" />
   </message>
   <message name="CreateFolderResponseMsg">
      <part name="parameters" element="vim2:CreateFolderResponse" />
   </message>
   <message name="MoveIntoFolder_TaskRequestMsg">
      <part name="parameters" element="vim2:MoveIntoFolder_Task" />
   </message>
   <message name="MoveIntoFolder_TaskResponseMsg">
      <part name="parameters" element="vim2:MoveIntoFolder_TaskResponse" />
   </message>
   <message name="CreateVM_TaskRequestMsg">
      <part name="parameters" element="vim2:CreateVM_Task" />
   </message>
   <message name="CreateVM_TaskResponseMsg">
      <part name="parameters" element="vim2:CreateVM_TaskResponse" />
   </message>
   <message name="RegisterVM_TaskRequestMsg">
      <part name="parameters" element="vim2:RegisterVM_Task" />
   </message>
   <message name="RegisterVM_TaskResponseMsg">
      <part name="parameters" element="vim2:RegisterVM_TaskResponse" />
   </message>
   <message name="CreateClusterRequestMsg">
      <part name="parameters" element="vim2:CreateCluster" />
   </message>
   <message name="CreateClusterResponseMsg">
      <part name="parameters" element="vim2:CreateClusterResponse" />
   </message>
   <message name="AddStandaloneHost_TaskRequestMsg">
      <part name="parameters" element="vim2:AddStandaloneHost_Task" />
   </message>
   <message name="AddStandaloneHost_TaskResponseMsg">
      <part name="parameters" element="vim2:AddStandaloneHost_TaskResponse" />
   </message>
   <message name="CreateDatacenterRequestMsg">
      <part name="parameters" element="vim2:CreateDatacenter" />
   </message>
   <message name="CreateDatacenterResponseMsg">
      <part name="parameters" element="vim2:CreateDatacenterResponse" />
   </message>
   <message name="UnregisterAndDestroy_TaskRequestMsg">
      <part name="parameters" element="vim2:UnregisterAndDestroy_Task" />
   </message>
   <message name="UnregisterAndDestroy_TaskResponseMsg">
      <part name="parameters" element="vim2:UnregisterAndDestroy_TaskResponse" />
   </message>
   <message name="SetCollectorPageSizeRequestMsg">
      <part name="parameters" element="vim2:SetCollectorPageSize" />
   </message>
   <message name="SetCollectorPageSizeResponseMsg">
      <part name="parameters" element="vim2:SetCollectorPageSizeResponse" />
   </message>
   <message name="RewindCollectorRequestMsg">
      <part name="parameters" element="vim2:RewindCollector" />
   </message>
   <message name="RewindCollectorResponseMsg">
      <part name="parameters" element="vim2:RewindCollectorResponse" />
   </message>
   <message name="ResetCollectorRequestMsg">
      <part name="parameters" element="vim2:ResetCollector" />
   </message>
   <message name="ResetCollectorResponseMsg">
      <part name="parameters" element="vim2:ResetCollectorResponse" />
   </message>
   <message name="DestroyCollectorRequestMsg">
      <part name="parameters" element="vim2:DestroyCollector" />
   </message>
   <message name="DestroyCollectorResponseMsg">
      <part name="parameters" element="vim2:DestroyCollectorResponse" />
   </message>
   <message name="QueryHostConnectionInfoRequestMsg">
      <part name="parameters" element="vim2:QueryHostConnectionInfo" />
   </message>
   <message name="QueryHostConnectionInfoResponseMsg">
      <part name="parameters" element="vim2:QueryHostConnectionInfoResponse" />
   </message>
   <message name="UpdateSystemResourcesRequestMsg">
      <part name="parameters" element="vim2:UpdateSystemResources" />
   </message>
   <message name="UpdateSystemResourcesResponseMsg">
      <part name="parameters" element="vim2:UpdateSystemResourcesResponse" />
   </message>
   <message name="ReconnectHost_TaskRequestMsg">
      <part name="parameters" element="vim2:ReconnectHost_Task" />
   </message>
   <message name="ReconnectHost_TaskResponseMsg">
      <part name="parameters" element="vim2:ReconnectHost_TaskResponse" />
   </message>
   <message name="DisconnectHost_TaskRequestMsg">
      <part name="parameters" element="vim2:DisconnectHost_Task" />
   </message>
   <message name="DisconnectHost_TaskResponseMsg">
      <part name="parameters" element="vim2:DisconnectHost_TaskResponse" />
   </message>
   <message name="EnterMaintenanceMode_TaskRequestMsg">
      <part name="parameters" element="vim2:EnterMaintenanceMode_Task" />
   </message>
   <message name="EnterMaintenanceMode_TaskResponseMsg">
      <part name="parameters" element="vim2:EnterMaintenanceMode_TaskResponse" />
   </message>
   <message name="ExitMaintenanceMode_TaskRequestMsg">
      <part name="parameters" element="vim2:ExitMaintenanceMode_Task" />
   </message>
   <message name="ExitMaintenanceMode_TaskResponseMsg">
      <part name="parameters" element="vim2:ExitMaintenanceMode_TaskResponse" />
   </message>
   <message name="RebootHost_TaskRequestMsg">
      <part name="parameters" element="vim2:RebootHost_Task" />
   </message>
   <message name="RebootHost_TaskResponseMsg">
      <part name="parameters" element="vim2:RebootHost_TaskResponse" />
   </message>
   <message name="ShutdownHost_TaskRequestMsg">
      <part name="parameters" element="vim2:ShutdownHost_Task" />
   </message>
   <message name="ShutdownHost_TaskResponseMsg">
      <part name="parameters" element="vim2:ShutdownHost_TaskResponse" />
   </message>
   <message name="QueryMemoryOverheadRequestMsg">
      <part name="parameters" element="vim2:QueryMemoryOverhead" />
   </message>
   <message name="QueryMemoryOverheadResponseMsg">
      <part name="parameters" element="vim2:QueryMemoryOverheadResponse" />
   </message>
   <message name="ReconfigureHostForDAS_TaskRequestMsg">
      <part name="parameters" element="vim2:ReconfigureHostForDAS_Task" />
   </message>
   <message name="ReconfigureHostForDAS_TaskResponseMsg">
      <part name="parameters" element="vim2:ReconfigureHostForDAS_TaskResponse" />
   </message>
   <message name="QueryLicenseSourceAvailabilityRequestMsg">
      <part name="parameters" element="vim2:QueryLicenseSourceAvailability" />
   </message>
   <message name="QueryLicenseSourceAvailabilityResponseMsg">
      <part name="parameters" element="vim2:QueryLicenseSourceAvailabilityResponse" />
   </message>
   <message name="QueryLicenseUsageRequestMsg">
      <part name="parameters" element="vim2:QueryLicenseUsage" />
   </message>
   <message name="QueryLicenseUsageResponseMsg">
      <part name="parameters" element="vim2:QueryLicenseUsageResponse" />
   </message>
   <message name="SetLicenseEditionRequestMsg">
      <part name="parameters" element="vim2:SetLicenseEdition" />
   </message>
   <message name="SetLicenseEditionResponseMsg">
      <part name="parameters" element="vim2:SetLicenseEditionResponse" />
   </message>
   <message name="CheckLicenseFeatureRequestMsg">
      <part name="parameters" element="vim2:CheckLicenseFeature" />
   </message>
   <message name="CheckLicenseFeatureResponseMsg">
      <part name="parameters" element="vim2:CheckLicenseFeatureResponse" />
   </message>
   <message name="EnableFeatureRequestMsg">
      <part name="parameters" element="vim2:EnableFeature" />
   </message>
   <message name="EnableFeatureResponseMsg">
      <part name="parameters" element="vim2:EnableFeatureResponse" />
   </message>
   <message name="DisableFeatureRequestMsg">
      <part name="parameters" element="vim2:DisableFeature" />
   </message>
   <message name="DisableFeatureResponseMsg">
      <part name="parameters" element="vim2:DisableFeatureResponse" />
   </message>
   <message name="ConfigureLicenseSourceRequestMsg">
      <part name="parameters" element="vim2:ConfigureLicenseSource" />
   </message>
   <message name="ConfigureLicenseSourceResponseMsg">
      <part name="parameters" element="vim2:ConfigureLicenseSourceResponse" />
   </message>
   <message name="ReloadRequestMsg">
      <part name="parameters" element="vim2:Reload" />
   </message>
   <message name="ReloadResponseMsg">
      <part name="parameters" element="vim2:ReloadResponse" />
   </message>
   <message name="Rename_TaskRequestMsg">
      <part name="parameters" element="vim2:Rename_Task" />
   </message>
   <message name="Rename_TaskResponseMsg">
      <part name="parameters" element="vim2:Rename_TaskResponse" />
   </message>
   <message name="Destroy_TaskRequestMsg">
      <part name="parameters" element="vim2:Destroy_Task" />
   </message>
   <message name="Destroy_TaskResponseMsg">
      <part name="parameters" element="vim2:Destroy_TaskResponse" />
   </message>
   <message name="DestroyNetworkRequestMsg">
      <part name="parameters" element="vim2:DestroyNetwork" />
   </message>
   <message name="DestroyNetworkResponseMsg">
      <part name="parameters" element="vim2:DestroyNetworkResponse" />
   </message>
   <message name="QueryPerfProviderSummaryRequestMsg">
      <part name="parameters" element="vim2:QueryPerfProviderSummary" />
   </message>
   <message name="QueryPerfProviderSummaryResponseMsg">
      <part name="parameters" element="vim2:QueryPerfProviderSummaryResponse" />
   </message>
   <message name="QueryAvailablePerfMetricRequestMsg">
      <part name="parameters" element="vim2:QueryAvailablePerfMetric" />
   </message>
   <message name="QueryAvailablePerfMetricResponseMsg">
      <part name="parameters" element="vim2:QueryAvailablePerfMetricResponse" />
   </message>
   <message name="QueryPerfCounterRequestMsg">
      <part name="parameters" element="vim2:QueryPerfCounter" />
   </message>
   <message name="QueryPerfCounterResponseMsg">
      <part name="parameters" element="vim2:QueryPerfCounterResponse" />
   </message>
   <message name="QueryPerfRequestMsg">
      <part name="parameters" element="vim2:QueryPerf" />
   </message>
   <message name="QueryPerfResponseMsg">
      <part name="parameters" element="vim2:QueryPerfResponse" />
   </message>
   <message name="QueryPerfCompositeRequestMsg">
      <part name="parameters" element="vim2:QueryPerfComposite" />
   </message>
   <message name="QueryPerfCompositeResponseMsg">
      <part name="parameters" element="vim2:QueryPerfCompositeResponse" />
   </message>
   <message name="CreatePerfIntervalRequestMsg">
      <part name="parameters" element="vim2:CreatePerfInterval" />
   </message>
   <message name="CreatePerfIntervalResponseMsg">
      <part name="parameters" element="vim2:CreatePerfIntervalResponse" />
   </message>
   <message name="RemovePerfIntervalRequestMsg">
      <part name="parameters" element="vim2:RemovePerfInterval" />
   </message>
   <message name="RemovePerfIntervalResponseMsg">
      <part name="parameters" element="vim2:RemovePerfIntervalResponse" />
   </message>
   <message name="UpdatePerfIntervalRequestMsg">
      <part name="parameters" element="vim2:UpdatePerfInterval" />
   </message>
   <message name="UpdatePerfIntervalResponseMsg">
      <part name="parameters" element="vim2:UpdatePerfIntervalResponse" />
   </message>
   <message name="UpdateConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateConfig" />
   </message>
   <message name="UpdateConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateConfigResponse" />
   </message>
   <message name="MoveIntoResourcePoolRequestMsg">
      <part name="parameters" element="vim2:MoveIntoResourcePool" />
   </message>
   <message name="MoveIntoResourcePoolResponseMsg">
      <part name="parameters" element="vim2:MoveIntoResourcePoolResponse" />
   </message>
   <message name="UpdateChildResourceConfigurationRequestMsg">
      <part name="parameters" element="vim2:UpdateChildResourceConfiguration" />
   </message>
   <message name="UpdateChildResourceConfigurationResponseMsg">
      <part name="parameters" element="vim2:UpdateChildResourceConfigurationResponse" />
   </message>
   <message name="CreateResourcePoolRequestMsg">
      <part name="parameters" element="vim2:CreateResourcePool" />
   </message>
   <message name="CreateResourcePoolResponseMsg">
      <part name="parameters" element="vim2:CreateResourcePoolResponse" />
   </message>
   <message name="DestroyChildrenRequestMsg">
      <part name="parameters" element="vim2:DestroyChildren" />
   </message>
   <message name="DestroyChildrenResponseMsg">
      <part name="parameters" element="vim2:DestroyChildrenResponse" />
   </message>
   <message name="FindByUuidRequestMsg">
      <part name="parameters" element="vim2:FindByUuid" />
   </message>
   <message name="FindByUuidResponseMsg">
      <part name="parameters" element="vim2:FindByUuidResponse" />
   </message>
   <message name="FindByDatastorePathRequestMsg">
      <part name="parameters" element="vim2:FindByDatastorePath" />
   </message>
   <message name="FindByDatastorePathResponseMsg">
      <part name="parameters" element="vim2:FindByDatastorePathResponse" />
   </message>
   <message name="FindByDnsNameRequestMsg">
      <part name="parameters" element="vim2:FindByDnsName" />
   </message>
   <message name="FindByDnsNameResponseMsg">
      <part name="parameters" element="vim2:FindByDnsNameResponse" />
   </message>
   <message name="FindByIpRequestMsg">
      <part name="parameters" element="vim2:FindByIp" />
   </message>
   <message name="FindByIpResponseMsg">
      <part name="parameters" element="vim2:FindByIpResponse" />
   </message>
   <message name="FindByInventoryPathRequestMsg">
      <part name="parameters" element="vim2:FindByInventoryPath" />
   </message>
   <message name="FindByInventoryPathResponseMsg">
      <part name="parameters" element="vim2:FindByInventoryPathResponse" />
   </message>
   <message name="FindChildRequestMsg">
      <part name="parameters" element="vim2:FindChild" />
   </message>
   <message name="FindChildResponseMsg">
      <part name="parameters" element="vim2:FindChildResponse" />
   </message>
   <message name="CurrentTimeRequestMsg">
      <part name="parameters" element="vim2:CurrentTime" />
   </message>
   <message name="CurrentTimeResponseMsg">
      <part name="parameters" element="vim2:CurrentTimeResponse" />
   </message>
   <message name="RetrieveServiceContentRequestMsg">
      <part name="parameters" element="vim2:RetrieveServiceContent" />
   </message>
   <message name="RetrieveServiceContentResponseMsg">
      <part name="parameters" element="vim2:RetrieveServiceContentResponse" />
   </message>
   <message name="ValidateMigrationRequestMsg">
      <part name="parameters" element="vim2:ValidateMigration" />
   </message>
   <message name="ValidateMigrationResponseMsg">
      <part name="parameters" element="vim2:ValidateMigrationResponse" />
   </message>
   <message name="QueryVMotionCompatibilityRequestMsg">
      <part name="parameters" element="vim2:QueryVMotionCompatibility" />
   </message>
   <message name="QueryVMotionCompatibilityResponseMsg">
      <part name="parameters" element="vim2:QueryVMotionCompatibilityResponse" />
   </message>
   <message name="UpdateServiceMessageRequestMsg">
      <part name="parameters" element="vim2:UpdateServiceMessage" />
   </message>
   <message name="UpdateServiceMessageResponseMsg">
      <part name="parameters" element="vim2:UpdateServiceMessageResponse" />
   </message>
   <message name="LoginRequestMsg">
      <part name="parameters" element="vim2:Login" />
   </message>
   <message name="LoginResponseMsg">
      <part name="parameters" element="vim2:LoginResponse" />
   </message>
   <message name="LogoutRequestMsg">
      <part name="parameters" element="vim2:Logout" />
   </message>
   <message name="LogoutResponseMsg">
      <part name="parameters" element="vim2:LogoutResponse" />
   </message>
   <message name="AcquireLocalTicketRequestMsg">
      <part name="parameters" element="vim2:AcquireLocalTicket" />
   </message>
   <message name="AcquireLocalTicketResponseMsg">
      <part name="parameters" element="vim2:AcquireLocalTicketResponse" />
   </message>
   <message name="TerminateSessionRequestMsg">
      <part name="parameters" element="vim2:TerminateSession" />
   </message>
   <message name="TerminateSessionResponseMsg">
      <part name="parameters" element="vim2:TerminateSessionResponse" />
   </message>
   <message name="SetLocaleRequestMsg">
      <part name="parameters" element="vim2:SetLocale" />
   </message>
   <message name="SetLocaleResponseMsg">
      <part name="parameters" element="vim2:SetLocaleResponse" />
   </message>
   <message name="CancelTaskRequestMsg">
      <part name="parameters" element="vim2:CancelTask" />
   </message>
   <message name="CancelTaskResponseMsg">
      <part name="parameters" element="vim2:CancelTaskResponse" />
   </message>
   <message name="ReadNextTasksRequestMsg">
      <part name="parameters" element="vim2:ReadNextTasks" />
   </message>
   <message name="ReadNextTasksResponseMsg">
      <part name="parameters" element="vim2:ReadNextTasksResponse" />
   </message>
   <message name="ReadPreviousTasksRequestMsg">
      <part name="parameters" element="vim2:ReadPreviousTasks" />
   </message>
   <message name="ReadPreviousTasksResponseMsg">
      <part name="parameters" element="vim2:ReadPreviousTasksResponse" />
   </message>
   <message name="CreateCollectorForTasksRequestMsg">
      <part name="parameters" element="vim2:CreateCollectorForTasks" />
   </message>
   <message name="CreateCollectorForTasksResponseMsg">
      <part name="parameters" element="vim2:CreateCollectorForTasksResponse" />
   </message>
   <message name="RetrieveUserGroupsRequestMsg">
      <part name="parameters" element="vim2:RetrieveUserGroups" />
   </message>
   <message name="RetrieveUserGroupsResponseMsg">
      <part name="parameters" element="vim2:RetrieveUserGroupsResponse" />
   </message>
   <message name="CreateSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim2:CreateSnapshot_Task" />
   </message>
   <message name="CreateSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim2:CreateSnapshot_TaskResponse" />
   </message>
   <message name="RevertToCurrentSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim2:RevertToCurrentSnapshot_Task" />
   </message>
   <message name="RevertToCurrentSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim2:RevertToCurrentSnapshot_TaskResponse" />
   </message>
   <message name="RemoveAllSnapshots_TaskRequestMsg">
      <part name="parameters" element="vim2:RemoveAllSnapshots_Task" />
   </message>
   <message name="RemoveAllSnapshots_TaskResponseMsg">
      <part name="parameters" element="vim2:RemoveAllSnapshots_TaskResponse" />
   </message>
   <message name="ReconfigVM_TaskRequestMsg">
      <part name="parameters" element="vim2:ReconfigVM_Task" />
   </message>
   <message name="ReconfigVM_TaskResponseMsg">
      <part name="parameters" element="vim2:ReconfigVM_TaskResponse" />
   </message>
   <message name="UpgradeVM_TaskRequestMsg">
      <part name="parameters" element="vim2:UpgradeVM_Task" />
   </message>
   <message name="UpgradeVM_TaskResponseMsg">
      <part name="parameters" element="vim2:UpgradeVM_TaskResponse" />
   </message>
   <message name="PowerOnVM_TaskRequestMsg">
      <part name="parameters" element="vim2:PowerOnVM_Task" />
   </message>
   <message name="PowerOnVM_TaskResponseMsg">
      <part name="parameters" element="vim2:PowerOnVM_TaskResponse" />
   </message>
   <message name="PowerOffVM_TaskRequestMsg">
      <part name="parameters" element="vim2:PowerOffVM_Task" />
   </message>
   <message name="PowerOffVM_TaskResponseMsg">
      <part name="parameters" element="vim2:PowerOffVM_TaskResponse" />
   </message>
   <message name="SuspendVM_TaskRequestMsg">
      <part name="parameters" element="vim2:SuspendVM_Task" />
   </message>
   <message name="SuspendVM_TaskResponseMsg">
      <part name="parameters" element="vim2:SuspendVM_TaskResponse" />
   </message>
   <message name="ResetVM_TaskRequestMsg">
      <part name="parameters" element="vim2:ResetVM_Task" />
   </message>
   <message name="ResetVM_TaskResponseMsg">
      <part name="parameters" element="vim2:ResetVM_TaskResponse" />
   </message>
   <message name="ShutdownGuestRequestMsg">
      <part name="parameters" element="vim2:ShutdownGuest" />
   </message>
   <message name="ShutdownGuestResponseMsg">
      <part name="parameters" element="vim2:ShutdownGuestResponse" />
   </message>
   <message name="RebootGuestRequestMsg">
      <part name="parameters" element="vim2:RebootGuest" />
   </message>
   <message name="RebootGuestResponseMsg">
      <part name="parameters" element="vim2:RebootGuestResponse" />
   </message>
   <message name="StandbyGuestRequestMsg">
      <part name="parameters" element="vim2:StandbyGuest" />
   </message>
   <message name="StandbyGuestResponseMsg">
      <part name="parameters" element="vim2:StandbyGuestResponse" />
   </message>
   <message name="AnswerVMRequestMsg">
      <part name="parameters" element="vim2:AnswerVM" />
   </message>
   <message name="AnswerVMResponseMsg">
      <part name="parameters" element="vim2:AnswerVMResponse" />
   </message>
   <message name="CustomizeVM_TaskRequestMsg">
      <part name="parameters" element="vim2:CustomizeVM_Task" />
   </message>
   <message name="CustomizeVM_TaskResponseMsg">
      <part name="parameters" element="vim2:CustomizeVM_TaskResponse" />
   </message>
   <message name="CheckCustomizationSpecRequestMsg">
      <part name="parameters" element="vim2:CheckCustomizationSpec" />
   </message>
   <message name="CheckCustomizationSpecResponseMsg">
      <part name="parameters" element="vim2:CheckCustomizationSpecResponse" />
   </message>
   <message name="MigrateVM_TaskRequestMsg">
      <part name="parameters" element="vim2:MigrateVM_Task" />
   </message>
   <message name="MigrateVM_TaskResponseMsg">
      <part name="parameters" element="vim2:MigrateVM_TaskResponse" />
   </message>
   <message name="RelocateVM_TaskRequestMsg">
      <part name="parameters" element="vim2:RelocateVM_Task" />
   </message>
   <message name="RelocateVM_TaskResponseMsg">
      <part name="parameters" element="vim2:RelocateVM_TaskResponse" />
   </message>
   <message name="CloneVM_TaskRequestMsg">
      <part name="parameters" element="vim2:CloneVM_Task" />
   </message>
   <message name="CloneVM_TaskResponseMsg">
      <part name="parameters" element="vim2:CloneVM_TaskResponse" />
   </message>
   <message name="MarkAsTemplateRequestMsg">
      <part name="parameters" element="vim2:MarkAsTemplate" />
   </message>
   <message name="MarkAsTemplateResponseMsg">
      <part name="parameters" element="vim2:MarkAsTemplateResponse" />
   </message>
   <message name="MarkAsVirtualMachineRequestMsg">
      <part name="parameters" element="vim2:MarkAsVirtualMachine" />
   </message>
   <message name="MarkAsVirtualMachineResponseMsg">
      <part name="parameters" element="vim2:MarkAsVirtualMachineResponse" />
   </message>
   <message name="UnregisterVMRequestMsg">
      <part name="parameters" element="vim2:UnregisterVM" />
   </message>
   <message name="UnregisterVMResponseMsg">
      <part name="parameters" element="vim2:UnregisterVMResponse" />
   </message>
   <message name="ResetGuestInformationRequestMsg">
      <part name="parameters" element="vim2:ResetGuestInformation" />
   </message>
   <message name="ResetGuestInformationResponseMsg">
      <part name="parameters" element="vim2:ResetGuestInformationResponse" />
   </message>
   <message name="MountToolsInstallerRequestMsg">
      <part name="parameters" element="vim2:MountToolsInstaller" />
   </message>
   <message name="MountToolsInstallerResponseMsg">
      <part name="parameters" element="vim2:MountToolsInstallerResponse" />
   </message>
   <message name="UnmountToolsInstallerRequestMsg">
      <part name="parameters" element="vim2:UnmountToolsInstaller" />
   </message>
   <message name="UnmountToolsInstallerResponseMsg">
      <part name="parameters" element="vim2:UnmountToolsInstallerResponse" />
   </message>
   <message name="UpgradeTools_TaskRequestMsg">
      <part name="parameters" element="vim2:UpgradeTools_Task" />
   </message>
   <message name="UpgradeTools_TaskResponseMsg">
      <part name="parameters" element="vim2:UpgradeTools_TaskResponse" />
   </message>
   <message name="AcquireMksTicketRequestMsg">
      <part name="parameters" element="vim2:AcquireMksTicket" />
   </message>
   <message name="AcquireMksTicketResponseMsg">
      <part name="parameters" element="vim2:AcquireMksTicketResponse" />
   </message>
   <message name="SetScreenResolutionRequestMsg">
      <part name="parameters" element="vim2:SetScreenResolution" />
   </message>
   <message name="SetScreenResolutionResponseMsg">
      <part name="parameters" element="vim2:SetScreenResolutionResponse" />
   </message>
   <message name="RemoveAlarmRequestMsg">
      <part name="parameters" element="vim2:RemoveAlarm" />
   </message>
   <message name="RemoveAlarmResponseMsg">
      <part name="parameters" element="vim2:RemoveAlarmResponse" />
   </message>
   <message name="ReconfigureAlarmRequestMsg">
      <part name="parameters" element="vim2:ReconfigureAlarm" />
   </message>
   <message name="ReconfigureAlarmResponseMsg">
      <part name="parameters" element="vim2:ReconfigureAlarmResponse" />
   </message>
   <message name="CreateAlarmRequestMsg">
      <part name="parameters" element="vim2:CreateAlarm" />
   </message>
   <message name="CreateAlarmResponseMsg">
      <part name="parameters" element="vim2:CreateAlarmResponse" />
   </message>
   <message name="GetAlarmRequestMsg">
      <part name="parameters" element="vim2:GetAlarm" />
   </message>
   <message name="GetAlarmResponseMsg">
      <part name="parameters" element="vim2:GetAlarmResponse" />
   </message>
   <message name="GetAlarmStateRequestMsg">
      <part name="parameters" element="vim2:GetAlarmState" />
   </message>
   <message name="GetAlarmStateResponseMsg">
      <part name="parameters" element="vim2:GetAlarmStateResponse" />
   </message>
   <message name="ReadNextEventsRequestMsg">
      <part name="parameters" element="vim2:ReadNextEvents" />
   </message>
   <message name="ReadNextEventsResponseMsg">
      <part name="parameters" element="vim2:ReadNextEventsResponse" />
   </message>
   <message name="ReadPreviousEventsRequestMsg">
      <part name="parameters" element="vim2:ReadPreviousEvents" />
   </message>
   <message name="ReadPreviousEventsResponseMsg">
      <part name="parameters" element="vim2:ReadPreviousEventsResponse" />
   </message>
   <message name="CreateCollectorForEventsRequestMsg">
      <part name="parameters" element="vim2:CreateCollectorForEvents" />
   </message>
   <message name="CreateCollectorForEventsResponseMsg">
      <part name="parameters" element="vim2:CreateCollectorForEventsResponse" />
   </message>
   <message name="LogUserEventRequestMsg">
      <part name="parameters" element="vim2:LogUserEvent" />
   </message>
   <message name="LogUserEventResponseMsg">
      <part name="parameters" element="vim2:LogUserEventResponse" />
   </message>
   <message name="QueryEventsRequestMsg">
      <part name="parameters" element="vim2:QueryEvents" />
   </message>
   <message name="QueryEventsResponseMsg">
      <part name="parameters" element="vim2:QueryEventsResponse" />
   </message>
   <message name="AffinityConfiguredFaultMsg">
      <part name="fault" element="vim2:AffinityConfiguredFault" />
   </message>
   <message name="AgentInstallFailedFaultMsg">
      <part name="fault" element="vim2:AgentInstallFailedFault" />
   </message>
   <message name="AlreadyBeingManagedFaultMsg">
      <part name="fault" element="vim2:AlreadyBeingManagedFault" />
   </message>
   <message name="AlreadyConnectedFaultMsg">
      <part name="fault" element="vim2:AlreadyConnectedFault" />
   </message>
   <message name="AlreadyExistsFaultMsg">
      <part name="fault" element="vim2:AlreadyExistsFault" />
   </message>
   <message name="AlreadyUpgradedFaultMsg">
      <part name="fault" element="vim2:AlreadyUpgradedFault" />
   </message>
   <message name="ApplicationQuiesceFaultFaultMsg">
      <part name="fault" element="vim2:ApplicationQuiesceFaultFault" />
   </message>
   <message name="AuthMinimumAdminPermissionFaultMsg">
      <part name="fault" element="vim2:AuthMinimumAdminPermissionFault" />
   </message>
   <message name="CannotAccessFileFaultMsg">
      <part name="fault" element="vim2:CannotAccessFileFault" />
   </message>
   <message name="CannotAccessLocalSourceFaultMsg">
      <part name="fault" element="vim2:CannotAccessLocalSourceFault" />
   </message>
   <message name="CannotAccessNetworkFaultMsg">
      <part name="fault" element="vim2:CannotAccessNetworkFault" />
   </message>
   <message name="CannotAccessVmComponentFaultMsg">
      <part name="fault" element="vim2:CannotAccessVmComponentFault" />
   </message>
   <message name="CannotAccessVmConfigFaultMsg">
      <part name="fault" element="vim2:CannotAccessVmConfigFault" />
   </message>
   <message name="CannotAccessVmDeviceFaultMsg">
      <part name="fault" element="vim2:CannotAccessVmDeviceFault" />
   </message>
   <message name="CannotAccessVmDiskFaultMsg">
      <part name="fault" element="vim2:CannotAccessVmDiskFault" />
   </message>
   <message name="CannotDecryptPasswordsFaultMsg">
      <part name="fault" element="vim2:CannotDecryptPasswordsFault" />
   </message>
   <message name="CannotDeleteFileFaultMsg">
      <part name="fault" element="vim2:CannotDeleteFileFault" />
   </message>
   <message name="CannotModifyConfigCpuRequirementsFaultMsg">
      <part name="fault" element="vim2:CannotModifyConfigCpuRequirementsFault" />
   </message>
   <message name="ConcurrentAccessFaultMsg">
      <part name="fault" element="vim2:ConcurrentAccessFault" />
   </message>
   <message name="CpuCompatibilityUnknownFaultMsg">
      <part name="fault" element="vim2:CpuCompatibilityUnknownFault" />
   </message>
   <message name="CpuIncompatibleFaultMsg">
      <part name="fault" element="vim2:CpuIncompatibleFault" />
   </message>
   <message name="CustomizationFaultFaultMsg">
      <part name="fault" element="vim2:CustomizationFaultFault" />
   </message>
   <message name="DasConfigFaultFaultMsg">
      <part name="fault" element="vim2:DasConfigFaultFault" />
   </message>
   <message name="DatabaseErrorFaultMsg">
      <part name="fault" element="vim2:DatabaseErrorFault" />
   </message>
   <message name="DatacenterMismatchFaultMsg">
      <part name="fault" element="vim2:DatacenterMismatchFault" />
   </message>
   <message name="DatastoreNotWritableOnHostFaultMsg">
      <part name="fault" element="vim2:DatastoreNotWritableOnHostFault" />
   </message>
   <message name="DestinationSwitchFullFaultMsg">
      <part name="fault" element="vim2:DestinationSwitchFullFault" />
   </message>
   <message name="DeviceNotFoundFaultMsg">
      <part name="fault" element="vim2:DeviceNotFoundFault" />
   </message>
   <message name="DeviceNotSupportedFaultMsg">
      <part name="fault" element="vim2:DeviceNotSupportedFault" />
   </message>
   <message name="DisallowedDiskModeChangeFaultMsg">
      <part name="fault" element="vim2:DisallowedDiskModeChangeFault" />
   </message>
   <message name="DisallowedMigrationDeviceAttachedFaultMsg">
      <part name="fault" element="vim2:DisallowedMigrationDeviceAttachedFault" />
   </message>
   <message name="DiskNotSupportedFaultMsg">
      <part name="fault" element="vim2:DiskNotSupportedFault" />
   </message>
   <message name="DuplicateNameFaultMsg">
      <part name="fault" element="vim2:DuplicateNameFault" />
   </message>
   <message name="FileAlreadyExistsFaultMsg">
      <part name="fault" element="vim2:FileAlreadyExistsFault" />
   </message>
   <message name="FileFaultFaultMsg">
      <part name="fault" element="vim2:FileFaultFault" />
   </message>
   <message name="FileLockedFaultMsg">
      <part name="fault" element="vim2:FileLockedFault" />
   </message>
   <message name="FileNotFoundFaultMsg">
      <part name="fault" element="vim2:FileNotFoundFault" />
   </message>
   <message name="FileNotWritableFaultMsg">
      <part name="fault" element="vim2:FileNotWritableFault" />
   </message>
   <message name="FilesystemQuiesceFaultFaultMsg">
      <part name="fault" element="vim2:FilesystemQuiesceFaultFault" />
   </message>
   <message name="GenericVmConfigFaultFaultMsg">
      <part name="fault" element="vim2:GenericVmConfigFaultFault" />
   </message>
   <message name="HostConfigFaultFaultMsg">
      <part name="fault" element="vim2:HostConfigFaultFault" />
   </message>
   <message name="HostConnectFaultFaultMsg">
      <part name="fault" element="vim2:HostConnectFaultFault" />
   </message>
   <message name="IDEDiskNotSupportedFaultMsg">
      <part name="fault" element="vim2:IDEDiskNotSupportedFault" />
   </message>
   <message name="InaccessibleDatastoreFaultMsg">
      <part name="fault" element="vim2:InaccessibleDatastoreFault" />
   </message>
   <message name="IncompatibleSettingFaultMsg">
      <part name="fault" element="vim2:IncompatibleSettingFault" />
   </message>
   <message name="IncorrectFileTypeFaultMsg">
      <part name="fault" element="vim2:IncorrectFileTypeFault" />
   </message>
   <message name="InsufficientCpuResourcesFaultFaultMsg">
      <part name="fault" element="vim2:InsufficientCpuResourcesFaultFault" />
   </message>
   <message name="InsufficientFailoverResourcesFaultFaultMsg">
      <part name="fault" element="vim2:InsufficientFailoverResourcesFaultFault" />
   </message>
   <message name="InsufficientHostCapacityFaultFaultMsg">
      <part name="fault" element="vim2:InsufficientHostCapacityFaultFault" />
   </message>
   <message name="InsufficientMemoryResourcesFaultFaultMsg">
      <part name="fault" element="vim2:InsufficientMemoryResourcesFaultFault" />
   </message>
   <message name="InsufficientResourcesFaultFaultMsg">
      <part name="fault" element="vim2:InsufficientResourcesFaultFault" />
   </message>
   <message name="InvalidControllerFaultMsg">
      <part name="fault" element="vim2:InvalidControllerFault" />
   </message>
   <message name="InvalidDatastoreFaultMsg">
      <part name="fault" element="vim2:InvalidDatastoreFault" />
   </message>
   <message name="InvalidDatastorePathFaultMsg">
      <part name="fault" element="vim2:InvalidDatastorePathFault" />
   </message>
   <message name="InvalidDeviceBackingFaultMsg">
      <part name="fault" element="vim2:InvalidDeviceBackingFault" />
   </message>
   <message name="InvalidDeviceOperationFaultMsg">
      <part name="fault" element="vim2:InvalidDeviceOperationFault" />
   </message>
   <message name="InvalidDeviceSpecFaultMsg">
      <part name="fault" element="vim2:InvalidDeviceSpecFault" />
   </message>
   <message name="InvalidDiskFormatFaultMsg">
      <part name="fault" element="vim2:InvalidDiskFormatFault" />
   </message>
   <message name="InvalidFolderFaultMsg">
      <part name="fault" element="vim2:InvalidFolderFault" />
   </message>
   <message name="InvalidFormatFaultMsg">
      <part name="fault" element="vim2:InvalidFormatFault" />
   </message>
   <message name="InvalidLicenseFaultMsg">
      <part name="fault" element="vim2:InvalidLicenseFault" />
   </message>
   <message name="InvalidLocaleFaultMsg">
      <part name="fault" element="vim2:InvalidLocaleFault" />
   </message>
   <message name="InvalidLoginFaultMsg">
      <part name="fault" element="vim2:InvalidLoginFault" />
   </message>
   <message name="InvalidNameFaultMsg">
      <part name="fault" element="vim2:InvalidNameFault" />
   </message>
   <message name="InvalidPowerStateFaultMsg">
      <part name="fault" element="vim2:InvalidPowerStateFault" />
   </message>
   <message name="InvalidResourcePoolStructureFaultFaultMsg">
      <part name="fault" element="vim2:InvalidResourcePoolStructureFaultFault" />
   </message>
   <message name="InvalidSnapshotFormatFaultMsg">
      <part name="fault" element="vim2:InvalidSnapshotFormatFault" />
   </message>
   <message name="InvalidStateFaultMsg">
      <part name="fault" element="vim2:InvalidStateFault" />
   </message>
   <message name="InvalidVmConfigFaultMsg">
      <part name="fault" element="vim2:InvalidVmConfigFault" />
   </message>
   <message name="IpHostnameGeneratorErrorFaultMsg">
      <part name="fault" element="vim2:IpHostnameGeneratorErrorFault" />
   </message>
   <message name="LegacyNetworkInterfaceInUseFaultMsg">
      <part name="fault" element="vim2:LegacyNetworkInterfaceInUseFault" />
   </message>
   <message name="LicenseServerUnavailableFaultMsg">
      <part name="fault" element="vim2:LicenseServerUnavailableFault" />
   </message>
   <message name="LinuxVolumeNotCleanFaultMsg">
      <part name="fault" element="vim2:LinuxVolumeNotCleanFault" />
   </message>
   <message name="LogBundlingFailedFaultMsg">
      <part name="fault" element="vim2:LogBundlingFailedFault" />
   </message>
   <message name="MemorySnapshotOnIndependentDiskFaultMsg">
      <part name="fault" element="vim2:MemorySnapshotOnIndependentDiskFault" />
   </message>
   <message name="MigrationFaultFaultMsg">
      <part name="fault" element="vim2:MigrationFaultFault" />
   </message>
   <message name="MismatchedNetworkPoliciesFaultMsg">
      <part name="fault" element="vim2:MismatchedNetworkPoliciesFault" />
   </message>
   <message name="MismatchedVMotionNetworkNamesFaultMsg">
      <part name="fault" element="vim2:MismatchedVMotionNetworkNamesFault" />
   </message>
   <message name="MissingControllerFaultMsg">
      <part name="fault" element="vim2:MissingControllerFault" />
   </message>
   <message name="MissingLinuxCustResourcesFaultMsg">
      <part name="fault" element="vim2:MissingLinuxCustResourcesFault" />
   </message>
   <message name="MissingWindowsCustResourcesFaultMsg">
      <part name="fault" element="vim2:MissingWindowsCustResourcesFault" />
   </message>
   <message name="MountErrorFaultMsg">
      <part name="fault" element="vim2:MountErrorFault" />
   </message>
   <message name="MultipleSnapshotsNotSupportedFaultMsg">
      <part name="fault" element="vim2:MultipleSnapshotsNotSupportedFault" />
   </message>
   <message name="NetworkCopyFaultFaultMsg">
      <part name="fault" element="vim2:NetworkCopyFaultFault" />
   </message>
   <message name="NoActiveHostInClusterFaultMsg">
      <part name="fault" element="vim2:NoActiveHostInClusterFault" />
   </message>
   <message name="NoDiskFoundFaultMsg">
      <part name="fault" element="vim2:NoDiskFoundFault" />
   </message>
   <message name="NoDiskSpaceFaultMsg">
      <part name="fault" element="vim2:NoDiskSpaceFault" />
   </message>
   <message name="NoDisksToCustomizeFaultMsg">
      <part name="fault" element="vim2:NoDisksToCustomizeFault" />
   </message>
   <message name="NoGatewayFaultMsg">
      <part name="fault" element="vim2:NoGatewayFault" />
   </message>
   <message name="NoGuestHeartbeatFaultMsg">
      <part name="fault" element="vim2:NoGuestHeartbeatFault" />
   </message>
   <message name="NoHostFaultMsg">
      <part name="fault" element="vim2:NoHostFault" />
   </message>
   <message name="NoPermissionFaultMsg">
      <part name="fault" element="vim2:NoPermissionFault" />
   </message>
   <message name="NoPermissionOnHostFaultMsg">
      <part name="fault" element="vim2:NoPermissionOnHostFault" />
   </message>
   <message name="NoVirtualNicFaultMsg">
      <part name="fault" element="vim2:NoVirtualNicFault" />
   </message>
   <message name="NotEnoughCpusFaultMsg">
      <part name="fault" element="vim2:NotEnoughCpusFault" />
   </message>
   <message name="NotEnoughLogicalCpusFaultMsg">
      <part name="fault" element="vim2:NotEnoughLogicalCpusFault" />
   </message>
   <message name="NotFoundFaultMsg">
      <part name="fault" element="vim2:NotFoundFault" />
   </message>
   <message name="NotSupportedHostFaultMsg">
      <part name="fault" element="vim2:NotSupportedHostFault" />
   </message>
   <message name="NumVirtualCpusNotSupportedFaultMsg">
      <part name="fault" element="vim2:NumVirtualCpusNotSupportedFault" />
   </message>
   <message name="OutOfBoundsFaultMsg">
      <part name="fault" element="vim2:OutOfBoundsFault" />
   </message>
   <message name="PhysCompatRDMNotSupportedFaultMsg">
      <part name="fault" element="vim2:PhysCompatRDMNotSupportedFault" />
   </message>
   <message name="PlatformConfigFaultFaultMsg">
      <part name="fault" element="vim2:PlatformConfigFaultFault" />
   </message>
   <message name="RDMNotPreservedFaultMsg">
      <part name="fault" element="vim2:RDMNotPreservedFault" />
   </message>
   <message name="RDMNotSupportedFaultMsg">
      <part name="fault" element="vim2:RDMNotSupportedFault" />
   </message>
   <message name="RDMPointsToInaccessibleDiskFaultMsg">
      <part name="fault" element="vim2:RDMPointsToInaccessibleDiskFault" />
   </message>
   <message name="RawDiskNotSupportedFaultMsg">
      <part name="fault" element="vim2:RawDiskNotSupportedFault" />
   </message>
   <message name="ReadOnlyDisksWithLegacyDestinationFaultMsg">
      <part name="fault" element="vim2:ReadOnlyDisksWithLegacyDestinationFault" />
   </message>
   <message name="RemoteDeviceNotSupportedFaultMsg">
      <part name="fault" element="vim2:RemoteDeviceNotSupportedFault" />
   </message>
   <message name="RemoveFailedFaultMsg">
      <part name="fault" element="vim2:RemoveFailedFault" />
   </message>
   <message name="ResourceInUseFaultMsg">
      <part name="fault" element="vim2:ResourceInUseFault" />
   </message>
   <message name="RuleViolationFaultMsg">
      <part name="fault" element="vim2:RuleViolationFault" />
   </message>
   <message name="SharedBusControllerNotSupportedFaultMsg">
      <part name="fault" element="vim2:SharedBusControllerNotSupportedFault" />
   </message>
   <message name="SnapshotCopyNotSupportedFaultMsg">
      <part name="fault" element="vim2:SnapshotCopyNotSupportedFault" />
   </message>
   <message name="SnapshotFaultFaultMsg">
      <part name="fault" element="vim2:SnapshotFaultFault" />
   </message>
   <message name="SnapshotIncompatibleDeviceInVmFaultMsg">
      <part name="fault" element="vim2:SnapshotIncompatibleDeviceInVmFault" />
   </message>
   <message name="SnapshotRevertIssueFaultMsg">
      <part name="fault" element="vim2:SnapshotRevertIssueFault" />
   </message>
   <message name="SuspendedRelocateNotSupportedFaultMsg">
      <part name="fault" element="vim2:SuspendedRelocateNotSupportedFault" />
   </message>
   <message name="TaskInProgressFaultMsg">
      <part name="fault" element="vim2:TaskInProgressFault" />
   </message>
   <message name="TimedoutFaultMsg">
      <part name="fault" element="vim2:TimedoutFault" />
   </message>
   <message name="TooManyDevicesFaultMsg">
      <part name="fault" element="vim2:TooManyDevicesFault" />
   </message>
   <message name="TooManyHostsFaultMsg">
      <part name="fault" element="vim2:TooManyHostsFault" />
   </message>
   <message name="TooManySnapshotLevelsFaultMsg">
      <part name="fault" element="vim2:TooManySnapshotLevelsFault" />
   </message>
   <message name="ToolsUnavailableFaultMsg">
      <part name="fault" element="vim2:ToolsUnavailableFault" />
   </message>
   <message name="UncommittedUndoableDiskFaultMsg">
      <part name="fault" element="vim2:UncommittedUndoableDiskFault" />
   </message>
   <message name="UncustomizableGuestFaultMsg">
      <part name="fault" element="vim2:UncustomizableGuestFault" />
   </message>
   <message name="UnexpectedCustomizationFaultFaultMsg">
      <part name="fault" element="vim2:UnexpectedCustomizationFaultFault" />
   </message>
   <message name="UnsupportedDatastoreFaultMsg">
      <part name="fault" element="vim2:UnsupportedDatastoreFault" />
   </message>
   <message name="UnsupportedGuestFaultMsg">
      <part name="fault" element="vim2:UnsupportedGuestFault" />
   </message>
   <message name="UnsupportedVmxLocationFaultMsg">
      <part name="fault" element="vim2:UnsupportedVmxLocationFault" />
   </message>
   <message name="UserNotFoundFaultMsg">
      <part name="fault" element="vim2:UserNotFoundFault" />
   </message>
   <message name="VMOnVirtualIntranetFaultMsg">
      <part name="fault" element="vim2:VMOnVirtualIntranetFault" />
   </message>
   <message name="VMotionInterfaceIssueFaultMsg">
      <part name="fault" element="vim2:VMotionInterfaceIssueFault" />
   </message>
   <message name="VMotionLinkCapacityLowFaultMsg">
      <part name="fault" element="vim2:VMotionLinkCapacityLowFault" />
   </message>
   <message name="VMotionLinkDownFaultMsg">
      <part name="fault" element="vim2:VMotionLinkDownFault" />
   </message>
   <message name="VMotionNotConfiguredFaultMsg">
      <part name="fault" element="vim2:VMotionNotConfiguredFault" />
   </message>
   <message name="VMotionNotLicensedFaultMsg">
      <part name="fault" element="vim2:VMotionNotLicensedFault" />
   </message>
   <message name="VMotionNotSupportedFaultMsg">
      <part name="fault" element="vim2:VMotionNotSupportedFault" />
   </message>
   <message name="VMotionProtocolIncompatibleFaultMsg">
      <part name="fault" element="vim2:VMotionProtocolIncompatibleFault" />
   </message>
   <message name="VimFaultFaultMsg">
      <part name="fault" element="vim2:VimFaultFault" />
   </message>
   <message name="VirtualHardwareCompatibilityIssueFaultMsg">
      <part name="fault" element="vim2:VirtualHardwareCompatibilityIssueFault" />
   </message>
   <message name="VirtualHardwareVersionNotSupportedFaultMsg">
      <part name="fault" element="vim2:VirtualHardwareVersionNotSupportedFault" />
   </message>
   <message name="VmConfigFaultFaultMsg">
      <part name="fault" element="vim2:VmConfigFaultFault" />
   </message>
   <message name="VmLimitLicenseFaultMsg">
      <part name="fault" element="vim2:VmLimitLicenseFault" />
   </message>
   <message name="VmToolsUpgradeFaultFaultMsg">
      <part name="fault" element="vim2:VmToolsUpgradeFaultFault" />
   </message>
   <message name="VolumeEditorErrorFaultMsg">
      <part name="fault" element="vim2:VolumeEditorErrorFault" />
   </message>
   <message name="WillModifyConfigCpuRequirementsFaultMsg">
      <part name="fault" element="vim2:WillModifyConfigCpuRequirementsFault" />
   </message>
   <message name="ReconfigureAutostartRequestMsg">
      <part name="parameters" element="vim2:ReconfigureAutostart" />
   </message>
   <message name="ReconfigureAutostartResponseMsg">
      <part name="parameters" element="vim2:ReconfigureAutostartResponse" />
   </message>
   <message name="AutoStartPowerOnRequestMsg">
      <part name="parameters" element="vim2:AutoStartPowerOn" />
   </message>
   <message name="AutoStartPowerOnResponseMsg">
      <part name="parameters" element="vim2:AutoStartPowerOnResponse" />
   </message>
   <message name="AutoStartPowerOffRequestMsg">
      <part name="parameters" element="vim2:AutoStartPowerOff" />
   </message>
   <message name="AutoStartPowerOffResponseMsg">
      <part name="parameters" element="vim2:AutoStartPowerOffResponse" />
   </message>
   <message name="EnableHyperThreadingRequestMsg">
      <part name="parameters" element="vim2:EnableHyperThreading" />
   </message>
   <message name="EnableHyperThreadingResponseMsg">
      <part name="parameters" element="vim2:EnableHyperThreadingResponse" />
   </message>
   <message name="DisableHyperThreadingRequestMsg">
      <part name="parameters" element="vim2:DisableHyperThreading" />
   </message>
   <message name="DisableHyperThreadingResponseMsg">
      <part name="parameters" element="vim2:DisableHyperThreadingResponse" />
   </message>
   <message name="SearchDatastore_TaskRequestMsg">
      <part name="parameters" element="vim2:SearchDatastore_Task" />
   </message>
   <message name="SearchDatastore_TaskResponseMsg">
      <part name="parameters" element="vim2:SearchDatastore_TaskResponse" />
   </message>
   <message name="SearchDatastoreSubFolders_TaskRequestMsg">
      <part name="parameters" element="vim2:SearchDatastoreSubFolders_Task" />
   </message>
   <message name="SearchDatastoreSubFolders_TaskResponseMsg">
      <part name="parameters" element="vim2:SearchDatastoreSubFolders_TaskResponse" />
   </message>
   <message name="DeleteFileRequestMsg">
      <part name="parameters" element="vim2:DeleteFile" />
   </message>
   <message name="DeleteFileResponseMsg">
      <part name="parameters" element="vim2:DeleteFileResponse" />
   </message>
   <message name="QueryAvailableDisksForVmfsRequestMsg">
      <part name="parameters" element="vim2:QueryAvailableDisksForVmfs" />
   </message>
   <message name="QueryAvailableDisksForVmfsResponseMsg">
      <part name="parameters" element="vim2:QueryAvailableDisksForVmfsResponse" />
   </message>
   <message name="QueryVmfsDatastoreCreateOptionsRequestMsg">
      <part name="parameters" element="vim2:QueryVmfsDatastoreCreateOptions" />
   </message>
   <message name="QueryVmfsDatastoreCreateOptionsResponseMsg">
      <part name="parameters" element="vim2:QueryVmfsDatastoreCreateOptionsResponse" />
   </message>
   <message name="CreateVmfsDatastoreRequestMsg">
      <part name="parameters" element="vim2:CreateVmfsDatastore" />
   </message>
   <message name="CreateVmfsDatastoreResponseMsg">
      <part name="parameters" element="vim2:CreateVmfsDatastoreResponse" />
   </message>
   <message name="QueryVmfsDatastoreExtendOptionsRequestMsg">
      <part name="parameters" element="vim2:QueryVmfsDatastoreExtendOptions" />
   </message>
   <message name="QueryVmfsDatastoreExtendOptionsResponseMsg">
      <part name="parameters" element="vim2:QueryVmfsDatastoreExtendOptionsResponse" />
   </message>
   <message name="ExtendVmfsDatastoreRequestMsg">
      <part name="parameters" element="vim2:ExtendVmfsDatastore" />
   </message>
   <message name="ExtendVmfsDatastoreResponseMsg">
      <part name="parameters" element="vim2:ExtendVmfsDatastoreResponse" />
   </message>
   <message name="CreateNasDatastoreRequestMsg">
      <part name="parameters" element="vim2:CreateNasDatastore" />
   </message>
   <message name="CreateNasDatastoreResponseMsg">
      <part name="parameters" element="vim2:CreateNasDatastoreResponse" />
   </message>
   <message name="CreateLocalDatastoreRequestMsg">
      <part name="parameters" element="vim2:CreateLocalDatastore" />
   </message>
   <message name="CreateLocalDatastoreResponseMsg">
      <part name="parameters" element="vim2:CreateLocalDatastoreResponse" />
   </message>
   <message name="RemoveDatastoreRequestMsg">
      <part name="parameters" element="vim2:RemoveDatastore" />
   </message>
   <message name="RemoveDatastoreResponseMsg">
      <part name="parameters" element="vim2:RemoveDatastoreResponse" />
   </message>
   <message name="ConfigureDatastorePrincipalRequestMsg">
      <part name="parameters" element="vim2:ConfigureDatastorePrincipal" />
   </message>
   <message name="ConfigureDatastorePrincipalResponseMsg">
      <part name="parameters" element="vim2:ConfigureDatastorePrincipalResponse" />
   </message>
   <message name="QueryAvailablePartitionRequestMsg">
      <part name="parameters" element="vim2:QueryAvailablePartition" />
   </message>
   <message name="QueryAvailablePartitionResponseMsg">
      <part name="parameters" element="vim2:QueryAvailablePartitionResponse" />
   </message>
   <message name="SelectActivePartitionRequestMsg">
      <part name="parameters" element="vim2:SelectActivePartition" />
   </message>
   <message name="SelectActivePartitionResponseMsg">
      <part name="parameters" element="vim2:SelectActivePartitionResponse" />
   </message>
   <message name="QueryPartitionCreateOptionsRequestMsg">
      <part name="parameters" element="vim2:QueryPartitionCreateOptions" />
   </message>
   <message name="QueryPartitionCreateOptionsResponseMsg">
      <part name="parameters" element="vim2:QueryPartitionCreateOptionsResponse" />
   </message>
   <message name="QueryPartitionCreateDescRequestMsg">
      <part name="parameters" element="vim2:QueryPartitionCreateDesc" />
   </message>
   <message name="QueryPartitionCreateDescResponseMsg">
      <part name="parameters" element="vim2:QueryPartitionCreateDescResponse" />
   </message>
   <message name="CreateDiagnosticPartitionRequestMsg">
      <part name="parameters" element="vim2:CreateDiagnosticPartition" />
   </message>
   <message name="CreateDiagnosticPartitionResponseMsg">
      <part name="parameters" element="vim2:CreateDiagnosticPartitionResponse" />
   </message>
   <message name="RenewLeaseRequestMsg">
      <part name="parameters" element="vim2:RenewLease" />
   </message>
   <message name="RenewLeaseResponseMsg">
      <part name="parameters" element="vim2:RenewLeaseResponse" />
   </message>
   <message name="ReleaseLeaseRequestMsg">
      <part name="parameters" element="vim2:ReleaseLease" />
   </message>
   <message name="ReleaseLeaseResponseMsg">
      <part name="parameters" element="vim2:ReleaseLeaseResponse" />
   </message>
   <message name="UpdateDefaultPolicyRequestMsg">
      <part name="parameters" element="vim2:UpdateDefaultPolicy" />
   </message>
   <message name="UpdateDefaultPolicyResponseMsg">
      <part name="parameters" element="vim2:UpdateDefaultPolicyResponse" />
   </message>
   <message name="EnableRulesetRequestMsg">
      <part name="parameters" element="vim2:EnableRuleset" />
   </message>
   <message name="EnableRulesetResponseMsg">
      <part name="parameters" element="vim2:EnableRulesetResponse" />
   </message>
   <message name="DisableRulesetRequestMsg">
      <part name="parameters" element="vim2:DisableRuleset" />
   </message>
   <message name="DisableRulesetResponseMsg">
      <part name="parameters" element="vim2:DisableRulesetResponse" />
   </message>
   <message name="RefreshFirewallRequestMsg">
      <part name="parameters" element="vim2:RefreshFirewall" />
   </message>
   <message name="RefreshFirewallResponseMsg">
      <part name="parameters" element="vim2:RefreshFirewallResponse" />
   </message>
   <message name="CreateUserRequestMsg">
      <part name="parameters" element="vim2:CreateUser" />
   </message>
   <message name="CreateUserResponseMsg">
      <part name="parameters" element="vim2:CreateUserResponse" />
   </message>
   <message name="UpdateUserRequestMsg">
      <part name="parameters" element="vim2:UpdateUser" />
   </message>
   <message name="UpdateUserResponseMsg">
      <part name="parameters" element="vim2:UpdateUserResponse" />
   </message>
   <message name="CreateGroupRequestMsg">
      <part name="parameters" element="vim2:CreateGroup" />
   </message>
   <message name="CreateGroupResponseMsg">
      <part name="parameters" element="vim2:CreateGroupResponse" />
   </message>
   <message name="RemoveUserRequestMsg">
      <part name="parameters" element="vim2:RemoveUser" />
   </message>
   <message name="RemoveUserResponseMsg">
      <part name="parameters" element="vim2:RemoveUserResponse" />
   </message>
   <message name="RemoveGroupRequestMsg">
      <part name="parameters" element="vim2:RemoveGroup" />
   </message>
   <message name="RemoveGroupResponseMsg">
      <part name="parameters" element="vim2:RemoveGroupResponse" />
   </message>
   <message name="AssignUserToGroupRequestMsg">
      <part name="parameters" element="vim2:AssignUserToGroup" />
   </message>
   <message name="AssignUserToGroupResponseMsg">
      <part name="parameters" element="vim2:AssignUserToGroupResponse" />
   </message>
   <message name="UnassignUserFromGroupRequestMsg">
      <part name="parameters" element="vim2:UnassignUserFromGroup" />
   </message>
   <message name="UnassignUserFromGroupResponseMsg">
      <part name="parameters" element="vim2:UnassignUserFromGroupResponse" />
   </message>
   <message name="ReconfigureServiceConsoleReservationRequestMsg">
      <part name="parameters" element="vim2:ReconfigureServiceConsoleReservation" />
   </message>
   <message name="ReconfigureServiceConsoleReservationResponseMsg">
      <part name="parameters" element="vim2:ReconfigureServiceConsoleReservationResponse" />
   </message>
   <message name="UpdateNetworkConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateNetworkConfig" />
   </message>
   <message name="UpdateNetworkConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateNetworkConfigResponse" />
   </message>
   <message name="UpdateDnsConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateDnsConfig" />
   </message>
   <message name="UpdateDnsConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateDnsConfigResponse" />
   </message>
   <message name="UpdateIpRouteConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateIpRouteConfig" />
   </message>
   <message name="UpdateIpRouteConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateIpRouteConfigResponse" />
   </message>
   <message name="UpdateConsoleIpRouteConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateConsoleIpRouteConfig" />
   </message>
   <message name="UpdateConsoleIpRouteConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateConsoleIpRouteConfigResponse" />
   </message>
   <message name="AddVirtualSwitchRequestMsg">
      <part name="parameters" element="vim2:AddVirtualSwitch" />
   </message>
   <message name="AddVirtualSwitchResponseMsg">
      <part name="parameters" element="vim2:AddVirtualSwitchResponse" />
   </message>
   <message name="RemoveVirtualSwitchRequestMsg">
      <part name="parameters" element="vim2:RemoveVirtualSwitch" />
   </message>
   <message name="RemoveVirtualSwitchResponseMsg">
      <part name="parameters" element="vim2:RemoveVirtualSwitchResponse" />
   </message>
   <message name="UpdateVirtualSwitchRequestMsg">
      <part name="parameters" element="vim2:UpdateVirtualSwitch" />
   </message>
   <message name="UpdateVirtualSwitchResponseMsg">
      <part name="parameters" element="vim2:UpdateVirtualSwitchResponse" />
   </message>
   <message name="AddPortGroupRequestMsg">
      <part name="parameters" element="vim2:AddPortGroup" />
   </message>
   <message name="AddPortGroupResponseMsg">
      <part name="parameters" element="vim2:AddPortGroupResponse" />
   </message>
   <message name="RemovePortGroupRequestMsg">
      <part name="parameters" element="vim2:RemovePortGroup" />
   </message>
   <message name="RemovePortGroupResponseMsg">
      <part name="parameters" element="vim2:RemovePortGroupResponse" />
   </message>
   <message name="UpdatePortGroupRequestMsg">
      <part name="parameters" element="vim2:UpdatePortGroup" />
   </message>
   <message name="UpdatePortGroupResponseMsg">
      <part name="parameters" element="vim2:UpdatePortGroupResponse" />
   </message>
   <message name="UpdatePhysicalNicLinkSpeedRequestMsg">
      <part name="parameters" element="vim2:UpdatePhysicalNicLinkSpeed" />
   </message>
   <message name="UpdatePhysicalNicLinkSpeedResponseMsg">
      <part name="parameters" element="vim2:UpdatePhysicalNicLinkSpeedResponse" />
   </message>
   <message name="QueryNetworkHintRequestMsg">
      <part name="parameters" element="vim2:QueryNetworkHint" />
   </message>
   <message name="QueryNetworkHintResponseMsg">
      <part name="parameters" element="vim2:QueryNetworkHintResponse" />
   </message>
   <message name="AddVirtualNicRequestMsg">
      <part name="parameters" element="vim2:AddVirtualNic" />
   </message>
   <message name="AddVirtualNicResponseMsg">
      <part name="parameters" element="vim2:AddVirtualNicResponse" />
   </message>
   <message name="RemoveVirtualNicRequestMsg">
      <part name="parameters" element="vim2:RemoveVirtualNic" />
   </message>
   <message name="RemoveVirtualNicResponseMsg">
      <part name="parameters" element="vim2:RemoveVirtualNicResponse" />
   </message>
   <message name="UpdateVirtualNicRequestMsg">
      <part name="parameters" element="vim2:UpdateVirtualNic" />
   </message>
   <message name="UpdateVirtualNicResponseMsg">
      <part name="parameters" element="vim2:UpdateVirtualNicResponse" />
   </message>
   <message name="AddServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim2:AddServiceConsoleVirtualNic" />
   </message>
   <message name="AddServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim2:AddServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RemoveServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim2:RemoveServiceConsoleVirtualNic" />
   </message>
   <message name="RemoveServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim2:RemoveServiceConsoleVirtualNicResponse" />
   </message>
   <message name="UpdateServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim2:UpdateServiceConsoleVirtualNic" />
   </message>
   <message name="UpdateServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim2:UpdateServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RestartServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim2:RestartServiceConsoleVirtualNic" />
   </message>
   <message name="RestartServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim2:RestartServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RefreshNetworkSystemRequestMsg">
      <part name="parameters" element="vim2:RefreshNetworkSystem" />
   </message>
   <message name="RefreshNetworkSystemResponseMsg">
      <part name="parameters" element="vim2:RefreshNetworkSystemResponse" />
   </message>
   <message name="UpdateServicePolicyRequestMsg">
      <part name="parameters" element="vim2:UpdateServicePolicy" />
   </message>
   <message name="UpdateServicePolicyResponseMsg">
      <part name="parameters" element="vim2:UpdateServicePolicyResponse" />
   </message>
   <message name="StartServiceRequestMsg">
      <part name="parameters" element="vim2:StartService" />
   </message>
   <message name="StartServiceResponseMsg">
      <part name="parameters" element="vim2:StartServiceResponse" />
   </message>
   <message name="StopServiceRequestMsg">
      <part name="parameters" element="vim2:StopService" />
   </message>
   <message name="StopServiceResponseMsg">
      <part name="parameters" element="vim2:StopServiceResponse" />
   </message>
   <message name="RestartServiceRequestMsg">
      <part name="parameters" element="vim2:RestartService" />
   </message>
   <message name="RestartServiceResponseMsg">
      <part name="parameters" element="vim2:RestartServiceResponse" />
   </message>
   <message name="UninstallServiceRequestMsg">
      <part name="parameters" element="vim2:UninstallService" />
   </message>
   <message name="UninstallServiceResponseMsg">
      <part name="parameters" element="vim2:UninstallServiceResponse" />
   </message>
   <message name="RefreshServicesRequestMsg">
      <part name="parameters" element="vim2:RefreshServices" />
   </message>
   <message name="RefreshServicesResponseMsg">
      <part name="parameters" element="vim2:RefreshServicesResponse" />
   </message>
   <message name="CheckIfMasterSnmpAgentRunningRequestMsg">
      <part name="parameters" element="vim2:CheckIfMasterSnmpAgentRunning" />
   </message>
   <message name="CheckIfMasterSnmpAgentRunningResponseMsg">
      <part name="parameters" element="vim2:CheckIfMasterSnmpAgentRunningResponse" />
   </message>
   <message name="UpdateSnmpConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateSnmpConfig" />
   </message>
   <message name="UpdateSnmpConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateSnmpConfigResponse" />
   </message>
   <message name="RestartMasterSnmpAgentRequestMsg">
      <part name="parameters" element="vim2:RestartMasterSnmpAgent" />
   </message>
   <message name="RestartMasterSnmpAgentResponseMsg">
      <part name="parameters" element="vim2:RestartMasterSnmpAgentResponse" />
   </message>
   <message name="StopMasterSnmpAgentRequestMsg">
      <part name="parameters" element="vim2:StopMasterSnmpAgent" />
   </message>
   <message name="StopMasterSnmpAgentResponseMsg">
      <part name="parameters" element="vim2:StopMasterSnmpAgentResponse" />
   </message>
   <message name="RetrieveDiskPartitionInfoRequestMsg">
      <part name="parameters" element="vim2:RetrieveDiskPartitionInfo" />
   </message>
   <message name="RetrieveDiskPartitionInfoResponseMsg">
      <part name="parameters" element="vim2:RetrieveDiskPartitionInfoResponse" />
   </message>
   <message name="ComputeDiskPartitionInfoRequestMsg">
      <part name="parameters" element="vim2:ComputeDiskPartitionInfo" />
   </message>
   <message name="ComputeDiskPartitionInfoResponseMsg">
      <part name="parameters" element="vim2:ComputeDiskPartitionInfoResponse" />
   </message>
   <message name="UpdateDiskPartitionsRequestMsg">
      <part name="parameters" element="vim2:UpdateDiskPartitions" />
   </message>
   <message name="UpdateDiskPartitionsResponseMsg">
      <part name="parameters" element="vim2:UpdateDiskPartitionsResponse" />
   </message>
   <message name="FormatVmfsRequestMsg">
      <part name="parameters" element="vim2:FormatVmfs" />
   </message>
   <message name="FormatVmfsResponseMsg">
      <part name="parameters" element="vim2:FormatVmfsResponse" />
   </message>
   <message name="RescanVmfsRequestMsg">
      <part name="parameters" element="vim2:RescanVmfs" />
   </message>
   <message name="RescanVmfsResponseMsg">
      <part name="parameters" element="vim2:RescanVmfsResponse" />
   </message>
   <message name="AttachVmfsExtentRequestMsg">
      <part name="parameters" element="vim2:AttachVmfsExtent" />
   </message>
   <message name="AttachVmfsExtentResponseMsg">
      <part name="parameters" element="vim2:AttachVmfsExtentResponse" />
   </message>
   <message name="UpgradeVmfsRequestMsg">
      <part name="parameters" element="vim2:UpgradeVmfs" />
   </message>
   <message name="UpgradeVmfsResponseMsg">
      <part name="parameters" element="vim2:UpgradeVmfsResponse" />
   </message>
   <message name="UpgradeVmLayoutRequestMsg">
      <part name="parameters" element="vim2:UpgradeVmLayout" />
   </message>
   <message name="UpgradeVmLayoutResponseMsg">
      <part name="parameters" element="vim2:UpgradeVmLayoutResponse" />
   </message>
   <message name="RescanHbaRequestMsg">
      <part name="parameters" element="vim2:RescanHba" />
   </message>
   <message name="RescanHbaResponseMsg">
      <part name="parameters" element="vim2:RescanHbaResponse" />
   </message>
   <message name="RescanAllHbaRequestMsg">
      <part name="parameters" element="vim2:RescanAllHba" />
   </message>
   <message name="RescanAllHbaResponseMsg">
      <part name="parameters" element="vim2:RescanAllHbaResponse" />
   </message>
   <message name="UpdateSoftwareInternetScsiEnabledRequestMsg">
      <part name="parameters" element="vim2:UpdateSoftwareInternetScsiEnabled" />
   </message>
   <message name="UpdateSoftwareInternetScsiEnabledResponseMsg">
      <part name="parameters" element="vim2:UpdateSoftwareInternetScsiEnabledResponse" />
   </message>
   <message name="UpdateInternetScsiDiscoveryPropertiesRequestMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiDiscoveryProperties" />
   </message>
   <message name="UpdateInternetScsiDiscoveryPropertiesResponseMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiDiscoveryPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiAuthenticationPropertiesRequestMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiAuthenticationProperties" />
   </message>
   <message name="UpdateInternetScsiAuthenticationPropertiesResponseMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiAuthenticationPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiIPPropertiesRequestMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiIPProperties" />
   </message>
   <message name="UpdateInternetScsiIPPropertiesResponseMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiIPPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiNameRequestMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiName" />
   </message>
   <message name="UpdateInternetScsiNameResponseMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiNameResponse" />
   </message>
   <message name="UpdateInternetScsiAliasRequestMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiAlias" />
   </message>
   <message name="UpdateInternetScsiAliasResponseMsg">
      <part name="parameters" element="vim2:UpdateInternetScsiAliasResponse" />
   </message>
   <message name="AddInternetScsiSendTargetsRequestMsg">
      <part name="parameters" element="vim2:AddInternetScsiSendTargets" />
   </message>
   <message name="AddInternetScsiSendTargetsResponseMsg">
      <part name="parameters" element="vim2:AddInternetScsiSendTargetsResponse" />
   </message>
   <message name="RemoveInternetScsiSendTargetsRequestMsg">
      <part name="parameters" element="vim2:RemoveInternetScsiSendTargets" />
   </message>
   <message name="RemoveInternetScsiSendTargetsResponseMsg">
      <part name="parameters" element="vim2:RemoveInternetScsiSendTargetsResponse" />
   </message>
   <message name="AddInternetScsiStaticTargetsRequestMsg">
      <part name="parameters" element="vim2:AddInternetScsiStaticTargets" />
   </message>
   <message name="AddInternetScsiStaticTargetsResponseMsg">
      <part name="parameters" element="vim2:AddInternetScsiStaticTargetsResponse" />
   </message>
   <message name="RemoveInternetScsiStaticTargetsRequestMsg">
      <part name="parameters" element="vim2:RemoveInternetScsiStaticTargets" />
   </message>
   <message name="RemoveInternetScsiStaticTargetsResponseMsg">
      <part name="parameters" element="vim2:RemoveInternetScsiStaticTargetsResponse" />
   </message>
   <message name="EnableMultipathPathRequestMsg">
      <part name="parameters" element="vim2:EnableMultipathPath" />
   </message>
   <message name="EnableMultipathPathResponseMsg">
      <part name="parameters" element="vim2:EnableMultipathPathResponse" />
   </message>
   <message name="DisableMultipathPathRequestMsg">
      <part name="parameters" element="vim2:DisableMultipathPath" />
   </message>
   <message name="DisableMultipathPathResponseMsg">
      <part name="parameters" element="vim2:DisableMultipathPathResponse" />
   </message>
   <message name="SetMultipathLunPolicyRequestMsg">
      <part name="parameters" element="vim2:SetMultipathLunPolicy" />
   </message>
   <message name="SetMultipathLunPolicyResponseMsg">
      <part name="parameters" element="vim2:SetMultipathLunPolicyResponse" />
   </message>
   <message name="RefreshStorageSystemRequestMsg">
      <part name="parameters" element="vim2:RefreshStorageSystem" />
   </message>
   <message name="RefreshStorageSystemResponseMsg">
      <part name="parameters" element="vim2:RefreshStorageSystemResponse" />
   </message>
   <message name="UpdateIpConfigRequestMsg">
      <part name="parameters" element="vim2:UpdateIpConfig" />
   </message>
   <message name="UpdateIpConfigResponseMsg">
      <part name="parameters" element="vim2:UpdateIpConfigResponse" />
   </message>
   <message name="SelectVnicRequestMsg">
      <part name="parameters" element="vim2:SelectVnic" />
   </message>
   <message name="SelectVnicResponseMsg">
      <part name="parameters" element="vim2:SelectVnicResponse" />
   </message>
   <message name="DeselectVnicRequestMsg">
      <part name="parameters" element="vim2:DeselectVnic" />
   </message>
   <message name="DeselectVnicResponseMsg">
      <part name="parameters" element="vim2:DeselectVnicResponse" />
   </message>
   <message name="QueryOptionsRequestMsg">
      <part name="parameters" element="vim2:QueryOptions" />
   </message>
   <message name="QueryOptionsResponseMsg">
      <part name="parameters" element="vim2:QueryOptionsResponse" />
   </message>
   <message name="UpdateOptionsRequestMsg">
      <part name="parameters" element="vim2:UpdateOptions" />
   </message>
   <message name="UpdateOptionsResponseMsg">
      <part name="parameters" element="vim2:UpdateOptionsResponse" />
   </message>
   <message name="RemoveScheduledTaskRequestMsg">
      <part name="parameters" element="vim2:RemoveScheduledTask" />
   </message>
   <message name="RemoveScheduledTaskResponseMsg">
      <part name="parameters" element="vim2:RemoveScheduledTaskResponse" />
   </message>
   <message name="ReconfigureScheduledTaskRequestMsg">
      <part name="parameters" element="vim2:ReconfigureScheduledTask" />
   </message>
   <message name="ReconfigureScheduledTaskResponseMsg">
      <part name="parameters" element="vim2:ReconfigureScheduledTaskResponse" />
   </message>
   <message name="RunScheduledTaskRequestMsg">
      <part name="parameters" element="vim2:RunScheduledTask" />
   </message>
   <message name="RunScheduledTaskResponseMsg">
      <part name="parameters" element="vim2:RunScheduledTaskResponse" />
   </message>
   <message name="CreateScheduledTaskRequestMsg">
      <part name="parameters" element="vim2:CreateScheduledTask" />
   </message>
   <message name="CreateScheduledTaskResponseMsg">
      <part name="parameters" element="vim2:CreateScheduledTaskResponse" />
   </message>
   <message name="RetrieveEntityScheduledTaskRequestMsg">
      <part name="parameters" element="vim2:RetrieveEntityScheduledTask" />
   </message>
   <message name="RetrieveEntityScheduledTaskResponseMsg">
      <part name="parameters" element="vim2:RetrieveEntityScheduledTaskResponse" />
   </message>
   <message name="RevertToSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim2:RevertToSnapshot_Task" />
   </message>
   <message name="RevertToSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim2:RevertToSnapshot_TaskResponse" />
   </message>
   <message name="RemoveSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim2:RemoveSnapshot_Task" />
   </message>
   <message name="RemoveSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim2:RemoveSnapshot_TaskResponse" />
   </message>
   <message name="RenameSnapshotRequestMsg">
      <part name="parameters" element="vim2:RenameSnapshot" />
   </message>
   <message name="RenameSnapshotResponseMsg">
      <part name="parameters" element="vim2:RenameSnapshotResponse" />
   </message>
   <portType name="VimPortType">
      <operation name="DestroyPropertyFilter">
         <input message="vim2:DestroyPropertyFilterRequestMsg" />
         <output message="vim2:DestroyPropertyFilterResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateFilter">
         <input message="vim2:CreateFilterRequestMsg" />
         <output message="vim2:CreateFilterResponseMsg" />
         <fault name="InvalidPropertyFault" message="vim2:InvalidPropertyFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveProperties">
         <input message="vim2:RetrievePropertiesRequestMsg" />
         <output message="vim2:RetrievePropertiesResponseMsg" />
         <fault name="InvalidPropertyFault" message="vim2:InvalidPropertyFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckForUpdates">
         <input message="vim2:CheckForUpdatesRequestMsg" />
         <output message="vim2:CheckForUpdatesResponseMsg" />
         <fault name="InvalidCollectorVersionFault" message="vim2:InvalidCollectorVersionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="WaitForUpdates">
         <input message="vim2:WaitForUpdatesRequestMsg" />
         <output message="vim2:WaitForUpdatesResponseMsg" />
         <fault name="InvalidCollectorVersionFault" message="vim2:InvalidCollectorVersionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CancelWaitForUpdates">
         <input message="vim2:CancelWaitForUpdatesRequestMsg" />
         <output message="vim2:CancelWaitForUpdatesResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddAuthorizationRole">
         <input message="vim2:AddAuthorizationRoleRequestMsg" />
         <output message="vim2:AddAuthorizationRoleResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAuthorizationRole">
         <input message="vim2:RemoveAuthorizationRoleRequestMsg" />
         <output message="vim2:RemoveAuthorizationRoleResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RemoveFailedFault" message="vim2:RemoveFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateAuthorizationRole">
         <input message="vim2:UpdateAuthorizationRoleRequestMsg" />
         <output message="vim2:UpdateAuthorizationRoleResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MergePermissions">
         <input message="vim2:MergePermissionsRequestMsg" />
         <output message="vim2:MergePermissionsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim2:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveRolePermissions">
         <input message="vim2:RetrieveRolePermissionsRequestMsg" />
         <output message="vim2:RetrieveRolePermissionsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveEntityPermissions">
         <input message="vim2:RetrieveEntityPermissionsRequestMsg" />
         <output message="vim2:RetrieveEntityPermissionsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveAllPermissions">
         <input message="vim2:RetrieveAllPermissionsRequestMsg" />
         <output message="vim2:RetrieveAllPermissionsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetEntityPermissions">
         <input message="vim2:SetEntityPermissionsRequestMsg" />
         <output message="vim2:SetEntityPermissionsResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim2:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetEntityPermissions">
         <input message="vim2:ResetEntityPermissionsRequestMsg" />
         <output message="vim2:ResetEntityPermissionsResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim2:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveEntityPermission">
         <input message="vim2:RemoveEntityPermissionRequestMsg" />
         <output message="vim2:RemoveEntityPermissionResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim2:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureCluster_Task">
         <input message="vim2:ReconfigureCluster_TaskRequestMsg" />
         <output message="vim2:ReconfigureCluster_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ApplyRecommendation">
         <input message="vim2:ApplyRecommendationRequestMsg" />
         <output message="vim2:ApplyRecommendationResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RecommendHostsForVm">
         <input message="vim2:RecommendHostsForVmRequestMsg" />
         <output message="vim2:RecommendHostsForVmResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddHost_Task">
         <input message="vim2:AddHost_TaskRequestMsg" />
         <output message="vim2:AddHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim2:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveInto_Task">
         <input message="vim2:MoveInto_TaskRequestMsg" />
         <output message="vim2:MoveInto_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="TooManyHostsFault" message="vim2:TooManyHostsFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveHostInto_Task">
         <input message="vim2:MoveHostInto_TaskRequestMsg" />
         <output message="vim2:MoveHostInto_TaskResponseMsg" />
         <fault name="TooManyHostsFault" message="vim2:TooManyHostsFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddCustomFieldDef">
         <input message="vim2:AddCustomFieldDefRequestMsg" />
         <output message="vim2:AddCustomFieldDefResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveCustomFieldDef">
         <input message="vim2:RemoveCustomFieldDefRequestMsg" />
         <output message="vim2:RemoveCustomFieldDefResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameCustomFieldDef">
         <input message="vim2:RenameCustomFieldDefRequestMsg" />
         <output message="vim2:RenameCustomFieldDefResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetField">
         <input message="vim2:SetFieldRequestMsg" />
         <output message="vim2:SetFieldResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DoesCustomizationSpecExist">
         <input message="vim2:DoesCustomizationSpecExistRequestMsg" />
         <output message="vim2:DoesCustomizationSpecExistResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetCustomizationSpec">
         <input message="vim2:GetCustomizationSpecRequestMsg" />
         <output message="vim2:GetCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCustomizationSpec">
         <input message="vim2:CreateCustomizationSpecRequestMsg" />
         <output message="vim2:CreateCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="OverwriteCustomizationSpec">
         <input message="vim2:OverwriteCustomizationSpecRequestMsg" />
         <output message="vim2:OverwriteCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim2:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteCustomizationSpec">
         <input message="vim2:DeleteCustomizationSpecRequestMsg" />
         <output message="vim2:DeleteCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DuplicateCustomizationSpec">
         <input message="vim2:DuplicateCustomizationSpecRequestMsg" />
         <output message="vim2:DuplicateCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameCustomizationSpec">
         <input message="vim2:RenameCustomizationSpecRequestMsg" />
         <output message="vim2:RenameCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CustomizationSpecItemToXml">
         <input message="vim2:CustomizationSpecItemToXmlRequestMsg" />
         <output message="vim2:CustomizationSpecItemToXmlResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="XmlToCustomizationSpecItem">
         <input message="vim2:XmlToCustomizationSpecItemRequestMsg" />
         <output message="vim2:XmlToCustomizationSpecItemResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCustomizationResources">
         <input message="vim2:CheckCustomizationResourcesRequestMsg" />
         <output message="vim2:CheckCustomizationResourcesResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConnectionInfo">
         <input message="vim2:QueryConnectionInfoRequestMsg" />
         <output message="vim2:QueryConnectionInfoResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim2:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameDatastore">
         <input message="vim2:RenameDatastoreRequestMsg" />
         <output message="vim2:RenameDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshDatastore">
         <input message="vim2:RefreshDatastoreRequestMsg" />
         <output message="vim2:RefreshDatastoreResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyDatastore">
         <input message="vim2:DestroyDatastoreRequestMsg" />
         <output message="vim2:DestroyDatastoreResponseMsg" />
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDescriptions">
         <input message="vim2:QueryDescriptionsRequestMsg" />
         <output message="vim2:QueryDescriptionsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="BrowseDiagnosticLog">
         <input message="vim2:BrowseDiagnosticLogRequestMsg" />
         <output message="vim2:BrowseDiagnosticLogResponseMsg" />
         <fault name="CannotAccessFileFault" message="vim2:CannotAccessFileFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GenerateLogBundles_Task">
         <input message="vim2:GenerateLogBundles_TaskRequestMsg" />
         <output message="vim2:GenerateLogBundles_TaskResponseMsg" />
         <fault name="LogBundlingFailedFault" message="vim2:LogBundlingFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigOptionDescriptor">
         <input message="vim2:QueryConfigOptionDescriptorRequestMsg" />
         <output message="vim2:QueryConfigOptionDescriptorResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigOption">
         <input message="vim2:QueryConfigOptionRequestMsg" />
         <output message="vim2:QueryConfigOptionResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigTarget">
         <input message="vim2:QueryConfigTargetRequestMsg" />
         <output message="vim2:QueryConfigTargetResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateFolder">
         <input message="vim2:CreateFolderRequestMsg" />
         <output message="vim2:CreateFolderResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveIntoFolder_Task">
         <input message="vim2:MoveIntoFolder_TaskRequestMsg" />
         <output message="vim2:MoveIntoFolder_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidFolderFault" message="vim2:InvalidFolderFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVM_Task">
         <input message="vim2:CreateVM_TaskRequestMsg" />
         <output message="vim2:CreateVM_TaskResponseMsg" />
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="OutOfBoundsFault" message="vim2:OutOfBoundsFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RegisterVM_Task">
         <input message="vim2:RegisterVM_TaskRequestMsg" />
         <output message="vim2:RegisterVM_TaskResponseMsg" />
         <fault name="OutOfBoundsFault" message="vim2:OutOfBoundsFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCluster">
         <input message="vim2:CreateClusterRequestMsg" />
         <output message="vim2:CreateClusterResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddStandaloneHost_Task">
         <input message="vim2:AddStandaloneHost_TaskRequestMsg" />
         <output message="vim2:AddStandaloneHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim2:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDatacenter">
         <input message="vim2:CreateDatacenterRequestMsg" />
         <output message="vim2:CreateDatacenterResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnregisterAndDestroy_Task">
         <input message="vim2:UnregisterAndDestroy_TaskRequestMsg" />
         <output message="vim2:UnregisterAndDestroy_TaskResponseMsg" />
         <fault name="ConcurrentAccessFault" message="vim2:ConcurrentAccessFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetCollectorPageSize">
         <input message="vim2:SetCollectorPageSizeRequestMsg" />
         <output message="vim2:SetCollectorPageSizeResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RewindCollector">
         <input message="vim2:RewindCollectorRequestMsg" />
         <output message="vim2:RewindCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetCollector">
         <input message="vim2:ResetCollectorRequestMsg" />
         <output message="vim2:ResetCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyCollector">
         <input message="vim2:DestroyCollectorRequestMsg" />
         <output message="vim2:DestroyCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryHostConnectionInfo">
         <input message="vim2:QueryHostConnectionInfoRequestMsg" />
         <output message="vim2:QueryHostConnectionInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateSystemResources">
         <input message="vim2:UpdateSystemResourcesRequestMsg" />
         <output message="vim2:UpdateSystemResourcesResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconnectHost_Task">
         <input message="vim2:ReconnectHost_TaskRequestMsg" />
         <output message="vim2:ReconnectHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim2:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisconnectHost_Task">
         <input message="vim2:DisconnectHost_TaskRequestMsg" />
         <output message="vim2:DisconnectHost_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnterMaintenanceMode_Task">
         <input message="vim2:EnterMaintenanceMode_TaskRequestMsg" />
         <output message="vim2:EnterMaintenanceMode_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="TimedoutFault" message="vim2:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExitMaintenanceMode_Task">
         <input message="vim2:ExitMaintenanceMode_TaskRequestMsg" />
         <output message="vim2:ExitMaintenanceMode_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="TimedoutFault" message="vim2:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RebootHost_Task">
         <input message="vim2:RebootHost_TaskRequestMsg" />
         <output message="vim2:RebootHost_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ShutdownHost_Task">
         <input message="vim2:ShutdownHost_TaskRequestMsg" />
         <output message="vim2:ShutdownHost_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryMemoryOverhead">
         <input message="vim2:QueryMemoryOverheadRequestMsg" />
         <output message="vim2:QueryMemoryOverheadResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureHostForDAS_Task">
         <input message="vim2:ReconfigureHostForDAS_TaskRequestMsg" />
         <output message="vim2:ReconfigureHostForDAS_TaskResponseMsg" />
         <fault name="DasConfigFaultFault" message="vim2:DasConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryLicenseSourceAvailability">
         <input message="vim2:QueryLicenseSourceAvailabilityRequestMsg" />
         <output message="vim2:QueryLicenseSourceAvailabilityResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryLicenseUsage">
         <input message="vim2:QueryLicenseUsageRequestMsg" />
         <output message="vim2:QueryLicenseUsageResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetLicenseEdition">
         <input message="vim2:SetLicenseEditionRequestMsg" />
         <output message="vim2:SetLicenseEditionResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim2:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckLicenseFeature">
         <input message="vim2:CheckLicenseFeatureRequestMsg" />
         <output message="vim2:CheckLicenseFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableFeature">
         <input message="vim2:EnableFeatureRequestMsg" />
         <output message="vim2:EnableFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim2:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableFeature">
         <input message="vim2:DisableFeatureRequestMsg" />
         <output message="vim2:DisableFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim2:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ConfigureLicenseSource">
         <input message="vim2:ConfigureLicenseSourceRequestMsg" />
         <output message="vim2:ConfigureLicenseSourceResponseMsg" />
         <fault name="CannotAccessLocalSourceFault" message="vim2:CannotAccessLocalSourceFaultMsg"/>
         <fault name="InvalidLicenseFault" message="vim2:InvalidLicenseFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim2:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Reload">
         <input message="vim2:ReloadRequestMsg" />
         <output message="vim2:ReloadResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Rename_Task">
         <input message="vim2:Rename_TaskRequestMsg" />
         <output message="vim2:Rename_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Destroy_Task">
         <input message="vim2:Destroy_TaskRequestMsg" />
         <output message="vim2:Destroy_TaskResponseMsg" />
         <fault name="VimFaultFault" message="vim2:VimFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyNetwork">
         <input message="vim2:DestroyNetworkRequestMsg" />
         <output message="vim2:DestroyNetworkResponseMsg" />
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfProviderSummary">
         <input message="vim2:QueryPerfProviderSummaryRequestMsg" />
         <output message="vim2:QueryPerfProviderSummaryResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailablePerfMetric">
         <input message="vim2:QueryAvailablePerfMetricRequestMsg" />
         <output message="vim2:QueryAvailablePerfMetricResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfCounter">
         <input message="vim2:QueryPerfCounterRequestMsg" />
         <output message="vim2:QueryPerfCounterResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerf">
         <input message="vim2:QueryPerfRequestMsg" />
         <output message="vim2:QueryPerfResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfComposite">
         <input message="vim2:QueryPerfCompositeRequestMsg" />
         <output message="vim2:QueryPerfCompositeResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreatePerfInterval">
         <input message="vim2:CreatePerfIntervalRequestMsg" />
         <output message="vim2:CreatePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemovePerfInterval">
         <input message="vim2:RemovePerfIntervalRequestMsg" />
         <output message="vim2:RemovePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePerfInterval">
         <input message="vim2:UpdatePerfIntervalRequestMsg" />
         <output message="vim2:UpdatePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateConfig">
         <input message="vim2:UpdateConfigRequestMsg" />
         <output message="vim2:UpdateConfigResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim2:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveIntoResourcePool">
         <input message="vim2:MoveIntoResourcePoolRequestMsg" />
         <output message="vim2:MoveIntoResourcePoolResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateChildResourceConfiguration">
         <input message="vim2:UpdateChildResourceConfigurationRequestMsg" />
         <output message="vim2:UpdateChildResourceConfigurationResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateResourcePool">
         <input message="vim2:CreateResourcePoolRequestMsg" />
         <output message="vim2:CreateResourcePoolResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyChildren">
         <input message="vim2:DestroyChildrenRequestMsg" />
         <output message="vim2:DestroyChildrenResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByUuid">
         <input message="vim2:FindByUuidRequestMsg" />
         <output message="vim2:FindByUuidResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByDatastorePath">
         <input message="vim2:FindByDatastorePathRequestMsg" />
         <output message="vim2:FindByDatastorePathResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByDnsName">
         <input message="vim2:FindByDnsNameRequestMsg" />
         <output message="vim2:FindByDnsNameResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByIp">
         <input message="vim2:FindByIpRequestMsg" />
         <output message="vim2:FindByIpResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByInventoryPath">
         <input message="vim2:FindByInventoryPathRequestMsg" />
         <output message="vim2:FindByInventoryPathResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindChild">
         <input message="vim2:FindChildRequestMsg" />
         <output message="vim2:FindChildResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CurrentTime">
         <input message="vim2:CurrentTimeRequestMsg" />
         <output message="vim2:CurrentTimeResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveServiceContent">
         <input message="vim2:RetrieveServiceContentRequestMsg" />
         <output message="vim2:RetrieveServiceContentResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ValidateMigration">
         <input message="vim2:ValidateMigrationRequestMsg" />
         <output message="vim2:ValidateMigrationResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVMotionCompatibility">
         <input message="vim2:QueryVMotionCompatibilityRequestMsg" />
         <output message="vim2:QueryVMotionCompatibilityResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServiceMessage">
         <input message="vim2:UpdateServiceMessageRequestMsg" />
         <output message="vim2:UpdateServiceMessageResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Login">
         <input message="vim2:LoginRequestMsg" />
         <output message="vim2:LoginResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim2:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Logout">
         <input message="vim2:LogoutRequestMsg" />
         <output message="vim2:LogoutResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireLocalTicket">
         <input message="vim2:AcquireLocalTicketRequestMsg" />
         <output message="vim2:AcquireLocalTicketResponseMsg" />
         <fault name="InvalidLoginFault" message="vim2:InvalidLoginFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="TerminateSession">
         <input message="vim2:TerminateSessionRequestMsg" />
         <output message="vim2:TerminateSessionResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetLocale">
         <input message="vim2:SetLocaleRequestMsg" />
         <output message="vim2:SetLocaleResponseMsg" />
         <fault name="InvalidLocaleFault" message="vim2:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CancelTask">
         <input message="vim2:CancelTaskRequestMsg" />
         <output message="vim2:CancelTaskResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadNextTasks">
         <input message="vim2:ReadNextTasksRequestMsg" />
         <output message="vim2:ReadNextTasksResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadPreviousTasks">
         <input message="vim2:ReadPreviousTasksRequestMsg" />
         <output message="vim2:ReadPreviousTasksResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCollectorForTasks">
         <input message="vim2:CreateCollectorForTasksRequestMsg" />
         <output message="vim2:CreateCollectorForTasksResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveUserGroups">
         <input message="vim2:RetrieveUserGroupsRequestMsg" />
         <output message="vim2:RetrieveUserGroupsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateSnapshot_Task">
         <input message="vim2:CreateSnapshot_TaskRequestMsg" />
         <output message="vim2:CreateSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim2:SnapshotFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RevertToCurrentSnapshot_Task">
         <input message="vim2:RevertToCurrentSnapshot_TaskRequestMsg" />
         <output message="vim2:RevertToCurrentSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim2:SnapshotFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAllSnapshots_Task">
         <input message="vim2:RemoveAllSnapshots_TaskRequestMsg" />
         <output message="vim2:RemoveAllSnapshots_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim2:SnapshotFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigVM_Task">
         <input message="vim2:ReconfigVM_TaskRequestMsg" />
         <output message="vim2:ReconfigVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim2:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVM_Task">
         <input message="vim2:UpgradeVM_TaskRequestMsg" />
         <output message="vim2:UpgradeVM_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="AlreadyUpgradedFault" message="vim2:AlreadyUpgradedFaultMsg"/>
         <fault name="NoDiskFoundFault" message="vim2:NoDiskFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOnVM_Task">
         <input message="vim2:PowerOnVM_TaskRequestMsg" />
         <output message="vim2:PowerOnVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOffVM_Task">
         <input message="vim2:PowerOffVM_TaskRequestMsg" />
         <output message="vim2:PowerOffVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SuspendVM_Task">
         <input message="vim2:SuspendVM_TaskRequestMsg" />
         <output message="vim2:SuspendVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetVM_Task">
         <input message="vim2:ResetVM_TaskRequestMsg" />
         <output message="vim2:ResetVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ShutdownGuest">
         <input message="vim2:ShutdownGuestRequestMsg" />
         <output message="vim2:ShutdownGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim2:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RebootGuest">
         <input message="vim2:RebootGuestRequestMsg" />
         <output message="vim2:RebootGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim2:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StandbyGuest">
         <input message="vim2:StandbyGuestRequestMsg" />
         <output message="vim2:StandbyGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim2:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AnswerVM">
         <input message="vim2:AnswerVMRequestMsg" />
         <output message="vim2:AnswerVMResponseMsg" />
         <fault name="ConcurrentAccessFault" message="vim2:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CustomizeVM_Task">
         <input message="vim2:CustomizeVM_TaskRequestMsg" />
         <output message="vim2:CustomizeVM_TaskResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCustomizationSpec">
         <input message="vim2:CheckCustomizationSpecRequestMsg" />
         <output message="vim2:CheckCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MigrateVM_Task">
         <input message="vim2:MigrateVM_TaskRequestMsg" />
         <output message="vim2:MigrateVM_TaskResponseMsg" />
         <fault name="MigrationFaultFault" message="vim2:MigrationFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="TimedoutFault" message="vim2:TimedoutFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RelocateVM_Task">
         <input message="vim2:RelocateVM_TaskRequestMsg" />
         <output message="vim2:RelocateVM_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="MigrationFaultFault" message="vim2:MigrationFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="TimedoutFault" message="vim2:TimedoutFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CloneVM_Task">
         <input message="vim2:CloneVM_TaskRequestMsg" />
         <output message="vim2:CloneVM_TaskResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim2:CustomizationFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="MigrationFaultFault" message="vim2:MigrationFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MarkAsTemplate">
         <input message="vim2:MarkAsTemplateRequestMsg" />
         <output message="vim2:MarkAsTemplateResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MarkAsVirtualMachine">
         <input message="vim2:MarkAsVirtualMachineRequestMsg" />
         <output message="vim2:MarkAsVirtualMachineResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnregisterVM">
         <input message="vim2:UnregisterVMRequestMsg" />
         <output message="vim2:UnregisterVMResponseMsg" />
         <fault name="InvalidPowerStateFault" message="vim2:InvalidPowerStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetGuestInformation">
         <input message="vim2:ResetGuestInformationRequestMsg" />
         <output message="vim2:ResetGuestInformationResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MountToolsInstaller">
         <input message="vim2:MountToolsInstallerRequestMsg" />
         <output message="vim2:MountToolsInstallerResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnmountToolsInstaller">
         <input message="vim2:UnmountToolsInstallerRequestMsg" />
         <output message="vim2:UnmountToolsInstallerResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeTools_Task">
         <input message="vim2:UpgradeTools_TaskRequestMsg" />
         <output message="vim2:UpgradeTools_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="VmToolsUpgradeFaultFault" message="vim2:VmToolsUpgradeFaultFaultMsg"/>
         <fault name="ToolsUnavailableFault" message="vim2:ToolsUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireMksTicket">
         <input message="vim2:AcquireMksTicketRequestMsg" />
         <output message="vim2:AcquireMksTicketResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetScreenResolution">
         <input message="vim2:SetScreenResolutionRequestMsg" />
         <output message="vim2:SetScreenResolutionResponseMsg" />
         <fault name="InvalidPowerStateFault" message="vim2:InvalidPowerStateFaultMsg"/>
         <fault name="ToolsUnavailableFault" message="vim2:ToolsUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAlarm">
         <input message="vim2:RemoveAlarmRequestMsg" />
         <output message="vim2:RemoveAlarmResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureAlarm">
         <input message="vim2:ReconfigureAlarmRequestMsg" />
         <output message="vim2:ReconfigureAlarmResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateAlarm">
         <input message="vim2:CreateAlarmRequestMsg" />
         <output message="vim2:CreateAlarmResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetAlarm">
         <input message="vim2:GetAlarmRequestMsg" />
         <output message="vim2:GetAlarmResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetAlarmState">
         <input message="vim2:GetAlarmStateRequestMsg" />
         <output message="vim2:GetAlarmStateResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadNextEvents">
         <input message="vim2:ReadNextEventsRequestMsg" />
         <output message="vim2:ReadNextEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadPreviousEvents">
         <input message="vim2:ReadPreviousEventsRequestMsg" />
         <output message="vim2:ReadPreviousEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCollectorForEvents">
         <input message="vim2:CreateCollectorForEventsRequestMsg" />
         <output message="vim2:CreateCollectorForEventsResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="LogUserEvent">
         <input message="vim2:LogUserEventRequestMsg" />
         <output message="vim2:LogUserEventResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryEvents">
         <input message="vim2:QueryEventsRequestMsg" />
         <output message="vim2:QueryEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureAutostart">
         <input message="vim2:ReconfigureAutostartRequestMsg" />
         <output message="vim2:ReconfigureAutostartResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AutoStartPowerOn">
         <input message="vim2:AutoStartPowerOnRequestMsg" />
         <output message="vim2:AutoStartPowerOnResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AutoStartPowerOff">
         <input message="vim2:AutoStartPowerOffRequestMsg" />
         <output message="vim2:AutoStartPowerOffResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableHyperThreading">
         <input message="vim2:EnableHyperThreadingRequestMsg" />
         <output message="vim2:EnableHyperThreadingResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableHyperThreading">
         <input message="vim2:DisableHyperThreadingRequestMsg" />
         <output message="vim2:DisableHyperThreadingResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SearchDatastore_Task">
         <input message="vim2:SearchDatastore_TaskRequestMsg" />
         <output message="vim2:SearchDatastore_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SearchDatastoreSubFolders_Task">
         <input message="vim2:SearchDatastoreSubFolders_TaskRequestMsg" />
         <output message="vim2:SearchDatastoreSubFolders_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteFile">
         <input message="vim2:DeleteFileRequestMsg" />
         <output message="vim2:DeleteFileResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim2:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailableDisksForVmfs">
         <input message="vim2:QueryAvailableDisksForVmfsRequestMsg" />
         <output message="vim2:QueryAvailableDisksForVmfsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVmfsDatastoreCreateOptions">
         <input message="vim2:QueryVmfsDatastoreCreateOptionsRequestMsg" />
         <output message="vim2:QueryVmfsDatastoreCreateOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVmfsDatastore">
         <input message="vim2:CreateVmfsDatastoreRequestMsg" />
         <output message="vim2:CreateVmfsDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVmfsDatastoreExtendOptions">
         <input message="vim2:QueryVmfsDatastoreExtendOptionsRequestMsg" />
         <output message="vim2:QueryVmfsDatastoreExtendOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExtendVmfsDatastore">
         <input message="vim2:ExtendVmfsDatastoreRequestMsg" />
         <output message="vim2:ExtendVmfsDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateNasDatastore">
         <input message="vim2:CreateNasDatastoreRequestMsg" />
         <output message="vim2:CreateNasDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateLocalDatastore">
         <input message="vim2:CreateLocalDatastoreRequestMsg" />
         <output message="vim2:CreateLocalDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveDatastore">
         <input message="vim2:RemoveDatastoreRequestMsg" />
         <output message="vim2:RemoveDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ConfigureDatastorePrincipal">
         <input message="vim2:ConfigureDatastorePrincipalRequestMsg" />
         <output message="vim2:ConfigureDatastorePrincipalResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailablePartition">
         <input message="vim2:QueryAvailablePartitionRequestMsg" />
         <output message="vim2:QueryAvailablePartitionResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SelectActivePartition">
         <input message="vim2:SelectActivePartitionRequestMsg" />
         <output message="vim2:SelectActivePartitionResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPartitionCreateOptions">
         <input message="vim2:QueryPartitionCreateOptionsRequestMsg" />
         <output message="vim2:QueryPartitionCreateOptionsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPartitionCreateDesc">
         <input message="vim2:QueryPartitionCreateDescRequestMsg" />
         <output message="vim2:QueryPartitionCreateDescResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDiagnosticPartition">
         <input message="vim2:CreateDiagnosticPartitionRequestMsg" />
         <output message="vim2:CreateDiagnosticPartitionResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenewLease">
         <input message="vim2:RenewLeaseRequestMsg" />
         <output message="vim2:RenewLeaseResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReleaseLease">
         <input message="vim2:ReleaseLeaseRequestMsg" />
         <output message="vim2:ReleaseLeaseResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDefaultPolicy">
         <input message="vim2:UpdateDefaultPolicyRequestMsg" />
         <output message="vim2:UpdateDefaultPolicyResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableRuleset">
         <input message="vim2:EnableRulesetRequestMsg" />
         <output message="vim2:EnableRulesetResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableRuleset">
         <input message="vim2:DisableRulesetRequestMsg" />
         <output message="vim2:DisableRulesetResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshFirewall">
         <input message="vim2:RefreshFirewallRequestMsg" />
         <output message="vim2:RefreshFirewallResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateUser">
         <input message="vim2:CreateUserRequestMsg" />
         <output message="vim2:CreateUserResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateUser">
         <input message="vim2:UpdateUserRequestMsg" />
         <output message="vim2:UpdateUserResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateGroup">
         <input message="vim2:CreateGroupRequestMsg" />
         <output message="vim2:CreateGroupResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveUser">
         <input message="vim2:RemoveUserRequestMsg" />
         <output message="vim2:RemoveUserResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveGroup">
         <input message="vim2:RemoveGroupRequestMsg" />
         <output message="vim2:RemoveGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AssignUserToGroup">
         <input message="vim2:AssignUserToGroupRequestMsg" />
         <output message="vim2:AssignUserToGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnassignUserFromGroup">
         <input message="vim2:UnassignUserFromGroupRequestMsg" />
         <output message="vim2:UnassignUserFromGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim2:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureServiceConsoleReservation">
         <input message="vim2:ReconfigureServiceConsoleReservationRequestMsg" />
         <output message="vim2:ReconfigureServiceConsoleReservationResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateNetworkConfig">
         <input message="vim2:UpdateNetworkConfigRequestMsg" />
         <output message="vim2:UpdateNetworkConfigResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDnsConfig">
         <input message="vim2:UpdateDnsConfigRequestMsg" />
         <output message="vim2:UpdateDnsConfigResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpRouteConfig">
         <input message="vim2:UpdateIpRouteConfigRequestMsg" />
         <output message="vim2:UpdateIpRouteConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateConsoleIpRouteConfig">
         <input message="vim2:UpdateConsoleIpRouteConfigRequestMsg" />
         <output message="vim2:UpdateConsoleIpRouteConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddVirtualSwitch">
         <input message="vim2:AddVirtualSwitchRequestMsg" />
         <output message="vim2:AddVirtualSwitchResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveVirtualSwitch">
         <input message="vim2:RemoveVirtualSwitchRequestMsg" />
         <output message="vim2:RemoveVirtualSwitchResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateVirtualSwitch">
         <input message="vim2:UpdateVirtualSwitchRequestMsg" />
         <output message="vim2:UpdateVirtualSwitchResponseMsg" />
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddPortGroup">
         <input message="vim2:AddPortGroupRequestMsg" />
         <output message="vim2:AddPortGroupResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemovePortGroup">
         <input message="vim2:RemovePortGroupRequestMsg" />
         <output message="vim2:RemovePortGroupResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePortGroup">
         <input message="vim2:UpdatePortGroupRequestMsg" />
         <output message="vim2:UpdatePortGroupResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePhysicalNicLinkSpeed">
         <input message="vim2:UpdatePhysicalNicLinkSpeedRequestMsg" />
         <output message="vim2:UpdatePhysicalNicLinkSpeedResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryNetworkHint">
         <input message="vim2:QueryNetworkHintRequestMsg" />
         <output message="vim2:QueryNetworkHintResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddVirtualNic">
         <input message="vim2:AddVirtualNicRequestMsg" />
         <output message="vim2:AddVirtualNicResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveVirtualNic">
         <input message="vim2:RemoveVirtualNicRequestMsg" />
         <output message="vim2:RemoveVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateVirtualNic">
         <input message="vim2:UpdateVirtualNicRequestMsg" />
         <output message="vim2:UpdateVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddServiceConsoleVirtualNic">
         <input message="vim2:AddServiceConsoleVirtualNicRequestMsg" />
         <output message="vim2:AddServiceConsoleVirtualNicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveServiceConsoleVirtualNic">
         <input message="vim2:RemoveServiceConsoleVirtualNicRequestMsg" />
         <output message="vim2:RemoveServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServiceConsoleVirtualNic">
         <input message="vim2:UpdateServiceConsoleVirtualNicRequestMsg" />
         <output message="vim2:UpdateServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim2:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestartServiceConsoleVirtualNic">
         <input message="vim2:RestartServiceConsoleVirtualNicRequestMsg" />
         <output message="vim2:RestartServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshNetworkSystem">
         <input message="vim2:RefreshNetworkSystemRequestMsg" />
         <output message="vim2:RefreshNetworkSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServicePolicy">
         <input message="vim2:UpdateServicePolicyRequestMsg" />
         <output message="vim2:UpdateServicePolicyResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StartService">
         <input message="vim2:StartServiceRequestMsg" />
         <output message="vim2:StartServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StopService">
         <input message="vim2:StopServiceRequestMsg" />
         <output message="vim2:StopServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestartService">
         <input message="vim2:RestartServiceRequestMsg" />
         <output message="vim2:RestartServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UninstallService">
         <input message="vim2:UninstallServiceRequestMsg" />
         <output message="vim2:UninstallServiceResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshServices">
         <input message="vim2:RefreshServicesRequestMsg" />
         <output message="vim2:RefreshServicesResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckIfMasterSnmpAgentRunning">
         <input message="vim2:CheckIfMasterSnmpAgentRunningRequestMsg" />
         <output message="vim2:CheckIfMasterSnmpAgentRunningResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateSnmpConfig">
         <input message="vim2:UpdateSnmpConfigRequestMsg" />
         <output message="vim2:UpdateSnmpConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestartMasterSnmpAgent">
         <input message="vim2:RestartMasterSnmpAgentRequestMsg" />
         <output message="vim2:RestartMasterSnmpAgentResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StopMasterSnmpAgent">
         <input message="vim2:StopMasterSnmpAgentRequestMsg" />
         <output message="vim2:StopMasterSnmpAgentResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveDiskPartitionInfo">
         <input message="vim2:RetrieveDiskPartitionInfoRequestMsg" />
         <output message="vim2:RetrieveDiskPartitionInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ComputeDiskPartitionInfo">
         <input message="vim2:ComputeDiskPartitionInfoRequestMsg" />
         <output message="vim2:ComputeDiskPartitionInfoResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDiskPartitions">
         <input message="vim2:UpdateDiskPartitionsRequestMsg" />
         <output message="vim2:UpdateDiskPartitionsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FormatVmfs">
         <input message="vim2:FormatVmfsRequestMsg" />
         <output message="vim2:FormatVmfsResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim2:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanVmfs">
         <input message="vim2:RescanVmfsRequestMsg" />
         <output message="vim2:RescanVmfsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AttachVmfsExtent">
         <input message="vim2:AttachVmfsExtentRequestMsg" />
         <output message="vim2:AttachVmfsExtentResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVmfs">
         <input message="vim2:UpgradeVmfsRequestMsg" />
         <output message="vim2:UpgradeVmfsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVmLayout">
         <input message="vim2:UpgradeVmLayoutRequestMsg" />
         <output message="vim2:UpgradeVmLayoutResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanHba">
         <input message="vim2:RescanHbaRequestMsg" />
         <output message="vim2:RescanHbaResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanAllHba">
         <input message="vim2:RescanAllHbaRequestMsg" />
         <output message="vim2:RescanAllHbaResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateSoftwareInternetScsiEnabled">
         <input message="vim2:UpdateSoftwareInternetScsiEnabledRequestMsg" />
         <output message="vim2:UpdateSoftwareInternetScsiEnabledResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiDiscoveryProperties">
         <input message="vim2:UpdateInternetScsiDiscoveryPropertiesRequestMsg" />
         <output message="vim2:UpdateInternetScsiDiscoveryPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiAuthenticationProperties">
         <input message="vim2:UpdateInternetScsiAuthenticationPropertiesRequestMsg" />
         <output message="vim2:UpdateInternetScsiAuthenticationPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiIPProperties">
         <input message="vim2:UpdateInternetScsiIPPropertiesRequestMsg" />
         <output message="vim2:UpdateInternetScsiIPPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiName">
         <input message="vim2:UpdateInternetScsiNameRequestMsg" />
         <output message="vim2:UpdateInternetScsiNameResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiAlias">
         <input message="vim2:UpdateInternetScsiAliasRequestMsg" />
         <output message="vim2:UpdateInternetScsiAliasResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddInternetScsiSendTargets">
         <input message="vim2:AddInternetScsiSendTargetsRequestMsg" />
         <output message="vim2:AddInternetScsiSendTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveInternetScsiSendTargets">
         <input message="vim2:RemoveInternetScsiSendTargetsRequestMsg" />
         <output message="vim2:RemoveInternetScsiSendTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddInternetScsiStaticTargets">
         <input message="vim2:AddInternetScsiStaticTargetsRequestMsg" />
         <output message="vim2:AddInternetScsiStaticTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveInternetScsiStaticTargets">
         <input message="vim2:RemoveInternetScsiStaticTargetsRequestMsg" />
         <output message="vim2:RemoveInternetScsiStaticTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableMultipathPath">
         <input message="vim2:EnableMultipathPathRequestMsg" />
         <output message="vim2:EnableMultipathPathResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableMultipathPath">
         <input message="vim2:DisableMultipathPathRequestMsg" />
         <output message="vim2:DisableMultipathPathResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetMultipathLunPolicy">
         <input message="vim2:SetMultipathLunPolicyRequestMsg" />
         <output message="vim2:SetMultipathLunPolicyResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshStorageSystem">
         <input message="vim2:RefreshStorageSystemRequestMsg" />
         <output message="vim2:RefreshStorageSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpConfig">
         <input message="vim2:UpdateIpConfigRequestMsg" />
         <output message="vim2:UpdateIpConfigResponseMsg" />
         <fault name="NotFoundFault" message="vim2:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SelectVnic">
         <input message="vim2:SelectVnicRequestMsg" />
         <output message="vim2:SelectVnicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeselectVnic">
         <input message="vim2:DeselectVnicRequestMsg" />
         <output message="vim2:DeselectVnicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim2:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryOptions">
         <input message="vim2:QueryOptionsRequestMsg" />
         <output message="vim2:QueryOptionsResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateOptions">
         <input message="vim2:UpdateOptionsRequestMsg" />
         <output message="vim2:UpdateOptionsResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveScheduledTask">
         <input message="vim2:RemoveScheduledTaskRequestMsg" />
         <output message="vim2:RemoveScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureScheduledTask">
         <input message="vim2:ReconfigureScheduledTaskRequestMsg" />
         <output message="vim2:ReconfigureScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RunScheduledTask">
         <input message="vim2:RunScheduledTaskRequestMsg" />
         <output message="vim2:RunScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateScheduledTask">
         <input message="vim2:CreateScheduledTaskRequestMsg" />
         <output message="vim2:CreateScheduledTaskResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim2:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveEntityScheduledTask">
         <input message="vim2:RetrieveEntityScheduledTaskRequestMsg" />
         <output message="vim2:RetrieveEntityScheduledTaskResponseMsg" />
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RevertToSnapshot_Task">
         <input message="vim2:RevertToSnapshot_TaskRequestMsg" />
         <output message="vim2:RevertToSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim2:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim2:InvalidStateFaultMsg"/>
         <fault name="FileFaultFault" message="vim2:FileFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim2:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveSnapshot_Task">
         <input message="vim2:RemoveSnapshot_TaskRequestMsg" />
         <output message="vim2:RemoveSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim2:TaskInProgressFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameSnapshot">
         <input message="vim2:RenameSnapshotRequestMsg" />
         <output message="vim2:RenameSnapshotResponseMsg" />
         <fault name="InvalidNameFault" message="vim2:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim2:RuntimeFaultFaultMsg"/>
      </operation>
   </portType>
   <binding name="VimBinding" type="vim2:VimPortType">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
      <operation name="DestroyPropertyFilter">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateFilter">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPropertyFault">
            <soap:fault name="InvalidPropertyFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveProperties">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPropertyFault">
            <soap:fault name="InvalidPropertyFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckForUpdates">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidCollectorVersionFault">
            <soap:fault name="InvalidCollectorVersionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="WaitForUpdates">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidCollectorVersionFault">
            <soap:fault name="InvalidCollectorVersionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CancelWaitForUpdates">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddAuthorizationRole">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAuthorizationRole">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RemoveFailedFault">
            <soap:fault name="RemoveFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateAuthorizationRole">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MergePermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveRolePermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveEntityPermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveAllPermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetEntityPermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetEntityPermissions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveEntityPermission">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureCluster_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ApplyRecommendation">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RecommendHostsForVm">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveInto_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="TooManyHostsFault">
            <soap:fault name="TooManyHostsFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveHostInto_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TooManyHostsFault">
            <soap:fault name="TooManyHostsFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddCustomFieldDef">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveCustomFieldDef">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameCustomFieldDef">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetField">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DoesCustomizationSpecExist">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="OverwriteCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DuplicateCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CustomizationSpecItemToXml">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="XmlToCustomizationSpecItem">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCustomizationResources">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConnectionInfo">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDescriptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="BrowseDiagnosticLog">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CannotAccessFileFault">
            <soap:fault name="CannotAccessFileFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GenerateLogBundles_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="LogBundlingFailedFault">
            <soap:fault name="LogBundlingFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigOptionDescriptor">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigOption">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigTarget">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateFolder">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveIntoFolder_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidFolderFault">
            <soap:fault name="InvalidFolderFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RegisterVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCluster">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddStandaloneHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDatacenter">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnregisterAndDestroy_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetCollectorPageSize">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RewindCollector">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetCollector">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyCollector">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryHostConnectionInfo">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateSystemResources">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconnectHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisconnectHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnterMaintenanceMode_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExitMaintenanceMode_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RebootHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ShutdownHost_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryMemoryOverhead">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureHostForDAS_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DasConfigFaultFault">
            <soap:fault name="DasConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryLicenseSourceAvailability">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryLicenseUsage">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetLicenseEdition">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckLicenseFeature">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableFeature">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableFeature">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ConfigureLicenseSource">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CannotAccessLocalSourceFault">
            <soap:fault name="CannotAccessLocalSourceFault" use="literal" />
         </fault>
         <fault name="InvalidLicenseFault">
            <soap:fault name="InvalidLicenseFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Reload">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Rename_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Destroy_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VimFaultFault">
            <soap:fault name="VimFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyNetwork">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfProviderSummary">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailablePerfMetric">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfCounter">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerf">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfComposite">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreatePerfInterval">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemovePerfInterval">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePerfInterval">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveIntoResourcePool">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateChildResourceConfiguration">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateResourcePool">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyChildren">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByUuid">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByDatastorePath">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByDnsName">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByIp">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByInventoryPath">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindChild">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CurrentTime">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveServiceContent">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ValidateMigration">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVMotionCompatibility">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServiceMessage">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Login">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Logout">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireLocalTicket">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="TerminateSession">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetLocale">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CancelTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadNextTasks">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadPreviousTasks">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCollectorForTasks">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveUserGroups">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateSnapshot_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RevertToCurrentSnapshot_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAllSnapshots_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="AlreadyUpgradedFault">
            <soap:fault name="AlreadyUpgradedFault" use="literal" />
         </fault>
         <fault name="NoDiskFoundFault">
            <soap:fault name="NoDiskFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOnVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOffVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SuspendVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ShutdownGuest">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RebootGuest">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StandbyGuest">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AnswerVM">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CustomizeVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCustomizationSpec">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MigrateVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RelocateVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CloneVM_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MarkAsTemplate">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MarkAsVirtualMachine">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnregisterVM">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetGuestInformation">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MountToolsInstaller">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnmountToolsInstaller">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeTools_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmToolsUpgradeFaultFault">
            <soap:fault name="VmToolsUpgradeFaultFault" use="literal" />
         </fault>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireMksTicket">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetScreenResolution">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAlarm">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureAlarm">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateAlarm">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetAlarm">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetAlarmState">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadNextEvents">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadPreviousEvents">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCollectorForEvents">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="LogUserEvent">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryEvents">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureAutostart">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AutoStartPowerOn">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AutoStartPowerOff">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableHyperThreading">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableHyperThreading">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SearchDatastore_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SearchDatastoreSubFolders_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteFile">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailableDisksForVmfs">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVmfsDatastoreCreateOptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVmfsDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVmfsDatastoreExtendOptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExtendVmfsDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateNasDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateLocalDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveDatastore">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ConfigureDatastorePrincipal">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailablePartition">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SelectActivePartition">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPartitionCreateOptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPartitionCreateDesc">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDiagnosticPartition">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenewLease">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReleaseLease">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDefaultPolicy">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableRuleset">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableRuleset">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshFirewall">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateUser">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateUser">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveUser">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AssignUserToGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnassignUserFromGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureServiceConsoleReservation">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateNetworkConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDnsConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpRouteConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateConsoleIpRouteConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddVirtualSwitch">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveVirtualSwitch">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateVirtualSwitch">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddPortGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemovePortGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePortGroup">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePhysicalNicLinkSpeed">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryNetworkHint">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddServiceConsoleVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveServiceConsoleVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServiceConsoleVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestartServiceConsoleVirtualNic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshNetworkSystem">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServicePolicy">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StartService">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StopService">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestartService">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UninstallService">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshServices">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckIfMasterSnmpAgentRunning">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateSnmpConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestartMasterSnmpAgent">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StopMasterSnmpAgent">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveDiskPartitionInfo">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ComputeDiskPartitionInfo">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDiskPartitions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FormatVmfs">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanVmfs">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AttachVmfsExtent">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVmfs">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVmLayout">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanHba">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanAllHba">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateSoftwareInternetScsiEnabled">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiDiscoveryProperties">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiAuthenticationProperties">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiIPProperties">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiName">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiAlias">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddInternetScsiSendTargets">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveInternetScsiSendTargets">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddInternetScsiStaticTargets">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveInternetScsiStaticTargets">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableMultipathPath">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableMultipathPath">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetMultipathLunPolicy">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshStorageSystem">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpConfig">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SelectVnic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeselectVnic">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryOptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateOptions">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveScheduledTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureScheduledTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RunScheduledTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateScheduledTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveEntityScheduledTask">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RevertToSnapshot_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveSnapshot_Task">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameSnapshot">
         <soap:operation soapAction="" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
   </binding>

   <service name="whatever">
    <port name="VIMPort" binding="VimBinding">
      <soap:address location="http://localhost:8080/VIMService"/>
    </port>
  </service>


</definitions>
